Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
==================================================================================
# APPEND - Test that APPEND deviceparameter appends to the end of the file

GTM>

1    BLAH
2    MORE BLAH
PASS

GTM>
==================================================================================
# DELETE  - Test that the DELETE deviceparameter for CLOSE actually deletes the file.

GTM>
PASS, file is deleted

GTM>
==================================================================================
# Test fixed length reads

GTM>
Will test a valid fixed len (1048576)
The length of variable line read was:12
The length of variable line read was:17
Will test an invalid fixed len (1048577)
150377474,fixedlen+16^fixedlen,%YDB-E-RDFLTOOLONG, Length specified for fixed length read exceeds the maximum string size
==================================================================================
# RENAME - Test that the RENAME deviceparameter for CLOSE actually renames the file.

GTM>
expect this message in attempt to rename to self then a PASS
PASS
File: renamed.txt
#l   $L(l)   l
1    4       BLAH

GTM>
==================================================================================
# REWIND -test that REWIND does rewind to the beginning of the file

GTM>

REWIND with USE:
File: rewind.txt
#l   $L(l)   l
1    4       BLAH
2    9       MORE BLAH
3    9       ABCDEFGHI
4    15      ABCDEFGHIJKLMNO
5    32768   <630_ALPHABETalphabets>ABCDEFGH
6    65536   <1260_ALPHABETalphabets>ABCDEFGHIJKLMNOP
7    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
8    131072  <2520_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef
9    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
10   11      END OF FILE
PASS

AGAIN:
File: rewind.txt
#l   $L(l)   l
1    4       BLAH
2    9       MORE BLAH
3    9       ABCDEFGHI
4    15      ABCDEFGHIJKLMNO
5    32768   <630_ALPHABETalphabets>ABCDEFGH
6    65536   <1260_ALPHABETalphabets>ABCDEFGHIJKLMNOP
7    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
8    131072  <2520_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef
9    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
10   11      END OF FILE
PASS

REWIND with CLOSE:
File: rewind.txt
#l   $L(l)   l
1    4       BLAH
2    9       MORE BLAH
3    9       ABCDEFGHI
4    15      ABCDEFGHIJKLMNO
5    32768   <630_ALPHABETalphabets>ABCDEFGH
6    65536   <1260_ALPHABETalphabets>ABCDEFGHIJKLMNOP
7    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
8    131072  <2520_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef
9    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
10   11      END OF FILE
PASS

REWIND with OPEN:
File: rewind.txt
#l   $L(l)   l
1    4       BLAH
2    9       MORE BLAH
3    9       ABCDEFGHI
4    15      ABCDEFGHIJKLMNO
5    32768   <630_ALPHABETalphabets>ABCDEFGH
6    65536   <1260_ALPHABETalphabets>ABCDEFGHIJKLMNOP
7    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
8    131072  <2520_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef
9    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
10   11      END OF FILE
PASS

GTM>
==================================================================================
# READONLY - Test that a device that was opened READONLY cannot be written into.

GTM>
File: readonly.txt
#l   $L(l)   l
1    4       BLAH
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
In ZTRAP
150373618,readonly+11^readonly,%YDB-E-DEVICEREADONLY, Cannot write to read-only device
The file, again:
File: readonly.txt
#l   $L(l)   l
1    4       BLAH
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
==================================================================================
# TRUNCATE - Test that TRUNCATE deviceparameter works for OPEN and USE.

GTM>
TRUNCATE with OPEN on a non-existent file
File: truncate.txt
#l   $L(l)   l
1    15      BLAH, version 1
2    21      MORE BLAH1, version 1
3    21      MORE BLAH2, version 1
4    32768   <630_ALPHABETalphabets>ABCDEFGH
5    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
6    22      END OF FILE, version 1
TRUNCATE with OPEN on an existing file
File: truncate.txt
#l   $L(l)   l
1    15      BLAH, version 2
2    21      MORE BLAH1, version 2
3    21      MORE BLAH2, version 2
4    21      MORE BLAH3, version 2
5    21      MORE BLAH4, version 2
6    32768   <630_ALPHABETalphabets>ABCDEFGH
7    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
8    22      END OF FILE, version 2
TRUNCATE with USE on an existing file
File: truncate.txt
#l   $L(l)   l
1    15      BLAH, version 2
2    21      MORE BLAH1, version 2
3    21      MORE BLAH1, version 3
4    26      EVEN MORE BLAH2, version 3
5    32768   <630_ALPHABETalphabets>ABCDEFGH
6    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
7    22      END OF FILE, version 3
TRUNCATE with USE on an existing file in FIXED mode
File: truncate.txt
#l   $L(l)   l
1    15      BLAH, version 2
2    21      MORE BLAH1, version 2
3    21      MORE BLAH1, version 3
4    26      EVEN MORE BLAH2, version 3
5    32768   <630_ALPHABETalphabets>ABCDEFGH
6    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
7    22      END OF FILE, version 3
8    1048576 MORE BLAH1, version 4                                                           <...length=1048576...> 
9    1048576 EVEN MORE BLAH2, version 4                                                      <...length=1048576...> 
10   1048576 END OF FILE, version 4                                                          <...length=1048576...> 
TRUNCATE with USE on an existing file in FIXED mode and read#n
File: truncate.txt
#l   $L(l)   l
1    15      BLAH, version 2
2    21      MORE BLAH1, version 2
3    21      MORE BLAH1, version 3
4    26      EVEN MORE BLAH2, version 3
5    32768   <630_ALPHABETalphabets>ABCDEFGH
6    1048576 <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv
7    22      END OF FILE, version 3
8    1048576 MORE BLAH1, version 4                                                           <...length=1048576...> 
9    1048576                                                                                 <...length=1048576...> 
10   1048576                                                                                 <...length=1048576...> 
11   967120                                                                                  <...length=967120...> 

GTM>
==================================================================================
# FIXED - test that FIXED records work as expected.

GTM>
-> OPEN "fixed1.txt":(NEWVERSION:FIXED:RECORDSIZE=10)
-> USE "fixed1.txt":(WIDTH=20)
File: fixed1.txt
#l   $L(l)   l
1    100     123                 123                 123                 blah blah blah      <...length=100...> 
             12345678901234567890123456789012345678901234567890123456789012345678901234567890
-> OPEN "fixed2.txt":(NEWVERSION:FIXED:RECORDSIZE=12)
-> USE "fixed2.txt"
File: fixed2.txt
#l   $L(l)   l
1    72      123         123         123         blah blah blah          123         
             123456789012123456789012123456789012123456789012123456789012
-> OPEN "fixed3.txt":(NEWVERSION:FIXED:RECORDSIZE=15)
-> USE "fixed3.txt":(WIDTH=10)
File: fixed3.txt
#l   $L(l)   l
1    60      123       123       123       blah blah blah      123       
             12345678901234567890123456789012345678901234567890

GTM>
==================================================================================
# RECORDSIZE and WIDTH

GTM>
-> OPEN "recordwidth1.txt":(NEWVERSION:RECORDSIZE=10)
-> USE "recordwidth1.txt":(width=20)
-> CLOSE "recordwidth1.txt"
File: recordwidth1.txt
#l   $L(l)   l
1    16      1234567890123 14
-> OPEN "recordwidth2.txt":(newversion:recordsize=20)
-> USE "recordwidth2.txt":(width=10)
-> CLOSE "recordwidth2.txt"
File: recordwidth2.txt
#l   $L(l)   l
1    10      1234567890
2    5       123 4
-> OPEN "recordwidth3.txt":(newversion:recordsize=10)
-> USE "recordwidth3.txt"
-> CLOSE "recordwidth3.txt"
File: recordwidth3.txt
#l   $L(l)   l
1    10      1234567890
2    10      123 412345
3    10      67890123 9

GTM>
==================================================================================
# LENGTH

GTM>
-> OPEN "length0.txt":(NEWVERSION)
-> USE "length0.txt":(LENGTH=0)
$Y is:1490
$Y is:1491
$Y is:1492
$Y is:1493
$Y is:1494
$Y is:1495
$Y is:1496
$Y is:1497
$Y is:1498
$Y is:1499
-> OPEN "length1.txt":(NEWVERSION)
-> USE "length1.txt":(LENGTH=1)
$Y is:0
$Y is:0
$Y is:0
$Y is:0
$Y is:0
$Y is:0
$Y is:0
$Y is:0
$Y is:0
$Y is:0
-> OPEN "length100.txt":(NEWVERSION)
-> USE "length100.txt":(LENGTH=100)
$Y is:90
$Y is:91
$Y is:92
$Y is:93
$Y is:94
$Y is:95
$Y is:96
$Y is:97
$Y is:98
$Y is:99
-> OPEN "length505.txt":(NEWVERSION)
-> USE "length505.txt":(LENGTH=505)
$Y is:480
$Y is:481
$Y is:482
$Y is:483
$Y is:484
$Y is:485
$Y is:486
$Y is:487
$Y is:488
$Y is:489

GTM>
==================================================================================
# FIFO - RECORDSIZE and WIDTH limits for FIFO devices

GTM>
##SUSPEND_OUTPUT HOST_OS390_S390
TEST-I-FNF, file is not found
##ALLOW_OUTPUT HOST_OS390_S390
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE:RECORDSIZE=-1):60
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
150375962,open+10^io,%YDB-E-RMWIDTHPOS, File record size or width must be greater than zero
error+6^fifo
open+10^io
    ($ZTRAP)
test+3^fifo
fifo+20^fifo
##Direct mode## 
Will continue with the rest of the tests...
TEST-I-OK, was expecting an error
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
TEST-I-FNF, file is not found
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE:RECORDSIZE=-1):60
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
150375962,open+10^io,%YDB-E-RMWIDTHPOS, File record size or width must be greater than zero
error+6^fifo
open+10^io
    ($ZTRAP)
test+3^fifo
dotests+1^fifo
##Direct mode## 
Will continue with the rest of the tests...
TEST-I-OK, was expecting an error
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE:RECORDSIZE=0):60
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
150375962,open+10^io,%YDB-E-RMWIDTHPOS, File record size or width must be greater than zero
error+6^fifo
open+10^io
    ($ZTRAP)
test+3^fifo
dotests+2^fifo
##Direct mode## 
Will continue with the rest of the tests...
TEST-I-OK, was expecting an error
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE:RECORDSIZE=1):60
-> USE "fifo.pipe"
ZSHOW "D" output: fifo.pipe OPEN FIFO REC=1 
PASS
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE:RECORDSIZE=32767):60
-> USE "fifo.pipe"
ZSHOW "D" output: fifo.pipe OPEN FIFO 
PASS
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE:RECORDSIZE=1048576):60
-> USE "fifo.pipe"
ZSHOW "D" output: fifo.pipe OPEN FIFO REC=1048576 
PASS
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE:RECORDSIZE=1048580):60
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
150376194,open+10^io,%YDB-E-RMWIDTHTOOBIG, File record size or width too big
error+6^fifo
open+10^io
    ($ZTRAP)
test+3^fifo
dotests+6^fifo
##Direct mode## 
Will continue with the rest of the tests...
TEST-I-OK, was expecting an error
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE):60
-> USE "fifo.pipe":(WIDTH=-1)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
150375962,use+6^io,%YDB-E-RMWIDTHPOS, File record size or width must be greater than zero
error+6^fifo
use+6^io
    ($ZTRAP)
test+6^fifo
dotests+8^fifo
##Direct mode## 
Will continue with the rest of the tests...
TEST-I-OK, was expecting an error
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE):60
-> USE "fifo.pipe":(WIDTH=0)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
150375962,use+6^io,%YDB-E-RMWIDTHPOS, File record size or width must be greater than zero
error+6^fifo
use+6^io
    ($ZTRAP)
test+6^fifo
dotests+9^fifo
##Direct mode## 
Will continue with the rest of the tests...
TEST-I-OK, was expecting an error
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE):60
-> USE "fifo.pipe":(WIDTH=1)
ZSHOW "D" output: fifo.pipe OPEN FIFO REC=1 
PASS
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE):60
-> USE "fifo.pipe":(WIDTH=32767)
ZSHOW "D" output: fifo.pipe OPEN FIFO 
PASS
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE):60
-> USE "fifo.pipe":(WIDTH=1048576)
ZSHOW "D" output: fifo.pipe OPEN FIFO REC=1048576 
PASS
---------------------------------------------
Test: fifo.pipe
-> OPEN "fifo.pipe":(FIFO:WRITE):60
-> USE "fifo.pipe":(WIDTH=1048580)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
150376194,use+6^io,%YDB-E-RMWIDTHTOOBIG, File record size or width too big
error+6^fifo
use+6^io
    ($ZTRAP)
test+6^fifo
dotests+13^fifo
##Direct mode## 
Will continue with the rest of the tests...
TEST-I-OK, was expecting an error
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

GTM>

GTM>

GTM>
message: <20164_ALPHABETalphabets>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm
nop
message: QUIT
==================================================================================
# DESTROY - Test that the DESTROY deviceparameter for CLOSE destroy the sequential disk file device.

GTM>
Test 1: Test if the default option is destroy
Before closing file: 
ZSHOW "D" output: DESTROY.TXT OPEN RMS 
After closing file: 

Test 2: Test destroy parameter
Before closing file
ZSHOW "D" output: DESTROY.TXT OPEN RMS 
After closing file

Test 3: Test nodestroy parameter
Before closing file
ZSHOW "D" output: DESTROY.TXT OPEN RMS 
After closing file
ZSHOW "D" output: DESTROY.TXT CLOSED 

GTM>
==================================================================================
# DESTROY - Test that the DESTROY deviceparameter for CLOSE destroy the FIFO and PIPE device.

GTM>
Test 1: Test if the default option is destroy
Before closing fifoX and pipeY: 
ZSHOW "D" output: fifonamedpipe OPEN FIFO 
ZSHOW "D" output: unnamedpipe OPEN PIPE COMMAND="ls" 
After closing fifoX and pipeY: 

Test 2: Test destroy parameter
Before closing fifoX and pipeY: 
ZSHOW "D" output: fifonamedpipe OPEN FIFO 
ZSHOW "D" output: unnamedpipe OPEN PIPE COMMAND="ls" 
After closing fifoX and pipeY: 

Test 3: Test nodestroy parameter
Before closing fifoX and pipeY: 
ZSHOW "D" output: fifonamedpipe OPEN FIFO 
ZSHOW "D" output: unnamedpipe OPEN PIPE COMMAND="ls" 
After closing fifoX and pipeY: 

GTM>
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
