--> Test $ZYSQLNULL and $ZYISSQLNULL()
# Create shared library for alternate collation # 1 (reverse collation) : Needed by a small portion of the tests.
# Create shared library for alternate collation # 0 (straight collation).
# Do this after creating reverse collation shared library so test starts and mostly runs with straight collation.
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
		set $ZYSQLNULL=x
		     ^-----
		At column 7, line 57, source module ##IN_TEST_PATH##/inref/ydb484.m
%YDB-E-SVNOSET, Cannot SET this special variable
		set $ZYSQLNULL=""
		     ^-----
		At column 7, line 58, source module ##IN_TEST_PATH##/inref/ydb484.m
%YDB-E-SVNOSET, Cannot SET this special variable
################################################################
# Test : ydb484a : Test following section of functional spec
----------------------------------------------------------------
# The read-only [$ZYSQ]LNULL intrinsic special variable is conceptually equivalent to a logical value of unknown,
#    and can be assigned as the value or a subscript of a lvn (local varible node).
# $ZYSQLNULL can be a subscript of an lvn. In that case, it will collate after "", numeric subscripts and string
#    subscripts i.e. $ORDER and $QUERY will return that subscript at the very end.
################################################################

--> Test setting unsubscripted lvn to $ZYSQLNULL
x=$ZYSQLNULL
--> Test setting subscripted lvn to $ZYSQLNULL
x("")=$ZYSQLNULL
x(1)=$ZYSQLNULL
x("abcd")=$ZYSQLNULL
--> Test setting $ZYSQLNULL as a subscript
x($ZYSQLNULL)=$ZYSQLNULL
x($ZYSQLNULL,1)=$ZYSQLNULL
--> Test that $ZYSQLNULL setting transfers from lvn subscript back to value
 -> ZWRITE of y should have subscript of $ZYSQLNULL and z should have value of $ZYSQLNULL
x=$ZYSQLNULL
y($ZYSQLNULL)=1
z=$ZYSQLNULL
--> Test setting null subscripts as well as $ZYSQLNULL as a subscript and see how ZWRITE works
z("")=0
z(1)=2
z("abcd")=1
z($ZYSQLNULL)=$ZYSQLNULL
 -> Test ZWRITE after killing null subscript but leaving $ZYSQLNULL subscript as is
z(1)=2
z("abcd")=1
z($ZYSQLNULL)=$ZYSQLNULL
 -> Test ZWRITE after killing null subscript and killing $ZYSQLNULL subscript
z(1)=2
z("abcd")=1
 -> Test ZWRITE after resetting $ZYSQLNULL subscript
z(1)=2
z("abcd")=1
z($ZYSQLNULL)=3
 -> Test ZWRITE after resetting null subscript
z("")=4
z(1)=2
z("abcd")=1
z($ZYSQLNULL)=3
--> Test setting $ZYSQLNULL to a value : Should issue error
ZSTATUS=ydb484a+32^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
ZSTATUS=ydb484a+33^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
--> Test setting null subscripts and $ZYSQLNULL as a subscript and see how $ORDER(,1) handles things
 -> zwrite each subscript as we see it in a $ORDER(,1) loop
subs=2
subs="abcd"
subs="efgh"
subs=$ZYSQLNULL
 -> Try out specific $ORDER(,1) and zwrite result
subs=""
rslt=2
subs=2
rslt="abcd"
subs="abcd"
rslt="efgh"
subs="efgh"
rslt=$ZYSQLNULL
subs="ijkl"
rslt=$ZYSQLNULL
subs=$ZYSQLNULL
rslt=""
--> Test setting null subscripts and $ZYSQLNULL as a subscript and see how $ORDER(,-1) handles things
 -> zwrite each subscript as we see it in a $ORDER(,-1) loop
subs=$ZYSQLNULL
subs="efgh"
subs="abcd"
subs=2
 -> Try out specific $ORDER(,-1) and zwrite result
subs=""
rslt=$ZYSQLNULL
subs=2
rslt=""
subs="aaa"
rslt=2
subs="abcd"
rslt=2
subs="efgh"
rslt="abcd"
subs=$ZYSQLNULL
rslt="efgh"
--> Test that $ZWRITE($ZYSQLNULL) prints $ZYSQLNULL
$ZWRITE(z)=$ZYSQLNULL
$ZWRITE($ZYSQLNULL)=$ZYSQLNULL
--> Test that $ZWRITE($ZYSQLNULL) output can be fed to $ZWRITE(,1) to get back $ZYSQLNULL
$ZWRITE($ZWRITE($ZYSQLNULL),1)=$ZYSQLNULL
--> Test setting null subscripts and $ZYSQLNULL as a subscript and see how $QUERY(,1) and (,-1) handles things
 -> Forward query loop
x("")
x("","")
x("","","")
x("","",1)
x("","",$ZYSQLNULL)
x("",1)
x("",1,"")
x("",1,1)
x("",1,$ZYSQLNULL)
x("",$ZYSQLNULL)
x("",$ZYSQLNULL,"")
x("",$ZYSQLNULL,1)
x("",$ZYSQLNULL,$ZYSQLNULL)
x(1)
x(1,"")
x(1,"","")
x(1,"",1)
x(1,"",$ZYSQLNULL)
x(1,1)
x(1,1,"")
x(1,1,1)
x(1,1,$ZYSQLNULL)
x(1,$ZYSQLNULL)
x(1,$ZYSQLNULL,"")
x(1,$ZYSQLNULL,1)
x(1,$ZYSQLNULL,$ZYSQLNULL)
x($ZYSQLNULL)
x($ZYSQLNULL,"")
x($ZYSQLNULL,"","")
x($ZYSQLNULL,"",1)
x($ZYSQLNULL,"",$ZYSQLNULL)
x($ZYSQLNULL,1)
x($ZYSQLNULL,1,"")
x($ZYSQLNULL,1,1)
x($ZYSQLNULL,1,$ZYSQLNULL)
x($ZYSQLNULL,$ZYSQLNULL)
x($ZYSQLNULL,$ZYSQLNULL,"")
x($ZYSQLNULL,$ZYSQLNULL,1)
x($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL)
 -> Reverse query loop (will miss $ZYSQLNULL first-level subscript as there is no greater subscript to start loop)
x(1,$ZYSQLNULL,$ZYSQLNULL)
x(1,$ZYSQLNULL,1)
x(1,$ZYSQLNULL,"")
x(1,$ZYSQLNULL)
x(1,1,$ZYSQLNULL)
x(1,1,1)
x(1,1,"")
x(1,1)
x(1,"",$ZYSQLNULL)
x(1,"",1)
x(1,"","")
x(1,"")
x(1)
x("",$ZYSQLNULL,$ZYSQLNULL)
x("",$ZYSQLNULL,1)
x("",$ZYSQLNULL,"")
x("",$ZYSQLNULL)
x("",1,$ZYSQLNULL)
x("",1,1)
x("",1,"")
x("",1)
x("","",$ZYSQLNULL)
x("","",1)
x("","","")
x("","")
x("")
--> Test MERGE command with lvn that has $ZYSQLNULL in subscripts and values
y("")=1
y("","")=2
y("","","")=3
y("","",1)=5
y("","",$ZYSQLNULL)=4
y("",1)=10
y("",1,"")=11
y("",1,1)=13
y("",1,$ZYSQLNULL)=12
y("",$ZYSQLNULL)=6
y("",$ZYSQLNULL,"")=7
y("",$ZYSQLNULL,1)=9
y("",$ZYSQLNULL,$ZYSQLNULL)=8
y(1)=27
y(1,"")=28
y(1,"","")=29
y(1,"",1)=31
y(1,"",$ZYSQLNULL)=30
y(1,1)=36
y(1,1,"")=37
y(1,1,1)=39
y(1,1,$ZYSQLNULL)=38
y(1,$ZYSQLNULL)=32
y(1,$ZYSQLNULL,"")=33
y(1,$ZYSQLNULL,1)=35
y(1,$ZYSQLNULL,$ZYSQLNULL)=34
y("$ZYSQLNULL")=$ZYSQLNULL
y($ZYSQLNULL)=14
y($ZYSQLNULL,"")=15
y($ZYSQLNULL,"","")=16
y($ZYSQLNULL,"",1)=18
y($ZYSQLNULL,"",$ZYSQLNULL)=17
y($ZYSQLNULL,1)=23
y($ZYSQLNULL,1,"")=24
y($ZYSQLNULL,1,1)=26
y($ZYSQLNULL,1,$ZYSQLNULL)=25
y($ZYSQLNULL,$ZYSQLNULL)=19
y($ZYSQLNULL,$ZYSQLNULL,"")=20
y($ZYSQLNULL,$ZYSQLNULL,1)=22
y($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL)=21
--> Test VIEW "LVNULLSUBS", VIEW "NOLVNULLSUBS" and VIEW "NEVERLVNULLSUBS" works fine with $ZYSQLNULL
 -> Testing with VIEW "NOLVNULLSUBS"
x($ZYSQLNULL)=$ZYSQLNULL
y=$ZYSQLNULL
z($ZYSQLNULL)=$ZYSQLNULL
 -> Testing with VIEW "NEVERLVNULLSUBS"
x($ZYSQLNULL)=$ZYSQLNULL
y=$ZYSQLNULL
z($ZYSQLNULL)=$ZYSQLNULL
 -> Testing with VIEW "LVNULLSUBS"
x($ZYSQLNULL)=$ZYSQLNULL
y=$ZYSQLNULL
z($ZYSQLNULL)=$ZYSQLNULL
--> Test $NAME works with $ZYSQLNULL as subscript
abcd(3,$ZYSQLNULL)
--> Test alias base variables and containers with $ZYSQLNULL
 -> zwrite x,y,z,k
x("")=1
x("abcd")=3
x($ZYSQLNULL)=2
y("")=1
y("abcd")=3
y($ZYSQLNULL)=2
*z(3)=k
k("")=1
k("abcd")=3
k($ZYSQLNULL)=2
 -> zwrite
k("")=1
k("abcd")=3
k($ZYSQLNULL)=2
*x=k
*y=k
*z(3)=k
--> Test that if TREF(local_collseq) is set, $ZYSQLNULL does not get collation transformed in $ORDER etc.
 -> Switch to local alternative collation : 1 (reverse collation)
 -> Set a few nodes in `x` lvn and do zwrite
x("")=1
x("z")=4
x("a")=3
x($ZYSQLNULL)=2
 -> merge `x` into `y` and do zwrite of `y`
y("")=1
y("z")=4
y("a")=3
y($ZYSQLNULL)=2
 -> Switch back to default alternative collation : 0 (ascii collation)
--> FUTURE_TODO: Test that $ZYSQLNULL works fine in SimpleAPI and SimpleThreadAPI
This is not easily doable since SimpleAPI does not return an mval but instead just a ydb_buffer_t which has
no notion of an mvtype. Maybe we need to set len_used to -1 to indicate $ZYSQLNULL return say from ydb_get_s
Something to consider for the future as the need arises.

################################################################
# Test : ydb484b : Test following section of functional spec
----------------------------------------------------------------
# ZSHOW and ZWRITE of $ZYSQLNULL values show a value of $ZYSQLNULL.
# WRITE does not show any value for $ZYSQLNULL just like it does with "".
################################################################
--> Test that ZSHOW displays $ZYSQLNULL fine
 -> Test ZSHOW "V" displays $ZYSQLNULL fine and one can use SET @ syntax to restore values from ZSHOW output
 -> Executing : set x=$ZYSQLNULL,x(1,$ZYSQLNULL)=2 zshow "v":y zwrite  kill x set @y("V",1),@y("V",2) zwrite x
x=$ZYSQLNULL
x(1,$ZYSQLNULL)=2
xstr="set x=$ZYSQLNULL,x(1,$ZYSQLNULL)=2 zshow ""v"":y zwrite  kill x set @y(""V"",1),@y(""V"",2) zwrite x"
y("V",1)="x=$ZYSQLNULL"
y("V",2)="x(1,$ZYSQLNULL)=2"
y("V",3)="xstr=""set x=$ZYSQLNULL,x(1,$ZYSQLNULL)=2 zshow """"v"""":y zwrite  kill x set @y(""""V"""",1),@y(""""V"""",2) zwrite x"""
x=$ZYSQLNULL
x(1,$ZYSQLNULL)=2
--> Test that WRITE $ZYSQLNULL prints an empty string
$ZYSQLNULL=[]
--> Test that ZWRITE $ZYSQLNULL works
 -> ZWRITE $ZYSQLNULL
$ZYSQLNULL=$ZYSQLNULL
 -> ZWRITE @"$ZYSQLNULL"
$ZYSQLNULL=$ZYSQLNULL

################################################################
# Test : ydb484c : Test following section of functional spec
----------------------------------------------------------------
# The function $ZYISSQLNULL() returns 1 if its sole argument has a value $ZYSQLNULL, and 0 otherwise.
################################################################
--> Test : write $ZYISSQLNULL($ZYSQLNULL) : 1
--> Test : write $ZYISSQLNULL("") : 0
--> Test : write $ZYISSQLNULL(0) : 0
--> Test : write $ZYISSQLNULL(-2.5) : 0
--> Test : write $ZYISSQLNULL("abcd") : 0
--> Test : set x=$ZYSQLNULL write $ZYISSQLNULL(x) : 1
--> Test : set x=" write $ZYISSQLNULL(x) : 0
--> Test : set x=0 write $ZYISSQLNULL(x) : 0
--> Test : set x=-2.5 write $ZYISSQLNULL(x) : 0
--> Test : set x="abcd" write $ZYISSQLNULL(x) : 0

################################################################
# Test : ydb484d : Test following section of functional spec
----------------------------------------------------------------
# When $ZYSQLNULL is an operand, the results are as follows:
# Operator  : Result
# --------------------
# Binary !  : If the other operand evaluates to true (1), the result is true, otherwise the result is $ZYSQLNULL
# Binary &  : If the other operand evalutes to false (0), the result is false, otherwise the result is $ZYSQLNULL
# All binary operators except ! and & : Regardless of the value of the other operand, the result is $ZYSQLNULL
# Unary +   : $ZYSQLNULL
# Unary -   : $ZYSQLNULL
# Unary '   : $ZYSQLNULL
################################################################
-----------------------------
--> Test Arithmetic Operators
-----------------------------
 -> Test + unary operator  (FORCE CONVERSION TO NUMERIC)
set x=+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL,y=+x zwrite y
y=$ZYSQLNULL
 -> Test - unary operator  (NEGATION)
set x=-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL,y=-x zwrite y
y=$ZYSQLNULL
 -> Test + binary operator (ADDITION)
set x=$ZYSQLNULL+0 zwrite x
x=$ZYSQLNULL
set x=0+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+"" zwrite x
x=$ZYSQLNULL
set x=""+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+20 zwrite x
x=$ZYSQLNULL
set x=20+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL+$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test - binary operator (SUBTRACTION)
set x=$ZYSQLNULL-0 zwrite x
x=$ZYSQLNULL
set x=0-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL-"" zwrite x
x=$ZYSQLNULL
set x=""-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL-"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL-"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL-20 zwrite x
x=$ZYSQLNULL
set x=20-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL--.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL--18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL-$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test * binary operator (MULTIPLICATION)
set x=$ZYSQLNULL*0 zwrite x
x=$ZYSQLNULL
set x=0*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*"" zwrite x
x=$ZYSQLNULL
set x=""*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*20 zwrite x
x=$ZYSQLNULL
set x=20*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL*$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test / binary operator (FRACTIONAL DIVISION)
set x=$ZYSQLNULL/0 zwrite x
x=$ZYSQLNULL
set x=0/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/"" zwrite x
x=$ZYSQLNULL
set x=""/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/20 zwrite x
x=$ZYSQLNULL
set x=20/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL/$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test \ binary operator (INTEGER DIVISION)
set x=$ZYSQLNULL\0 zwrite x
x=$ZYSQLNULL
set x=0\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\"" zwrite x
x=$ZYSQLNULL
set x=""\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\20 zwrite x
x=$ZYSQLNULL
set x=20\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL\$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test # binary operator (MODULO)
set x=$ZYSQLNULL#0 zwrite x
x=$ZYSQLNULL
set x=0#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#"" zwrite x
x=$ZYSQLNULL
set x=""#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#20 zwrite x
x=$ZYSQLNULL
set x=20#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL#$ZYSQLNULL zwrite x
x=$ZYSQLNULL
-----------------------------
--> Test String Operators
-----------------------------
 -> Test _ binary operator (STRING CONCATENATION)
set x=""_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"" zwrite x : x=$ZYSQLNULL
set x=""_""_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_$ZYSQLNULL_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_""_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_""_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_1_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_$ZYSQLNULL_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_""_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_1_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_"efgh"_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_$ZYSQLNULL_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_""_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"efgh"_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="efgh"_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_1 zwrite x : x=$ZYSQLNULL
set x=1_""_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_$ZYSQLNULL_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_1_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_""_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_1_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_$ZYSQLNULL_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_1_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_1_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_"efgh"_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_$ZYSQLNULL_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_1_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"efgh"_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="efgh"_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="abcd"_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"abcd" zwrite x : x=$ZYSQLNULL
set x="abcd"_""_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="abcd"_$ZYSQLNULL_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"abcd"_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_"" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_""_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=""_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="abcd"_1_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="abcd"_$ZYSQLNULL_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"abcd"_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_1 zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_1_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=1_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="abcd"_"efgh"_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="abcd"_$ZYSQLNULL_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"abcd"_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_"efgh" zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_"efgh"_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x="efgh"_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
set x=$ZYSQLNULL_$ZYSQLNULL_$ZYSQLNULL zwrite x : x=$ZYSQLNULL
-----------------------------
--> Test Logical Operators
-----------------------------
 -> Test ' unary operator  (NOT)
 -> Test & binary operator (AND)
 -> Test ! binary operator (OR)
 -> Test '& binary operator (NAND)
 -> Test '! binary operator (NOR)
do logicaloperatortest
    -> PASS from logicaloperatortest
-----------------------------
--> Test Numeric Relational Operators
-----------------------------
 -> Test > binary operator (GREATER THAN)
set x=$ZYSQLNULL>0 zwrite x
x=$ZYSQLNULL
set x=0>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>"" zwrite x
x=$ZYSQLNULL
set x="">$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd">$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd">$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>20 zwrite x
x=$ZYSQLNULL
set x=20>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test < binary operator (LESS THAN)
set x=$ZYSQLNULL<0 zwrite x
x=$ZYSQLNULL
set x=0<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<"" zwrite x
x=$ZYSQLNULL
set x=""<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<20 zwrite x
x=$ZYSQLNULL
set x=20<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test = binary operator (IS EQUAL TO when operands are NUMBERS)
set x=$ZYSQLNULL=0 zwrite x
x=$ZYSQLNULL
set x=0=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL="" zwrite x
x=$ZYSQLNULL
set x=""=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL="abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL="12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=20 zwrite x
x=$ZYSQLNULL
set x=20=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test '= binary operator (NOT EQUAL TO)
set x=$ZYSQLNULL'=0 zwrite x
x=$ZYSQLNULL
set x=0'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'="" zwrite x
x=$ZYSQLNULL
set x=""'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'="abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'="12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=20 zwrite x
x=$ZYSQLNULL
set x=20'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test '< binary operator (NOT LESS THAN aka GREATER THAN OR EQUAL TO)
set x=$ZYSQLNULL'<0 zwrite x
x=$ZYSQLNULL
set x=0'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<"" zwrite x
x=$ZYSQLNULL
set x=""'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<20 zwrite x
x=$ZYSQLNULL
set x=20'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'<$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test '> binary operator (NOT GREATER THAN aka LESS THAN OR EQUAL TO)
set x=$ZYSQLNULL'>0 zwrite x
x=$ZYSQLNULL
set x=0'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>"" zwrite x
x=$ZYSQLNULL
set x=""'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>20 zwrite x
x=$ZYSQLNULL
set x=20'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'>$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test <= binary operator (LESS THAN OR EQUAL TO aka NOT GREATER THAN)
set x=$ZYSQLNULL<=0 zwrite x
x=$ZYSQLNULL
set x=0<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<="" zwrite x
x=$ZYSQLNULL
set x=""<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<="abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<="12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<=.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<=20 zwrite x
x=$ZYSQLNULL
set x=20<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<=-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<=-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL<=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test >= binary operator (GREATER THAN OR EQUAL TO aka NOT LESS THAN)
set x=$ZYSQLNULL>=0 zwrite x
x=$ZYSQLNULL
set x=0>=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>="" zwrite x
x=$ZYSQLNULL
set x="">=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>="abcd" zwrite x
x=$ZYSQLNULL
set x="abcd">=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>="12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd">=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>=.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333>=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>=20 zwrite x
x=$ZYSQLNULL
set x=20>=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>=-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333>=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>=-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58>=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL>=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
-----------------------------
--> Test String Relational Operators
-----------------------------
 -> Test = binary operator (IS EQUAL TO when operands are STRINGS)
set x=$ZYSQLNULL=0 zwrite x
x=$ZYSQLNULL
set x=0=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL="" zwrite x
x=$ZYSQLNULL
set x=""=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL="abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL="12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=20 zwrite x
x=$ZYSQLNULL
set x=20=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test [ binary operator (CONTAINS)
set x=$ZYSQLNULL[0 zwrite x
x=$ZYSQLNULL
set x=0[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL["" zwrite x
x=$ZYSQLNULL
set x=""[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL["abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL["12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL[.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL[20 zwrite x
x=$ZYSQLNULL
set x=20[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL[-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL[-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test ] binary operator (FOLLOWS in ascii byte sequence)
set x=$ZYSQLNULL]0 zwrite x
x=$ZYSQLNULL
set x=0]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]"" zwrite x
x=$ZYSQLNULL
set x=""]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL].333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]20 zwrite x
x=$ZYSQLNULL
set x=20]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test ]] binary operator (FOLLOWS in subscript ordering sequence)
set x=$ZYSQLNULL]]0 zwrite x
x=$ZYSQLNULL
set x=0]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]]"" zwrite x
x=$ZYSQLNULL
set x=""]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]]"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]]"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]].333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]]20 zwrite x
x=$ZYSQLNULL
set x=20]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]]-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]]-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL]]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test '= binary operator (NOT EQUAL TO when operands are STRINGS)
set x=$ZYSQLNULL'=0 zwrite x
x=$ZYSQLNULL
set x=0'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'="" zwrite x
x=$ZYSQLNULL
set x=""'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'="abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'="12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=20 zwrite x
x=$ZYSQLNULL
set x=20'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'=$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test '[ binary operator (NOT CONTAINS)
set x=$ZYSQLNULL'[0 zwrite x
x=$ZYSQLNULL
set x=0'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'["" zwrite x
x=$ZYSQLNULL
set x=""'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'["abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'["12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'[.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'[20 zwrite x
x=$ZYSQLNULL
set x=20'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'[-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'[-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'[$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test '] binary operator (NOT FOLLOWS in ascii byte sequence)
set x=$ZYSQLNULL']0 zwrite x
x=$ZYSQLNULL
set x=0']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']"" zwrite x
x=$ZYSQLNULL
set x=""']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL'].333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']20 zwrite x
x=$ZYSQLNULL
set x=20']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']$ZYSQLNULL zwrite x
x=$ZYSQLNULL
 -> Test ']] binary operator (NOT FOLLOWS in subscript ordering sequence)
set x=$ZYSQLNULL']]0 zwrite x
x=$ZYSQLNULL
set x=0']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']]"" zwrite x
x=$ZYSQLNULL
set x=""']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']]"abcd" zwrite x
x=$ZYSQLNULL
set x="abcd"']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']]"12abcd" zwrite x
x=$ZYSQLNULL
set x="12abcd"']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']].333333333333333333 zwrite x
x=$ZYSQLNULL
set x=.333333333333333333']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']]20 zwrite x
x=$ZYSQLNULL
set x=20']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']]-.333333333333333333 zwrite x
x=$ZYSQLNULL
set x=-.333333333333333333']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']]-18.58 zwrite x
x=$ZYSQLNULL
set x=-18.58']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
set x=$ZYSQLNULL']]$ZYSQLNULL zwrite x
x=$ZYSQLNULL
-----------------------------
--> Test Pattern Match Operator
-----------------------------
 -> Test ? binary operator (PATTERN MATCH)
set x=$zysqlnull?1"a" zwrite x
x=$ZYSQLNULL
set x=$zysqlnull?1$zysqlnull zwrite x
ZSTATUS=ydb484d+112^ydb484,%YDB-E-PATCLASS, Illegal character class for pattern code
set x=$zysqlnull?1"abcd"_$zysqlnull zwrite x
x=$ZYSQLNULL
set x="abcd"?1"abcd"_$zysqlnull zwrite x
x=$ZYSQLNULL
################################################################
# Test : ydb484e : Test following section of functional spec
----------------------------------------------------------------
# $TEST continues to have only 2 values : false (0) and true (1).
# An IF statement whose condition evaluates to $ZYSQLNULL will treat $TEST as set to 0 and skip the IF.
# Commands with postconditionals that evaluate to $ZYSQLNULL will skip executing the command.
################################################################
 -> Test Command Postconditionals
    -> PASS from SETpostconditionaltest
       -> PASS from HANG postconditionaltest
       -> PASS from IF postconditionaltest
       -> PASS from JOB postconditionaltest
       -> PASS from KILL postconditionaltest
       -> PASS from LOCK postconditionaltest
       -> PASS from MERGE postconditionaltest
       -> PASS from NEW postconditionaltest
       -> PASS from OPEN postconditionaltest
       -> PASS from READ postconditionaltest
       -> PASS from TRESTART postconditionaltest
       -> PASS from USE postconditionaltest
       -> PASS from VIEW postconditionaltest
       -> PASS from WRITE postconditionaltest
       -> PASS from ZALLOCATE postconditionaltest
       -> PASS from ZBREAK postconditionaltest
       -> PASS from ZCOMPILE postconditionaltest
       -> PASS from ZDEALLOCATE postconditionaltest
       -> PASS from ZKILL postconditionaltest
       -> PASS from ZWITHDRAW postconditionaltest
       -> PASS from ZLINK postconditionaltest
       -> PASS from ZPRINT postconditionaltest
       -> PASS from ZSHOW postconditionaltest
       -> PASS from ZSTEP postconditionaltest
       -> PASS from ZSYSTEM postconditionaltest
       -> PASS from ZWRITE postconditionaltest
       -> PASS from CLOSE postconditionaltest
       -> PASS from DO postconditionaltest
       -> PASS from XECUTE postconditionaltest
       -> PASS from QUIT postconditionaltest
       -> PASS from TCOMMIT postconditionaltest
       -> PASS from TROLLBACK postconditionaltest
       -> PASS from TSTART postconditionaltest
       -> PASS from HANG postconditionaltest
       -> PASS from IF postconditionaltest
       -> PASS from JOB postconditionaltest
       -> PASS from KILL postconditionaltest
       -> PASS from LOCK postconditionaltest
       -> PASS from MERGE postconditionaltest
       -> PASS from NEW postconditionaltest
       -> PASS from OPEN postconditionaltest
       -> PASS from READ postconditionaltest
       -> PASS from TRESTART postconditionaltest
       -> PASS from USE postconditionaltest
       -> PASS from VIEW postconditionaltest
       -> PASS from WRITE postconditionaltest
       -> PASS from ZALLOCATE postconditionaltest
       -> PASS from ZBREAK postconditionaltest
       -> PASS from ZCOMPILE postconditionaltest
       -> PASS from ZDEALLOCATE postconditionaltest
       -> PASS from ZKILL postconditionaltest
       -> PASS from ZWITHDRAW postconditionaltest
       -> PASS from ZLINK postconditionaltest
       -> PASS from ZPRINT postconditionaltest
       -> PASS from ZSHOW postconditionaltest
       -> PASS from ZSTEP postconditionaltest
       -> PASS from ZSYSTEM postconditionaltest
       -> PASS from ZWRITE postconditionaltest
       -> PASS from CLOSE postconditionaltest
       -> PASS from DO postconditionaltest
       -> PASS from XECUTE postconditionaltest
       -> PASS from QUIT postconditionaltest
       -> PASS from TCOMMIT postconditionaltest
       -> PASS from TROLLBACK postconditionaltest
       -> PASS from TSTART postconditionaltest
       -> PASS from HANG postconditionaltest
       -> PASS from IF postconditionaltest
       -> PASS from JOB postconditionaltest
       -> PASS from KILL postconditionaltest
       -> PASS from LOCK postconditionaltest
       -> PASS from MERGE postconditionaltest
       -> PASS from NEW postconditionaltest
       -> PASS from OPEN postconditionaltest
       -> PASS from READ postconditionaltest
       -> PASS from TRESTART postconditionaltest
       -> PASS from USE postconditionaltest
       -> PASS from VIEW postconditionaltest
       -> PASS from WRITE postconditionaltest
       -> PASS from ZALLOCATE postconditionaltest
       -> PASS from ZBREAK postconditionaltest
       -> PASS from ZCOMPILE postconditionaltest
       -> PASS from ZDEALLOCATE postconditionaltest
       -> PASS from ZKILL postconditionaltest
       -> PASS from ZWITHDRAW postconditionaltest
       -> PASS from ZLINK postconditionaltest
       -> PASS from ZPRINT postconditionaltest
       -> PASS from ZSHOW postconditionaltest
       -> PASS from ZSTEP postconditionaltest
       -> PASS from ZSYSTEM postconditionaltest
       -> PASS from ZWRITE postconditionaltest
       -> PASS from CLOSE postconditionaltest
       -> PASS from DO postconditionaltest
       -> PASS from XECUTE postconditionaltest
       -> PASS from QUIT postconditionaltest
       -> PASS from TCOMMIT postconditionaltest
       -> PASS from TROLLBACK postconditionaltest
       -> PASS from TSTART postconditionaltest
    -> PASS from AllCmdPostConditionalTest
 -> Test that IF $ZYSQLNULL=x does not execute IF block AND sets $TEST to 0
if $zysqlnull=0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull="" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull="abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull="12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull=.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull=20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull=-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull=-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL'=x does not execute IF block AND sets $TEST to 0
if $zysqlnull'=0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'="" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'="abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'="12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'=.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'=20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'=-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'=-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58'=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL<x does not execute IF block AND sets $TEST to 0
if $zysqlnull<0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL>x does not execute IF block AND sets $TEST to 0
if $zysqlnull>0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "">$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd">$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd">$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL'<x does not execute IF block AND sets $TEST to 0
if $zysqlnull'<0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'<"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'<"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'<"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'<.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'<20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'<-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'<-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58'<$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL'>x does not execute IF block AND sets $TEST to 0
if $zysqlnull'>0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'>"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'>"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'>"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'>.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'>20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'>-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'>-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58'>$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL<=x does not execute IF block AND sets $TEST to 0
if $zysqlnull<=0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<="" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<="abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<="12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<=.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<=20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<=-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull<=-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58<=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL>=x does not execute IF block AND sets $TEST to 0
if $zysqlnull>=0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0>=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>="" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "">=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>="abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd">=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>="12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd">=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>=.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333>=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>=20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20>=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>=-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333>=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull>=-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58>=$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL]x does not execute IF block AND sets $TEST to 0
if $zysqlnull]0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull].333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL]]x does not execute IF block AND sets $TEST to 0
if $zysqlnull]]0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]]"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]]"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]]"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]].333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]]20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]]-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull]]-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58]]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL']x does not execute IF block AND sets $TEST to 0
if $zysqlnull']0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'].333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58']$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL']]x does not execute IF block AND sets $TEST to 0
if $zysqlnull']]0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']]"" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']]"abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']]"12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']].333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']]20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']]-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull']]-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58']]$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL[x does not execute IF block AND sets $TEST to 0
if $zysqlnull[0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull["" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull["abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull["12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull[.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull[20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull[-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull[-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
 -> Test that IF $ZYSQLNULL'[x does not execute IF block AND sets $TEST to 0
if $zysqlnull'[0 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 0'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'["" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if ""'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'["abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "abcd"'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'["12abcd" write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if "12abcd"'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'[.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if .333333333333333333'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'[20 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if 20'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'[-.333333333333333333 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -.333333333333333333'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if $zysqlnull'[-18.58 write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0
if -18.58'[$zysqlnull write "IF block executed. Not expected.",!
else  write "ELSE block executed as expected",!
ELSE block executed as expected
zwrite $test
$TEST=0

################################################################
# Test : ydb484f : Test following section of functional spec
----------------------------------------------------------------
# Using $ZYSQLNULL as a subscript or value of a gvn (as does an indirect assignment with a MERGE),
#   or as a subscript in a LOCK/ZALLOCATE/ZDEALLOCATE command, or in a context that expects an integer
#   or a numeric value, raises a ZYSQLNULLNOTVALID error.
# If $ZYSQLNULL is used in a context that expects a string and is not an operand to a binary or unary
#   operator e.g. $ASCII($ZYSQLNULL,1), it would be treated as if an empty string " was specified.
################################################################
--> Test $ZYSQLNULL as a subscript in gvn raises an error
set ^x($ZYSQLNULL)=1
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $get(^x($ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $data(^x($ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $order(^x($ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $query(^x($ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set ^x(1,2,$ZYSQLNULL)=1
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $get(^x(1,2,$ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $data(^x(1,2,$ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $order(^x(1,2,$ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $query(^x(1,2,$ZYSQLNULL))
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
--> Test $ZYSQLNULL as a value in gvn raises an error
set ^x=$ZYSQLNULL
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set ^x(1,2)=$ZYSQLNULL
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set ^x(1,$ZYSQLNULL)=$ZYSQLNULL
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
--> Test $ZYSQLNULL as a subscript in lock/zallocate/zdeallocate command raises an error
lock ^x($ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
lock -^x($ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
lock +^x($ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zallocate ^x($ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zdeallocate ^x($ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
lock ^x(1,2,$ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
lock -^x(1,2,$ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
lock +^x(1,2,$ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zallocate ^x(1,2,$ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zdeallocate ^x(1,2,$ZYSQLNULL)
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
--> Test $ZYSQLNULL as a gvn subscript in MERGE command raises an error
set x(1)=1,x("abcd")="abcd",x($ZYSQLNULL)="" merge ^y=x
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
-> Test $ZYSQLNULL in context that requires an integer raises an error
-> Test $ZYSQLNULL in context that requires a string works as if "" was specified
$ASCII and $ZASCII
set res=$ascii($ZYSQLNULL) zwrite res res=-1
set res=$zascii($ZYSQLNULL) zwrite res res=-1
set res=$ascii($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$ascii("","") zwrite res res=-1
set res=$ascii($ZYSQLNULL,1) zwrite res res=-1
set res=$ascii("",1) zwrite res res=-1
set res=$ascii("abcd",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$ascii("abcd","") zwrite res res=-1
set res=$zascii($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zascii("","") zwrite res res=-1
set res=$zascii($ZYSQLNULL,1) zwrite res res=-1
set res=$zascii("",1) zwrite res res=-1
set res=$zascii("abcd",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zascii("abcd","") zwrite res res=-1
$FIND and $ZFIND
set res=$find($ZYSQLNULL,$ZYSQLNULL) zwrite res res=1
set res=$find($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$find("","","") zwrite res res=1
set res=$find($ZYSQLNULL,$ZYSQLNULL,1) zwrite res res=1
set res=$find("","",1) zwrite res res=1
set res=$find($ZYSQLNULL,"I") zwrite res res=0
set res=$find($ZYSQLNULL,"I",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$find("","I","") zwrite res res=0
set res=$find($ZYSQLNULL,"I",1) zwrite res res=0
set res=$find("","I",1) zwrite res res=0
set res=$find("HIFI",$ZYSQLNULL) zwrite res res=1
set res=$find("HIFI",$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$find("HIFI","","") zwrite res res=1
set res=$find("HIFI",$ZYSQLNULL,1) zwrite res res=1
set res=$find("HIFI","",1) zwrite res res=1
set res=$find("HIFI","I",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$find("HIFI","I","") zwrite res res=3
set res=$zfind($ZYSQLNULL,$ZYSQLNULL) zwrite res res=1
set res=$zfind($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zfind("","","") zwrite res res=1
set res=$zfind($ZYSQLNULL,$ZYSQLNULL,1) zwrite res res=1
set res=$zfind("","",1) zwrite res res=1
set res=$zfind($ZYSQLNULL,"I") zwrite res res=0
set res=$zfind($ZYSQLNULL,"I",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zfind("","I","") zwrite res res=0
set res=$zfind($ZYSQLNULL,"I",1) zwrite res res=0
set res=$zfind("","I",1) zwrite res res=0
set res=$zfind("HIFI",$ZYSQLNULL) zwrite res res=1
set res=$zfind("HIFI",$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zfind("HIFI","","") zwrite res res=1
set res=$zfind("HIFI",$ZYSQLNULL,1) zwrite res res=1
set res=$zfind("HIFI","",1) zwrite res res=1
set res=$zfind("HIFI","I",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zfind("HIFI","I","") zwrite res res=3
$TEXT
set res=$text($ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-TEXTARG, Invalid argument to $TEXT function
set res=$text("") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-TEXTARG, Invalid argument to $TEXT function
$ZCHAR
set res=$ZCHAR($ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$CHAR
set res=$char($ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$RANDOM
set res=$random($ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
TROLLBACK
TROLLBACK $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
TROLLBACK:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZHALT
ZHALT $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZHALT:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZTCOMMIT
ZTCOMMIT $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZTCOMMIT:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$REVERSE
set res=$reverse($ZYSQLNULL) zwrite res res=""
$QLENGTH
set res=$qlength($ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
set res=$qlength("") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
$ZWIDTH
set res=$zwidth($ZYSQLNULL) zwrite res res=0
$DATA and $ZDATA
set res=$data(x1) 
set res=$zdata(x1) 
USE
use $ZYSQLNULL 
use "" 
use file:$ZYSQLNULL="\r" ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
use file:""="\r" ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
use file:TERM=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-IONOTOPEN, Attempt to USE an I/O device which has not been opened
use file:TERM="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-IONOTOPEN, Attempt to USE an I/O device which has not been opened
use $ZYSQLNULL:TERM="" 
use "":TERM="" 
use:tv=1 $ZYSQLNULL 
use:tv=1 "" 
use:tv=1 file:$ZYSQLNULL="\r" ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
use:tv=1 file:""="\r" ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
use:tv=1 file:TERM=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-IONOTOPEN, Attempt to USE an I/O device which has not been opened
use:tv=1 file:TERM="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-IONOTOPEN, Attempt to USE an I/O device which has not been opened
use:tv=1 $ZYSQLNULL:TERM="" 
use:tv=1 "":TERM="" 
ZCOMPILE
zcompile $ZYSQLNULL 
zcompile "" 
zcompile:tv=1 $ZYSQLNULL 
zcompile:tv=1 "" 
CLOSE
close $ZYSQLNULL 
close "" 
close:tv=1 $ZYSQLNULL 
close:tv=1 "" 
ZSHOW
zshow $ZYSQLNULL 
zshow "" 
zshow:tv=1 $ZYSQLNULL 
zshow:tv=1 "" 
XECUTE
xecute $ZYSQLNULL 
xecute "" 
xecute:tv=1 $ZYSQLNULL 
xecute:tv=1 "" 
ZSYSTEM
zsystem $ZYSQLNULL 
zsystem:tv=1 $ZYSQLNULL 
zsystem:tv=1 "" 
ZRUPDATE
zrupdate $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-FILEPARSE, Error parsing file specification: ,%YDB-I-TEXT, Filename is not a valid routine name
zrupdate "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-FILEPARSE, Error parsing file specification: ,%YDB-I-TEXT, Filename is not a valid routine name
zrupdate:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-FILEPARSE, Error parsing file specification: ,%YDB-I-TEXT, Filename is not a valid routine name
zrupdate:tv=1 "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-FILEPARSE, Error parsing file specification: ,%YDB-I-TEXT, Filename is not a valid routine name
$LENGTH and $ZLENGTH
set res=$length($ZYSQLNULL) zwrite res res=0
set res=$length($ZYSQLNULL,$ZYSQLNULL) zwrite res res=0
set res=$length($ZYSQLNULL,"/") zwrite res res=1
set res=$length("Smith/John/M/124 Main Street/Ourtown/KA/USA",$ZYSQLNULL) zwrite res res=0
set res=$zlength($ZYSQLNULL) zwrite res res=0
set res=$zlength($ZYSQLNULL,$ZYSQLNULL) zwrite res res=0
set res=$zlength($ZYSQLNULL,"/") zwrite res res=1
set res=$zlength("Smith/John/M/124 Main Street/Ourtown/KA/USA",$ZYSQLNULL) zwrite res res=0
$ZJOBEXAM
set res1=$zjobexam($ZYSQLNULL) 
set res1=$zjobexam($ZYSQLNULL,$ZYSQLNULL) 
set res1=$zjobexam($ZYSQLNULL,"Dummy") 
set res1=$zjobexam("TEST",$ZYSQLNULL) 
$ZSEARCH
set res=$zsearch($ZYSQLNULL) zwrite res res=""
set res=$zsearch($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zsearch($ZYSQLNULL,1) zwrite res res=""
set res=$zsearch("dummy.txt",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$ZGETJPI
set res=$zgetjpi($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zgetjpi($ZYSQLNULL,"UTIME") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zgetjpi(1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADJPIPARAM, Null is not a legal parameter for $ZGETJPI()
set res=$zgetjpi(1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADJPIPARAM, Null is not a legal parameter for $ZGETJPI()
$STACK
set res=$stack($ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$stack($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$stack($ZYSQLNULL,"MCODE") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$stack($ZYSQLNULL,"ECODE") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$stack($ZYSQLNULL,"PLACE") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$stack(1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVSTACODE, Invalid value for second parameter of $STACK ()
$ZYHASH
set res=$zyhash($ZYSQLNULL) zwrite res res="0x00000000000000000000000000000000"
set res=$zyhash($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zyhash("","") zwrite res res="0x00000000000000000000000000000000"
set res=$zyhash($ZYSQLNULL,1) zwrite res res="0xb55cff6ee5ab10468335f878aa2d6251"
set res=$zyhash("",1) zwrite res res="0xb55cff6ee5ab10468335f878aa2d6251"
set res=$zyhash("ifembu8r308j243h5g3h84t7yf23h0h",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zyhash("ifembu8r308j243h5g3h84t7yf23h0h","") zwrite res res="0xa2ddd722eff64391e8160f3d5b0e486a"
$QSUBSCRIPT
set res=$qsubscript($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$qsubscript("","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
set res=$qsubscript($ZYSQLNULL,0) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
set res=$qsubscript("",0) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
set res=$qsubscript("^|""XXX""|ABC(1,2,3,5,6)",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$qsubscript("^|""XXX""|ABC(1,2,3,5,6)","") zwrite res res="^ABC"
$ZWRITE
set res=$zwrite($ZYSQLNULL) zwrite res res="$ZYSQLNULL"
set res=$zwrite("") zwrite res res=""""""
set res=$zwrite($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zwrite("","") zwrite res res=""""""
set res=$zwrite($ZYSQLNULL,1) zwrite res res=""
set res=$zwrite("",1) zwrite res res=""
set res=$zwrite("dummy",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zwrite("dummy","") zwrite res res="""dummy"""
$ZCONVERT 3 arg form
##SUSPEND_OUTPUT NONUNICODE_MODE
set res=$zconvert($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert($ZYSQLNULL,$ZYSQLNULL,"HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert("","","HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert($ZYSQLNULL,"DEC",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert("","DEC","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert($ZYSQLNULL,"DEC","HEX") zwrite res res=0
set res=$zconvert("","DEC","HEX") zwrite res res=0
set res=$zconvert(10,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,$ZYSQLNULL,"HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"","HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"DEC",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"DEC","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
##SUSPEND_OUTPUT UNICODE_MODE
##ALLOW_OUTPUT NONUNICODE_MODE
set res=$zconvert($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert($ZYSQLNULL,$ZYSQLNULL,"HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert("","","HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert($ZYSQLNULL,"DEC",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert("","DEC","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert($ZYSQLNULL,"DEC","HEX") zwrite res res=0
set res=$zconvert("","DEC","HEX") zwrite res res=0
set res=$zconvert(10,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,$ZYSQLNULL,"HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"","HEX") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"DEC",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
set res=$zconvert(10,"DEC","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZCONVERT, Translation supported only between DEC/HEX OR between UTF-8/UTF-16/UTF-16LE/UTF-16BE
##ALLOW_OUTPUT UNICODE_MODE
$ZCONVERT 2 arg form
set res=$zconvert($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADCASECODE,  is not a valid case conversion code
set res=$zconvert("","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADCASECODE,  is not a valid case conversion code
set res=$zconvert($ZYSQLNULL,"U") zwrite res res=""
set res=$zconvert("","U") zwrite res res=""
set res=$zconvert("Happy New Year",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADCASECODE,  is not a valid case conversion code
set res=$zconvert("Happy New Year","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADCASECODE,  is not a valid case conversion code
$ZTRNLNM
set res=$ztrnlnm($ZYSQLNULL) zwrite res res=""
set res=$ztrnlnm($ZYSQLNULL,"","","","",$ZYSQLNULL) zwrite res res=""
set res=$ztrnlnm($ZYSQLNULL,"","","","","VALUE") zwrite res res=""
set res=$ztrnlnm("ydb_dist","","","","",$ZYSQLNULL) zwrite res res="##SOURCE_REALPATH##"
$EXTRACT and $ZEXTRACT
set res=$extract($ZYSQLNULL) zwrite res res=""
set res=$extract("") zwrite res res=""
set res=$extract($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("","") zwrite res res=""
set res=$extract($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("","","") zwrite res res=""
set res=$extract($ZYSQLNULL,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("","",3) zwrite res res=""
set res=$extract($ZYSQLNULL,1) zwrite res res=""
set res=$extract("",1) zwrite res res=""
set res=$extract($ZYSQLNULL,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("",1,"") zwrite res res=""
set res=$extract($ZYSQLNULL,1,3) zwrite res res=""
set res=$extract("",1,3) zwrite res res=""
set res=$extract("Hello world",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("Hello world","") zwrite res res=""
set res=$extract("Hello world",$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("Hello world","","") zwrite res res=""
set res=$extract("Hello world",$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("Hello world","",3) zwrite res res="Hel"
set res=$extract("Hello world",1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$extract("Hello world",1,"") zwrite res res=""
set res=$zextract($ZYSQLNULL) zwrite res res=""
set res=$zextract("") zwrite res res=""
set res=$zextract($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("","") zwrite res res=""
set res=$zextract($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("","","") zwrite res res=""
set res=$zextract($ZYSQLNULL,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("","",3) zwrite res res=""
set res=$zextract($ZYSQLNULL,1) zwrite res res=""
set res=$zextract("",1) zwrite res res=""
set res=$zextract($ZYSQLNULL,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("",1,"") zwrite res res=""
set res=$zextract($ZYSQLNULL,1,3) zwrite res res=""
set res=$zextract("",1,3) zwrite res res=""
set res=$zextract("Hello world",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("Hello world","") zwrite res res=""
set res=$zextract("Hello world",$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("Hello world","","") zwrite res res=""
set res=$zextract("Hello world",$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("Hello world","",3) zwrite res res="Hel"
set res=$zextract("Hello world",1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zextract("Hello world",1,"") zwrite res res=""
$FNUMBER
set res=$fnumber($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","") zwrite res res=0
set res=$fnumber($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","","") zwrite res res=0
set res=$fnumber($ZYSQLNULL,$ZYSQLNULL,4) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","",4) zwrite res res="0.0000"
set res=$fnumber($ZYSQLNULL,",") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("",",") zwrite res res=0
set res=$fnumber($ZYSQLNULL,",",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("",",","") zwrite res res=0
set res=$fnumber($ZYSQLNULL,",",4) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("",",",4) zwrite res res="0.0000"
set res=$fnumber($ZYSQLNULL,"+") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","+") zwrite res res=0
set res=$fnumber($ZYSQLNULL,"+",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","+","") zwrite res res=0
set res=$fnumber($ZYSQLNULL,"+",4) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","+",4) zwrite res res="0.0000"
set res=$fnumber($ZYSQLNULL,"-") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","-") zwrite res res=0
set res=$fnumber($ZYSQLNULL,"-",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","-","") zwrite res res=0
set res=$fnumber($ZYSQLNULL,"-",4) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","-",4) zwrite res res="0.0000"
set res=$fnumber($ZYSQLNULL,".") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("",".") zwrite res res=0
set res=$fnumber($ZYSQLNULL,".",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("",".","") zwrite res res=0
set res=$fnumber($ZYSQLNULL,".",4) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("",".",4) zwrite res res="0,0000"
set res=$fnumber($ZYSQLNULL,"T") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","T") zwrite res res="0 "
set res=$fnumber($ZYSQLNULL,"T",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","T","") zwrite res res="0 "
set res=$fnumber($ZYSQLNULL,"T",4) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","T",4) zwrite res res="0.0000 "
set res=$fnumber($ZYSQLNULL,"P") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","P") zwrite res res=" 0 "
set res=$fnumber($ZYSQLNULL,"P",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","P","") zwrite res res=" 0 "
set res=$fnumber($ZYSQLNULL,"P",4) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber("","P",4) zwrite res res=" 0.0000 "
set res=$fnumber(923333.22,$ZYSQLNULL) zwrite res res=923333.22
set res=$fnumber(923333.22,"") zwrite res res=923333.22
set res=$fnumber(923333.22,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber(923333.22,"","") zwrite res res=923333
set res=$fnumber(923333.22,$ZYSQLNULL,4) zwrite res res="923333.2200"
set res=$fnumber(923333.22,"",4) zwrite res res="923333.2200"
set res=$fnumber(923333.22,",",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber(923333.22,",","") zwrite res res="923,333"
set res=$fnumber(923333.22,"+",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber(923333.22,"+","") zwrite res res="+923333"
set res=$fnumber(923333.22,"-",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber(923333.22,"-","") zwrite res res=923333
set res=$fnumber(923333.22,".",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber(923333.22,".","") zwrite res res=923.333
set res=$fnumber(923333.22,"T",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber(923333.22,"T","") zwrite res res="923333 "
set res=$fnumber(923333.22,"P",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$fnumber(923333.22,"P","") zwrite res res=" 923333 "
$JUSTIFY and $ZJUSTIFY
3 ARG FORM
set res=$justify($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify("","") zwrite res res=""
set res=$justify($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify("","","") zwrite res res=0
set res=$justify($ZYSQLNULL,$ZYSQLNULL,2) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify("","",2) zwrite res res="0.00"
set res=$justify($ZYSQLNULL,10) zwrite res res="          "
set res=$justify("",10) zwrite res res="          "
set res=$justify($ZYSQLNULL,10,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify("",10,"") zwrite res res="         0"
set res=$justify($ZYSQLNULL,10,2) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify("",10,2) zwrite res res="      0.00"
set res=$justify(10.234,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify(10.234,"") zwrite res res=10.234
set res=$justify(10.234,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify(10.234,"","") zwrite res res=10
set res=$justify(10.234,$ZYSQLNULL,2) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify(10.234,"",2) zwrite res res=10.23
set res=$justify(10.234,10,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify(10.234,10,"") zwrite res res="        10"
set res=$zjustify($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify("","") zwrite res res=""
set res=$zjustify($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify("","","") zwrite res res=0
set res=$zjustify($ZYSQLNULL,$ZYSQLNULL,2) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify("","",2) zwrite res res="0.00"
set res=$zjustify($ZYSQLNULL,10) zwrite res res="          "
set res=$zjustify("",10) zwrite res res="          "
set res=$zjustify($ZYSQLNULL,10,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify("",10,"") zwrite res res="         0"
set res=$zjustify($ZYSQLNULL,10,2) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify("",10,2) zwrite res res="      0.00"
set res=$zjustify(10.234,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify(10.234,"") zwrite res res=10.234
set res=$zjustify(10.234,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify(10.234,"","") zwrite res res=10
set res=$zjustify(10.234,$ZYSQLNULL,2) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify(10.234,"",2) zwrite res res=10.23
set res=$zjustify(10.234,10,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify(10.234,10,"") zwrite res res="        10"
2 ARG FORM
set res=$justify($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify("","") zwrite res res=""
set res=$justify($ZYSQLNULL,10) zwrite res res="          "
set res=$justify("",10) zwrite res res="          "
set res=$justify("Hello",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$justify("Hello","") zwrite res res="Hello"
set res=$zjustify($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify("","") zwrite res res=""
set res=$zjustify($ZYSQLNULL,10) zwrite res res="          "
set res=$zjustify("",10) zwrite res res="          "
set res=$zjustify("Hello",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zjustify("Hello","") zwrite res res="Hello"
$ZPARSE
set res=$zparse($ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"") 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"dust.lis") 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"dust.lis",$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"dust.lis","") 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,"/usr/work/") 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,"/usr/work/",$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,"/usr/work/",$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,"/usr/work/",$ZYSQLNULL,"") 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,"/usr/work/","dust.lis") 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,"/usr/work/","dust.lis",$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,$ZYSQLNULL,"/usr/work/","dust.lis","") 
set res=$zparse($ZYSQLNULL,"NAME") 
set res=$zparse($ZYSQLNULL,"NAME",$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,"NAME",$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,"NAME",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,"NAME",$ZYSQLNULL,$ZYSQLNULL,"") 
set res=$zparse($ZYSQLNULL,"NAME",$ZYSQLNULL,"dust.lis") 
set res=$zparse($ZYSQLNULL,"NAME",$ZYSQLNULL,"dust.lis",$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,"NAME",$ZYSQLNULL,"dust.lis","") 
set res=$zparse($ZYSQLNULL,"NAME","/usr/work/") 
set res=$zparse($ZYSQLNULL,"NAME","/usr/work/",$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,"NAME","/usr/work/",$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,"NAME","/usr/work/",$ZYSQLNULL,"") 
set res=$zparse($ZYSQLNULL,"NAME","/usr/work/","dust.lis") 
set res=$zparse($ZYSQLNULL,"NAME","/usr/work/","dust.lis",$ZYSQLNULL) 
set res=$zparse($ZYSQLNULL,"NAME","/usr/work/","dust.lis","") 
set res=$zparse("test",$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"") 
set res=$zparse("test",$ZYSQLNULL,$ZYSQLNULL,"dust.lis") 
set res=$zparse("test",$ZYSQLNULL,$ZYSQLNULL,"dust.lis",$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,$ZYSQLNULL,"dust.lis","") 
set res=$zparse("test",$ZYSQLNULL,"/usr/work/") 
set res=$zparse("test",$ZYSQLNULL,"/usr/work/",$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,"/usr/work/",$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,"/usr/work/",$ZYSQLNULL,"") 
set res=$zparse("test",$ZYSQLNULL,"/usr/work/","dust.lis") 
set res=$zparse("test",$ZYSQLNULL,"/usr/work/","dust.lis",$ZYSQLNULL) 
set res=$zparse("test",$ZYSQLNULL,"/usr/work/","dust.lis","") 
set res=$zparse("test","NAME",$ZYSQLNULL) 
set res=$zparse("test","NAME",$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse("test","NAME",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse("test","NAME",$ZYSQLNULL,$ZYSQLNULL,"") 
set res=$zparse("test","NAME",$ZYSQLNULL,"dust.lis") 
set res=$zparse("test","NAME",$ZYSQLNULL,"dust.lis",$ZYSQLNULL) 
set res=$zparse("test","NAME",$ZYSQLNULL,"dust.lis","") 
set res=$zparse("test","NAME","/usr/work/",$ZYSQLNULL) 
set res=$zparse("test","NAME","/usr/work/",$ZYSQLNULL,$ZYSQLNULL) 
set res=$zparse("test","NAME","/usr/work/",$ZYSQLNULL,"") 
set res=$zparse("test","NAME","/usr/work/","dust.lis",$ZYSQLNULL) 
$ORDER
xzynull=$ZYSQLNULL
xnull=""
y0=0
z1=1
^x1=1
write $order(xzynull) y
write $order(xnull) xstr
write $order(xzynull,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $order(xnull,xnull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ORDER2, Invalid second argument to $ORDER.  Must be -1 or 1.
write $order(xzynull,1) y
write $order(xnull,1) xstr
write $order(xzynull,z1) y
write $order(xnull,z1) xstr
write $order(y0,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $order(y0,xnull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ORDER2, Invalid second argument to $ORDER.  Must be -1 or 1.
write $order(^x1,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $order(^x1,xnull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ORDER2, Invalid second argument to $ORDER.  Must be -1 or 1.
$ZBITFIND
xzynull=$ZYSQLNULL
xnull=""
y1=1
z3=3
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,$ZYSQLNULL,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,xzynull,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind($ZYSQLNULL,y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,$ZYSQLNULL,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","","") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,xzynull,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("","",z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind("",y1,"") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(xzynull,y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind("",y1,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitfind(strval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"") zwrite res res=2
set res=$zbitfind(strval,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,$ZYSQLNULL,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",3) zwrite res res=4
set res=$zbitfind(strval,$ZYSQLNULL,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",z3) zwrite res res=4
set res=$zbitfind(strval,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"") zwrite res res=2
set res=$zbitfind(strval,xzynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,xzynull,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,xzynull,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",3) zwrite res res=4
set res=$zbitfind(strval,xzynull,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",z3) zwrite res res=4
set res=$zbitfind(strval,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,1,"") zwrite res res=3
set res=$zbitfind(strval,1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,1,"") zwrite res res=3
set res=$zbitfind(strval,y1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,y1,"") zwrite res res=3
set res=$zbitfind(strval,y1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,y1,"") zwrite res res=3
set res=$zbitfind(strval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"") zwrite res res=2
set res=$zbitfind(strval,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,$ZYSQLNULL,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,$ZYSQLNULL,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",3) zwrite res res=4
set res=$zbitfind(strval,$ZYSQLNULL,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",z3) zwrite res res=4
set res=$zbitfind(strval,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"") zwrite res res=2
set res=$zbitfind(strval,xzynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,xzynull,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"","") zwrite res res=2
set res=$zbitfind(strval,xzynull,3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",3) zwrite res res=4
set res=$zbitfind(strval,xzynull,z3) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,"",z3) zwrite res res=4
set res=$zbitfind(strval,1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,1,"") zwrite res res=3
set res=$zbitfind(strval,1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,1,"") zwrite res res=3
set res=$zbitfind(strval,y1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,y1,"") zwrite res res=3
set res=$zbitfind(strval,y1,xzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitfind(strval,y1,"") zwrite res res=3
$ZBITAND, $ZBITOR & $ZBITXOR
write $zbitand($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand($ZYSQLNULL,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand($ZYSQLNULL,strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand("",strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand(xzynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand(xzynull,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand(xzynull,strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand("",strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand(strval1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand(strval1,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand(strval1,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitand(strval1,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor($ZYSQLNULL,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor($ZYSQLNULL,strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor("",strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor(xzynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor(xzynull,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor(xzynull,strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor("",strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor(strval1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor(strval1,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor(strval1,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitor(strval1,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor($ZYSQLNULL,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor($ZYSQLNULL,strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor("",strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor(xzynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor(xzynull,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor(xzynull,strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor("",strval2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor(strval1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor(strval1,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor(strval1,xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitxor(strval1,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
xzynull=$ZYSQLNULL
xnull=""
$zbitcount
write $zbitcount($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitcount("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitcount(xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitcount(xnull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
$zbitlen
write $zbitlen($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitlen("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitlen(xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitlen(xnull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
$zbitnot
write $zbitnot($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitnot("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitnot(xzynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitnot(xnull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
$ZBITGET
xstrval=$C(0)_"A"
y2=2
xzynull=$ZYSQLNULL
write $zbitget($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zbitget("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitget($ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitget("",2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitget(xzynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zbitget("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitget(xzynull,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitget("",2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
write $zbitget(xstrval,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zbitget(xstrval,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITPOS, Invalid position in the bit string
$ZBITSET
set res=$zbitset($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset("","","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset($ZYSQLNULL,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset("","",1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset($ZYSQLNULL,3,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset("",3,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset($ZYSQLNULL,3,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset("",3,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset(xzynull,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset("","","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset(xzynull,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset("","",1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset(xzynull,3,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset("",3,"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset(xzynull,3,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset("",3,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITSTR, Invalid bit string
set res=$zbitset(xstrval,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset(xstrval,"","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITPOS, Invalid position in the bit string
set res=$zbitset(xstrval,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset(xstrval,"",1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVBITPOS, Invalid position in the bit string
set res=$zbitset(xstrval,3,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitset(xstrval,3,"") 
$ZBITSTR
set res=$zbitstr($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitstr($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitstr($ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zbitstr(7,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$ZSIGPROC
ysigstr="SIGUSR1"
yzynull=$ZYSQLNULL
set res=$zsigproc($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zsigproc($ZYSQLNULL,yzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zsigproc($ZYSQLNULL,ysigstr) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zsigproc($ZYSQLNULL,"SIGUSR1") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zsigproc(-999,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zsigproc(-999,yzynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$QUERY
write $query(xzynull)
write $query(xnull)
$SELECT
xzynull=$ZYSQLNULL
xnull=""
write $select(tv=1:xnull) 
write $select(tv=1:xzynull) 
write $select(tv=1:$ZYSQLNULL) 
set result=$zysqlnull  write $select(result=0:0,result=1:1,1:2),!
2
set result=$zysqlnull  write $select(result=0:0,(result=1)!1:1,1:2),!
1
$VIEW
write $view($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view($ZYSQLNULL,"a") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("","a") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("LV_REF",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWLVN, Invalid local variable name used with VIEW/$VIEW(): 
write $view("LV_REF","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWLVN, Invalid local variable name used with VIEW/$VIEW(): 
write $view("LV_CREF",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWLVN, Invalid local variable name used with VIEW/$VIEW(): 
write $view("LV_CREF","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWLVN, Invalid local variable name used with VIEW/$VIEW(): 
write $view($ZYSQLNULL,"name") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("","name") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("FREEBLOCKS",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("FREEBLOCKS","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("FREEZE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("FREEZE","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("GVFILE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("GVFILE","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("GVNEXT",$ZYSQLNULL) DEFAULT
write $view("GVNEXT","") DEFAULT
write $view("GVSTAT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("GVSTAT","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("JNLACTIVE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("JNLACTIVE","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("JNLFILE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("JNLFILE","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("POOLLIMIT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("POOLLIMIT","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("PROBECRIT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("PROBECRIT","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("STATSHARE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("STATSHARE","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("TOTALBLOCKS",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view("TOTALBLOCKS","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: ""
write $view($ZYSQLNULL,"^x") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("","^x") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
write $view("NOISOLATION",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWFN, View parameter NOISOLATION is not valid with the $VIEW() function
write $view("NOISOLATION","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWFN, View parameter NOISOLATION is not valid with the $VIEW() function
write $view("REGION",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOTGBL, Expected a global variable name starting with an up-arrow (^): 
write $view("REGION","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOTGBL, Expected a global variable name starting with an up-arrow (^): 
write $view("YGVN2GDS",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
write $view("YGVN2GDS","") ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
set res=$view($ZYSQLNULL,"dummydebug") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
set res=$view("","dummydebug") ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
set res=$view("RTNCHECKSUM",$ZYSQLNULL) 
set res=$view("RTNCHECKSUM","") 
set res=$view("RTNNEXT",$ZYSQLNULL) 
set res=$view("RTNNEXT","") 
set res=$view("YGDS2GVN",$ZYSQLNULL) 
set res=$view("YGDS2GVN","") 
$ZDATE
set res=$zdate($ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate($ZYSQLNULL,bval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY",cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate($ZYSQLNULL,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="12/31/40"
set res=$zdate(zynull,bval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,bval,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,bval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,bval,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,bval,cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,bval,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",$ZYSQLNULL,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",$ZYSQLNULL,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",$ZYSQLNULL,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",zynull,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",cval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",cval,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",cval,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",cval,dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY",cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="THU, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate(zynull,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zdate("","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Jeudi, 31/12/40"
set res=$zdate("65435,29367",$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,$ZYSQLNULL,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,$ZYSQLNULL,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,zynull,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,zynull,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,zynull,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,cval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,cval,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,cval,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,cval,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,$ZYSQLNULL,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,$ZYSQLNULL,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,zynull,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,zynull,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,zynull,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,cval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,cval,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,cval,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,cval,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367",bval,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,$ZYSQLNULL,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,$ZYSQLNULL,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367",bval,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367",bval,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,zynull,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,zynull,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,zynull,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367",bval,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367",bval,cval,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,cval,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367",bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",$ZYSQLNULL,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",$ZYSQLNULL,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",$ZYSQLNULL,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",zynull,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",zynull,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",zynull,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",cval,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY",cval,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,$ZYSQLNULL,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,$ZYSQLNULL,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,zynull,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,zynull,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,zynull,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,cval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,cval,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,cval,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,cval,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,$ZYSQLNULL,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,$ZYSQLNULL,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,$ZYSQLNULL,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,zynull,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,zynull,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,zynull,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,cval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,cval,$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,cval,zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,cval,dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,cval,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",dval) zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,zynull,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate("65435,29367","","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="02/26/20"
set res=$zdate(aval,bval,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,$ZYSQLNULL,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,$ZYSQLNULL,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,bval,$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,bval,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,zynull,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,zynull,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,zynull,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,bval,zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,bval,cval,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,cval,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,bval,"Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",$ZYSQLNULL,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",$ZYSQLNULL,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",$ZYSQLNULL,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",$ZYSQLNULL,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",zynull,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",zynull,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",zynull,dval) zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",zynull,"Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","","Dimanche,Lundi,Mardi,Mercredi,Jeudi,Vendredi,Samedi") zwrite res res="Mercredi, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",cval,$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY",cval,zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",$ZYSQLNULL) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
set res=$zdate(aval,"DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember",zynull) zwrite res res="WED, 26/02/20"
set res=$zdate("65435,29367","DAY, DD/MM/YY","Januar,Februar,Marz,April,Mai,Juni,Juli,August,September,October,November,Dezember","") zwrite res res="WED, 26/02/20"
$GET and $INCREMENT
set ^x1=1 a1=1
bneg2=-2
zynull=$ZYSQLNULL
set res=$get(zynull) zwrite res res=$ZYSQLNULL
set res=$get(k) zwrite res res=""
set res=$get(zynull,$ZYSQLNULL) zwrite res res=$ZYSQLNULL
set res=$get(k,"") zwrite res res=""
set res=$get(zynull,zynull) zwrite res res=$ZYSQLNULL
set res=$get(k,"") zwrite res res=""
set res=$get(zynull,-2) zwrite res res=$ZYSQLNULL
set res=$get(k,-2) zwrite res res=""
set res=$get(zynull,bneg2) zwrite res res=$ZYSQLNULL
set res=$get(k,-2) zwrite res res=""
set res=$get(a1,$ZYSQLNULL) zwrite res res=1
set res=$get(k,"") zwrite res res=1
set res=$get(a1,zynull) zwrite res res=1
set res=$get(k,"") zwrite res res=1
set res=$get(^x1,$ZYSQLNULL) zwrite res res=1
set res=$get(k,"") zwrite res res=1
set res=$get(^x1,zynull) zwrite res res=1
set res=$get(k,"") zwrite res res=1
set res=$increment(zynull) zwrite res res=$ZYSQLNULL
set res=$increment(k) zwrite res res=1
set res=$increment(zynull,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$increment(k,"") zwrite res res=1
set res=$increment(zynull,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$increment(k,"") zwrite res res=1
set res=$increment(zynull,-2) zwrite res res=$ZYSQLNULL
set res=$increment(k,-2) zwrite res res=-1
set res=$increment(zynull,bneg2) zwrite res res=$ZYSQLNULL
set res=$increment(k,-2) zwrite res res=-3
set res=$increment(a1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$increment(k,"") zwrite res res=1
set res=$increment(a1,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$increment(k,"") zwrite res res=1
set res=$increment(^x1,$ZYSQLNULL) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$increment(k,"") zwrite res res=1
set res=$increment(^x1,zynull) zwrite res ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$increment(k,"") zwrite res res=1
$ZTRANSLATE and $TRANSLATE
set res=$ztranslate($ZYSQLNULL) zwrite res res=""
set res=$ztranslate($ZYSQLNULL,$ZYSQLNULL) zwrite res res=""
set res=$ztranslate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res res=""
set res=$ztranslate($ZYSQLNULL,$ZYSQLNULL,"n") zwrite res res=""
set res=$ztranslate($ZYSQLNULL,"d") zwrite res res=""
set res=$ztranslate($ZYSQLNULL,"d",$ZYSQLNULL) zwrite res res=""
set res=$ztranslate($ZYSQLNULL,"d","n") zwrite res res=""
set res=$ztranslate("x") zwrite res res="x"
set res=$ztranslate("x",$ZYSQLNULL) zwrite res res="x"
set res=$ztranslate("x",$ZYSQLNULL,$ZYSQLNULL) zwrite res res="x"
set res=$ztranslate("x",$ZYSQLNULL,"n") zwrite res res="x"
set res=$ztranslate("x","d") zwrite res res="x"
set res=$ztranslate("x","d",$ZYSQLNULL) zwrite res res="x"
set res=$ztranslate("x","d","n") zwrite res res="x"
aval="ABC"
bval="CB"
cval=1
zynull=$ZYSQLNULL
set res=$translate($ZYSQLNULL) zwrite res res=""
set res=$translate($ZYSQLNULL,$ZYSQLNULL) zwrite res res=""
set res=$translate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) zwrite res res=""
set res=$translate($ZYSQLNULL,$ZYSQLNULL,zynull) zwrite res res=""
set res=$translate($ZYSQLNULL,$ZYSQLNULL,1) zwrite res res=""
set res=$translate($ZYSQLNULL,$ZYSQLNULL,cval) zwrite res res=""
set res=$translate($ZYSQLNULL,zynull) zwrite res res=""
set res=$translate($ZYSQLNULL,zynull,$ZYSQLNULL) zwrite res res=""
set res=$translate($ZYSQLNULL,zynull,zynull) zwrite res res=""
set res=$translate($ZYSQLNULL,zynull,1) zwrite res res=""
set res=$translate($ZYSQLNULL,zynull,cval) zwrite res res=""
set res=$translate($ZYSQLNULL,bval) zwrite res res=""
set res=$translate($ZYSQLNULL,bval,$ZYSQLNULL) zwrite res res=""
set res=$translate($ZYSQLNULL,bval,zynull) zwrite res res=""
set res=$translate($ZYSQLNULL,bval,1) zwrite res res=""
set res=$translate($ZYSQLNULL,bval,cval) zwrite res res=""
set res=$translate($ZYSQLNULL,"CB") zwrite res res=""
set res=$translate($ZYSQLNULL,"CB",$ZYSQLNULL) zwrite res res=""
set res=$translate($ZYSQLNULL,"CB",zynull) zwrite res res=""
set res=$translate($ZYSQLNULL,"CB",1) zwrite res res=""
set res=$translate($ZYSQLNULL,"CB",cval) zwrite res res=""
set res=$translate(zynull) zwrite res res=""
set res=$translate(zynull,$ZYSQLNULL) zwrite res res=""
set res=$translate(zynull,$ZYSQLNULL,$ZYSQLNULL) zwrite res res=""
set res=$translate(zynull,$ZYSQLNULL,zynull) zwrite res res=""
set res=$translate(zynull,$ZYSQLNULL,1) zwrite res res=""
set res=$translate(zynull,$ZYSQLNULL,cval) zwrite res res=""
set res=$translate(zynull,zynull) zwrite res res=""
set res=$translate(zynull,zynull,$ZYSQLNULL) zwrite res res=""
set res=$translate(zynull,zynull,zynull) zwrite res res=""
set res=$translate(zynull,zynull,1) zwrite res res=""
set res=$translate(zynull,zynull,cval) zwrite res res=""
set res=$translate(zynull,bval) zwrite res res=""
set res=$translate(zynull,bval,$ZYSQLNULL) zwrite res res=""
set res=$translate(zynull,bval,zynull) zwrite res res=""
set res=$translate(zynull,bval,1) zwrite res res=""
set res=$translate(zynull,bval,cval) zwrite res res=""
set res=$translate(zynull,"CB") zwrite res res=""
set res=$translate(zynull,"CB",$ZYSQLNULL) zwrite res res=""
set res=$translate(zynull,"CB",zynull) zwrite res res=""
set res=$translate(zynull,"CB",1) zwrite res res=""
set res=$translate(zynull,"CB",cval) zwrite res res=""
set res=$translate("ABC",$ZYSQLNULL) zwrite res res="ABC"
set res=$translate("ABC",$ZYSQLNULL,$ZYSQLNULL) zwrite res res="ABC"
set res=$translate("ABC",$ZYSQLNULL,zynull) zwrite res res="ABC"
set res=$translate("ABC",$ZYSQLNULL,1) zwrite res res="ABC"
set res=$translate("ABC",$ZYSQLNULL,cval) zwrite res res="ABC"
set res=$translate("ABC",zynull) zwrite res res="ABC"
set res=$translate("ABC",zynull,$ZYSQLNULL) zwrite res res="ABC"
set res=$translate("ABC",zynull,zynull) zwrite res res="ABC"
set res=$translate("ABC",zynull,1) zwrite res res="ABC"
set res=$translate("ABC",zynull,cval) zwrite res res="ABC"
set res=$translate("ABC",bval,$ZYSQLNULL) zwrite res res="A"
set res=$translate("ABC",bval,zynull) zwrite res res="A"
set res=$translate("ABC","CB",$ZYSQLNULL) zwrite res res="A"
set res=$translate("ABC","CB",zynull) zwrite res res="A"
set res=$translate(aval,$ZYSQLNULL) zwrite res res="ABC"
set res=$translate(aval,$ZYSQLNULL,$ZYSQLNULL) zwrite res res="ABC"
set res=$translate(aval,$ZYSQLNULL,zynull) zwrite res res="ABC"
set res=$translate(aval,$ZYSQLNULL,1) zwrite res res="ABC"
set res=$translate(aval,$ZYSQLNULL,cval) zwrite res res="ABC"
set res=$translate(aval,zynull) zwrite res res="ABC"
set res=$translate(aval,zynull,$ZYSQLNULL) zwrite res res="ABC"
set res=$translate(aval,zynull,zynull) zwrite res res="ABC"
set res=$translate(aval,zynull,1) zwrite res res="ABC"
set res=$translate(aval,zynull,cval) zwrite res res="ABC"
set res=$translate(aval,bval,$ZYSQLNULL) zwrite res res="A"
set res=$translate(aval,bval,zynull) zwrite res res="A"
set res=$translate(aval,"CB",$ZYSQLNULL) zwrite res res="A"
set res=$translate(aval,"CB",zynull) zwrite res res="A"
$ZCOLLATE
xexpr="A(""foo"")"
y0=0
z1=1
zynull=$ZYSQLNULL
set res=$zcollate($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,$ZYSQLNULL,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,$ZYSQLNULL,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,zynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,zynull,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,zynull,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,y0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
set res=$zcollate($ZYSQLNULL,y0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,y0,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate($ZYSQLNULL,y0,z1) 
set res=$zcollate(zynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,$ZYSQLNULL,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,$ZYSQLNULL,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,zynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,zynull,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,zynull,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,y0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOCANONICNAME, Value is not a canonic name ("")
set res=$zcollate(zynull,y0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,y0,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(zynull,y0,z1) 
set res=$zcollate(xexpr,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,$ZYSQLNULL,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,$ZYSQLNULL,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,zynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,zynull,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,zynull,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,y0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(xexpr,y0,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,$ZYSQLNULL,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,$ZYSQLNULL,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,zynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,zynull,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,zynull,z1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,y0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zcollate(^xgexpr,y0,zynull) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$PIECE and $ZPIECE
write $piece($ZYSQLNULL,$ZYSQLNULL) 
write $piece("","") 
write $piece($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("","","") 
write $piece($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("","","","") 
write $piece($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("","","",2) 
write $piece($ZYSQLNULL,$ZYSQLNULL,1) 
write $piece("","",1) 
write $piece($ZYSQLNULL,$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("","",1,"") 
write $piece($ZYSQLNULL,$ZYSQLNULL,1,2) 
write $piece("","",1,2) 
write $piece($ZYSQLNULL," ") 
write $piece(""," ") 
write $piece($ZYSQLNULL," ",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece(""," ","") 
write $piece($ZYSQLNULL," ",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece(""," ","","") 
write $piece($ZYSQLNULL," ",$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece(""," ","",2) 
write $piece($ZYSQLNULL," ",1) 
write $piece(""," ",1) 
write $piece($ZYSQLNULL," ",1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece(""," ",1,"") 
write $piece($ZYSQLNULL," ",1,2) 
write $piece(""," ",1,2) 
write $piece("1 2",$ZYSQLNULL) 
write $piece("1 2","") 
write $piece("1 2",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2","","") 
write $piece("1 2",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2","","","") 
write $piece("1 2",$ZYSQLNULL,$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2","","",2) 
write $piece("1 2",$ZYSQLNULL,1) 
write $piece("1 2","",1) 
write $piece("1 2",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2","",1,"") 
write $piece("1 2",$ZYSQLNULL,1,2) 
write $piece("1 2","",1,2) 
write $piece("1 2"," ",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2"," ","") 
write $piece("1 2"," ",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2"," ","","") 
write $piece("1 2"," ",$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2"," ","",2) 1 2
write $piece("1 2"," ",1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $piece("1 2"," ",1,"") 
write $zpiece($ZYSQLNULL,$ZYSQLNULL) 
write $zpiece("","") 
write $zpiece($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("","","") 
write $zpiece($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("","","","") 
write $zpiece($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("","","",2) 
write $zpiece($ZYSQLNULL,$ZYSQLNULL,1) 
write $zpiece("","",1) 
write $zpiece($ZYSQLNULL,$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("","",1,"") 
write $zpiece($ZYSQLNULL,$ZYSQLNULL,1,2) 
write $zpiece("","",1,2) 
write $zpiece($ZYSQLNULL," ") 
write $zpiece(""," ") 
write $zpiece($ZYSQLNULL," ",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece(""," ","") 
write $zpiece($ZYSQLNULL," ",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece(""," ","","") 
write $zpiece($ZYSQLNULL," ",$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece(""," ","",2) 
write $zpiece($ZYSQLNULL," ",1) 
write $zpiece(""," ",1) 
write $zpiece($ZYSQLNULL," ",1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece(""," ",1,"") 
write $zpiece($ZYSQLNULL," ",1,2) 
write $zpiece(""," ",1,2) 
write $zpiece("1 2",$ZYSQLNULL) 
write $zpiece("1 2","") 
write $zpiece("1 2",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2","","") 
write $zpiece("1 2",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2","","","") 
write $zpiece("1 2",$ZYSQLNULL,$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2","","",2) 
write $zpiece("1 2",$ZYSQLNULL,1) 
write $zpiece("1 2","",1) 
write $zpiece("1 2",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2","",1,"") 
write $zpiece("1 2",$ZYSQLNULL,1,2) 
write $zpiece("1 2","",1,2) 
write $zpiece("1 2"," ",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2"," ","") 
write $zpiece("1 2"," ",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2"," ","","") 
write $zpiece("1 2"," ",$ZYSQLNULL,2) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2"," ","",2) 1 2
write $zpiece("1 2"," ",1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $zpiece("1 2"," ",1,"") 
$NAME
xlocal="h"
^xglob="h"
y0=0
zynull=$ZYSQLNULL
write $name(zynull) zynull
write $name(k) k
write $name(zynull,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $name(k,"") k
write $name(zynull,0) zynull
write $name(k,0) k
write $name(xlocal,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $name(k,"") k
write $name(^xglob,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write $name(k,"") k
$ZATRANSFORM
set res=$zatransform($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","") 
set res=$zatransform($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","","") 
set res=$zatransform($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","","","") 
set res=$zatransform($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","","",0) 
set res=$zatransform($ZYSQLNULL,$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","",0) 
set res=$zatransform($ZYSQLNULL,$ZYSQLNULL,0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","",0,"") 
set res=$zatransform($ZYSQLNULL,$ZYSQLNULL,0,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","",0,0) 
set res=$zatransform($ZYSQLNULL,"") 
set res=$zatransform("","") 
set res=$zatransform($ZYSQLNULL,"",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","","") 
set res=$zatransform($ZYSQLNULL,"",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","","","") 
set res=$zatransform($ZYSQLNULL,"",$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","","",0) 
set res=$zatransform($ZYSQLNULL,"",0) 
set res=$zatransform("","",0) 
set res=$zatransform($ZYSQLNULL,"",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("","",0,"") 
set res=$zatransform($ZYSQLNULL,"",0,0) 
set res=$zatransform("","",0,0) 
set res=$zatransform("John Smythe",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","") 
set res=$zatransform("John Smythe",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","","") 
set res=$zatransform("John Smythe",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","","","") 
set res=$zatransform("John Smythe",$ZYSQLNULL,$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","","",0) 
set res=$zatransform("John Smythe",$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","",0) 
set res=$zatransform("John Smythe",$ZYSQLNULL,0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","",0,"") 
set res=$zatransform("John Smythe",$ZYSQLNULL,0,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","",0,0) 
set res=$zatransform("John Smythe","",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","","") 
set res=$zatransform("John Smythe","",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","","","") 
set res=$zatransform("John Smythe","",$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","","",0) 
set res=$zatransform("John Smythe","",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zatransform("John Smythe","",0,"") 

Testing m commands
WRITE
write $ZYSQLNULL 
write "" 
write $ZYSQLNULL,?$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"" 
write $ZYSQLNULL,?$ZYSQLNULL,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","" 
write $ZYSQLNULL,?$ZYSQLNULL,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","" 
write $ZYSQLNULL,?$ZYSQLNULL,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","h" h
write $ZYSQLNULL,?$ZYSQLNULL,zval ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","h" h
write $ZYSQLNULL,?6 
write "",?6 
write $ZYSQLNULL,?6,$ZYSQLNULL 
write "",?6,"" 
write $ZYSQLNULL,?6,zynull 
write "",?6,"" 
write $ZYSQLNULL,?6,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write "",?6,"h" h
write $ZYSQLNULL,?6,zval h
write "",?6,"h" h
write $ZYSQLNULL,?yval 
write "",?6 
write $ZYSQLNULL,?yval,$ZYSQLNULL 
write "",?6,"" 
write $ZYSQLNULL,?yval,zynull 
write "",?6,"" 
write $ZYSQLNULL,?yval,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write "",?6,"h" h
write $ZYSQLNULL,?yval,zval h
write "",?6,"h" h
write zynull 
write "" 
write zynull,?$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"" 
write zynull,?$ZYSQLNULL,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","" 
write zynull,?$ZYSQLNULL,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","" 
write zynull,?$ZYSQLNULL,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","h" h
write zynull,?$ZYSQLNULL,zval ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "",?"","h" h
write zynull,?6 
write "",?6 
write zynull,?6,$ZYSQLNULL 
write "",?6,"" 
write zynull,?6,zynull 
write "",?6,"" 
write zynull,?6,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write "",?6,"h" h
write zynull,?6,zval h
write "",?6,"h" h
write zynull,?yval 
write "",?6 
write zynull,?yval,$ZYSQLNULL 
write "",?6,"" 
write zynull,?yval,zynull 
write "",?6,"" 
write zynull,?yval,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write "",?6,"h" h
write zynull,?yval,zval h
write "",?6,"h" h
write asdf,?$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?"" asdf
write asdf,?$ZYSQLNULL,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?"","" asdf
write asdf,?$ZYSQLNULL,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?"","" asdf
write asdf,?$ZYSQLNULL,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?"","h" asdfh
write asdf,?$ZYSQLNULL,zval ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?"","h" asdfh
write asdf,?6,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?6,"" asdf
write asdf,?6,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?6,"" asdf
write asdf,?yval,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?6,"" asdf
write asdf,?yval,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write "asdf",?6,"" asdf
write xlocal,?$ZYSQLNULL asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"" asdf
write xlocal,?$ZYSQLNULL,$ZYSQLNULL asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","" asdf
write xlocal,?$ZYSQLNULL,zynull asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","" asdf
write xlocal,?$ZYSQLNULL,h asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","h" asdfh
write xlocal,?$ZYSQLNULL,zval asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","h" asdfh
write xlocal,?6,$ZYSQLNULL asdf
write "asdf",?6,"" asdf
write xlocal,?6,zynull asdf
write "asdf",?6,"" asdf
write xlocal,?yval,$ZYSQLNULL asdf
write "asdf",?6,"" asdf
write xlocal,?yval,zynull asdf
write "asdf",?6,"" asdf
write ^xglobal,?$ZYSQLNULL helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"" asdf
write ^xglobal,?$ZYSQLNULL,$ZYSQLNULL helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","" asdf
write ^xglobal,?$ZYSQLNULL,zynull helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","" asdf
write ^xglobal,?$ZYSQLNULL,h helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","h" asdfh
write ^xglobal,?$ZYSQLNULL,zval helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write "asdf",?"","h" asdfh
write ^xglobal,?6,$ZYSQLNULL hello
write "asdf",?6,"" asdf
write ^xglobal,?6,zynull hello
write "asdf",?6,"" asdf
write ^xglobal,?yval,$ZYSQLNULL hello
write "asdf",?6,"" asdf
write ^xglobal,?yval,zynull hello
write "asdf",?6,"" asdf
write:tv=1 $ZYSQLNULL 
write:tv=1 "" 
write:tv=1 $ZYSQLNULL,?$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"" 
write:tv=1 $ZYSQLNULL,?$ZYSQLNULL,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","" 
write:tv=1 $ZYSQLNULL,?$ZYSQLNULL,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","" 
write:tv=1 $ZYSQLNULL,?$ZYSQLNULL,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","h" h
write:tv=1 $ZYSQLNULL,?$ZYSQLNULL,zval ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","h" h
write:tv=1 $ZYSQLNULL,?6 
write:tv=1 "",?6 
write:tv=1 $ZYSQLNULL,?6,$ZYSQLNULL 
write:tv=1 "",?6,"" 
write:tv=1 $ZYSQLNULL,?6,zynull 
write:tv=1 "",?6,"" 
write:tv=1 $ZYSQLNULL,?6,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write:tv=1 "",?6,"h" h
write:tv=1 $ZYSQLNULL,?6,zval h
write:tv=1 "",?6,"h" h
write:tv=1 $ZYSQLNULL,?yval 
write:tv=1 "",?6 
write:tv=1 $ZYSQLNULL,?yval,$ZYSQLNULL 
write:tv=1 "",?6,"" 
write:tv=1 $ZYSQLNULL,?yval,zynull 
write:tv=1 "",?6,"" 
write:tv=1 $ZYSQLNULL,?yval,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write:tv=1 "",?6,"h" h
write:tv=1 $ZYSQLNULL,?yval,zval h
write:tv=1 "",?6,"h" h
write:tv=1 zynull 
write:tv=1 "" 
write:tv=1 zynull,?$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"" 
write:tv=1 zynull,?$ZYSQLNULL,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","" 
write:tv=1 zynull,?$ZYSQLNULL,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","" 
write:tv=1 zynull,?$ZYSQLNULL,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","h" h
write:tv=1 zynull,?$ZYSQLNULL,zval ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "",?"","h" h
write:tv=1 zynull,?6 
write:tv=1 "",?6 
write:tv=1 zynull,?6,$ZYSQLNULL 
write:tv=1 "",?6,"" 
write:tv=1 zynull,?6,zynull 
write:tv=1 "",?6,"" 
write:tv=1 zynull,?6,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write:tv=1 "",?6,"h" h
write:tv=1 zynull,?6,zval h
write:tv=1 "",?6,"h" h
write:tv=1 zynull,?yval 
write:tv=1 "",?6 
write:tv=1 zynull,?yval,$ZYSQLNULL 
write:tv=1 "",?6,"" 
write:tv=1 zynull,?yval,zynull 
write:tv=1 "",?6,"" 
write:tv=1 zynull,?yval,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: h
write:tv=1 "",?6,"h" h
write:tv=1 zynull,?yval,zval h
write:tv=1 "",?6,"h" h
write:tv=1 asdf,?$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?"" asdf
write:tv=1 asdf,?$ZYSQLNULL,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?"","" asdf
write:tv=1 asdf,?$ZYSQLNULL,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?"","" asdf
write:tv=1 asdf,?$ZYSQLNULL,h ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?"","h" asdfh
write:tv=1 asdf,?$ZYSQLNULL,zval ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?"","h" asdfh
write:tv=1 asdf,?6,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 asdf,?6,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 asdf,?yval,$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 asdf,?yval,zynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 xlocal,?$ZYSQLNULL asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"" asdf
write:tv=1 xlocal,?$ZYSQLNULL,$ZYSQLNULL asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","" asdf
write:tv=1 xlocal,?$ZYSQLNULL,zynull asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","" asdf
write:tv=1 xlocal,?$ZYSQLNULL,h asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","h" asdfh
write:tv=1 xlocal,?$ZYSQLNULL,zval asdfZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","h" asdfh
write:tv=1 xlocal,?6,$ZYSQLNULL asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 xlocal,?6,zynull asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 xlocal,?yval,$ZYSQLNULL asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 xlocal,?yval,zynull asdf
write:tv=1 "asdf",?6,"" asdf
write:tv=1 ^xglobal,?$ZYSQLNULL helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"" asdf
write:tv=1 ^xglobal,?$ZYSQLNULL,$ZYSQLNULL helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","" asdf
write:tv=1 ^xglobal,?$ZYSQLNULL,zynull helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","" asdf
write:tv=1 ^xglobal,?$ZYSQLNULL,h helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","h" asdfh
write:tv=1 ^xglobal,?$ZYSQLNULL,zval helloZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 "asdf",?"","h" asdfh
write:tv=1 ^xglobal,?6,$ZYSQLNULL hello
write:tv=1 "asdf",?6,"" asdf
write:tv=1 ^xglobal,?6,zynull hello
write:tv=1 "asdf",?6,"" asdf
write:tv=1 ^xglobal,?yval,$ZYSQLNULL hello
write:tv=1 "asdf",?6,"" asdf
write:tv=1 ^xglobal,?yval,zynull hello
write:tv=1 "asdf",?6,"" asdf
write *$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
write:tv=1 *$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
FOR
Expect error as passing $ZYSQLNULL to integer parameters
set incr=1 for $ZYSQLNULL=$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VAREXPECTED, Variable expected in this context
set incr=1 for $ZYSQLNULL=$ZYSQLNULL:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VAREXPECTED, Variable expected in this context
set incr=1 for $ZYSQLNULL=$ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VAREXPECTED, Variable expected in this context
set incr=1 for var=$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 1
set incr=1 for var=$ZYSQLNULL:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=$ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=$ZYSQLNULL:$ZYSQLNULL:3 write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=$ZYSQLNULL:1 write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=$ZYSQLNULL:1:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=$ZYSQLNULL:1:3 write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=1:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 12
set incr=1 for var=1:$ZYSQLNULL:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=1:$ZYSQLNULL:3 write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set incr=1 for var=1:1:$ZYSQLNULL write incr set incr=incr+1 quit:incr=3 ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
Expecting the behavior to be same for $ZYSQLNULL and "
for ""="hello","","test" write var,! ZSTATUS=ydb484f+...^ydb484,%YDB-E-VAREXPECTED, Variable expected in this context
for var="hello",$ZYSQLNULL,"test" write var,! hello

test

for var="hello","","test" write var,! hello

test

for i=$zysqlnull:1:1  zwrite i
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
for i=1:$zysqlnull:1  zwrite i
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
for i=1:1:$zysqlnull  zwrite i
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
for i=$zysqlnull:1:$zysqlnull  zwrite i
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
for i=1:$zysqlnull:$zysqlnull  zwrite i
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
for i=$zysqlnull:$zysqlnull:1  zwrite i
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
for i=$zysqlnull:$zysqlnull:$zysqlnull  zwrite i
ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
for i="a",$zysqlnull,"b" zwrite i
i="a"
i=$ZYSQLNULL
i="b"

SET
set $ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set $ZYSQLNULL=ystr ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set $ZYSQLNULL=yint ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set $ZYSQLNULL=ylocal ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set $ZYSQLNULL=^yglobal ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set xlocal=$ZYSQLNULL 
set ^xglob=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set $extract(x,3,6)=$ZYSQLNULL 
set $extract(^x,3,6)=$ZYSQLNULL 
set $piece(x,"^",2)=$ZYSQLNULL 
set $piece(^x,"^",2)=$ZYSQLNULL 
set $zprompt=$ZYSQLNULL 
set:tv=1 $ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set:tv=1 $ZYSQLNULL=ystr ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set:tv=1 $ZYSQLNULL=yint ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set:tv=1 $ZYSQLNULL=ylocal ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set:tv=1 $ZYSQLNULL=^yglobal ZSTATUS=ydb484f+...^ydb484,%YDB-E-SVNOSET, Cannot SET this special variable
set:tv=1 xlocal=$ZYSQLNULL 
set:tv=1 ^xglob=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set:tv=1 $extract(x,3,6)=$ZYSQLNULL 
set:tv=1 $extract(^x,3,6)=$ZYSQLNULL 
set:tv=1 $piece(x,"^",2)=$ZYSQLNULL 
set:tv=1 $piece(^x,"^",2)=$ZYSQLNULL 
set:tv=1 $zprompt=$ZYSQLNULL 
READ
read $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-RWARG, This is not a legal argument for a READ command
read "" 
read:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-RWARG, This is not a legal argument for a READ command
read:tv=1 "" 
ZLINK
zlink $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink $ZYSQLNULL:"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink "":"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink $ZYSQLNULL:"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink "":"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink "ydb484dummy.m":$ZYSQLNULL 
zlink "ydb484dummy.m":"" 
zlink:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 $ZYSQLNULL:"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 "":"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 $ZYSQLNULL:"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 "":"-noobject -list" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZLINKFILE, Error while zlinking "",%YDB-I-TEXT, Filename/path is missing
zlink:tv=1 "ydb484dummy.m":$ZYSQLNULL 
zlink:tv=1 "ydb484dummy.m":"" 
ZMESSAGE
zmessage $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zmessage $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zmessage $ZYSQLNULL:"z" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zmessage 150373850:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: 
zmessage:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zmessage:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zmessage:tv=1 $ZYSQLNULL:"z" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zmessage:tv=1 150373850:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: 
VIEW
view $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view "LABELS":$ZYSQLNULL 
view $ZYSQLNULL:"UPPER" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"LOWER" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view "SETENV":$ZYSQLNULL:$ZYSQLNULL 
view "SETENV":$ZYSQLNULL:1 
view "SETENV":"hello":$ZYSQLNULL 
view "UNSETENV":$ZYSQLNULL:$ZYSQLNULL 
view "UNSETENV":$ZYSQLNULL:1 
view "UNSETENV":"hello":$ZYSQLNULL 
view:tv=1 "SETENV":$ZYSQLNULL:$ZYSQLNULL 
view:tv=1 "SETENV":$ZYSQLNULL:1 
view:tv=1 "SETENV":"hello":$ZYSQLNULL 
view:tv=1 "UNSETENV":$ZYSQLNULL:$ZYSQLNULL 
view:tv=1 "UNSETENV":$ZYSQLNULL:1 
view:tv=1 "UNSETENV":"hello":$ZYSQLNULL 
view "TRACE":$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "TRACE":$ZYSQLNULL:"^x" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "TRACE":0:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOTGBL, Expected a global variable name starting with an up-arrow (^): 
view:tv=1 "TRACE":$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "TRACE":$ZYSQLNULL:"^x" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "TRACE":0:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOTGBL, Expected a global variable name starting with an up-arrow (^): 
view $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view "BREAKMSG":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "GDSCERT":$ZYSQLNULL 
Caution: Database Block Certification Has Been ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "GVDUPSETNOOP":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "JOBPID":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "ZDATE_FORM":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter ZDATE_FORM not valid
view:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 "BREAKMSG":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "GDSCERT":$ZYSQLNULL 
Caution: Database Block Certification Has Been ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "GVDUPSETNOOP":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "JOBPID":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "ZDATE_FORM":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter ZDATE_FORM not valid
view $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:$ZYSQLNULL:4 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name":4 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view "DBFLUSH":$ZYSQLNULL 
view "DBFLUSH":$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "DBFLUSH":$ZYSQLNULL:4 
view "DBFLUSH":"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: "NAME"
view:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:$ZYSQLNULL:4 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name":4 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 "DBFLUSH":$ZYSQLNULL 
view:tv=1 "DBFLUSH":$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "DBFLUSH":$ZYSQLNULL:4 
view:tv=1 "DBFLUSH":"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: "NAME"
view $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view "DBSYNC":$ZYSQLNULL 
view "EPOCH":$ZYSQLNULL 
view "FLUSH":$ZYSQLNULL 
view "GVSRESET":$ZYSQLNULL 
view "JNLFLUSH":$ZYSQLNULL 
view "PATCODE":$ZYSQLNULL 
view "PATLOAD":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-PATLOAD, Error loading pattern file 
view:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 "DBSYNC":$ZYSQLNULL 
view:tv=1 "EPOCH":$ZYSQLNULL 
view:tv=1 "FLUSH":$ZYSQLNULL 
view:tv=1 "GVSRESET":$ZYSQLNULL 
view:tv=1 "JNLFLUSH":$ZYSQLNULL 
view:tv=1 "PATCODE":$ZYSQLNULL 
view:tv=1 "PATLOAD":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-PATLOAD, Error loading pattern file 
view $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"RECURSIVE" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"NORECURSIVE" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view "LINK":$ZYSQLNULL 
view:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"RECURSIVE" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"NORECURSIVE" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 "LINK":$ZYSQLNULL 
view "NOLOGNONTP":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGNONTP has inappropriate number of subparameters
view "NOLOGN":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGNONTP has inappropriate number of subparameters
view "LOGNONTP":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "LOGN":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "NOLOGNONTP":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGNONTP has inappropriate number of subparameters
view:tv=1 "NOLOGN":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGNONTP has inappropriate number of subparameters
view:tv=1 "LOGNONTP":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "LOGN":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "NOLOGTPRESTART":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGTPRESTART has inappropriate number of subparameters
view "NOLOGT":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGTPRESTART has inappropriate number of subparameters
view "LOGTPRESTART":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view "LOGT":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "NOLOGTPRESTART":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGTPRESTART has inappropriate number of subparameters
view:tv=1 "NOLOGT":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWARGCNT, View parameter NOLOGTPRESTART has inappropriate number of subparameters
view:tv=1 "LOGTPRESTART":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view:tv=1 "LOGT":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
view $ZYSQLNULL:"$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:""^x,^y"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
view $ZYSQLNULL:"+$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"+"^x,^y"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
view $ZYSQLNULL:"-$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"-"^x,^y"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
view "NOISOLATION":"$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWGVN, Invalid global key name used with VIEW/$VIEW(): "$ZYSQLNULL"
view "NOISOLATION":"+$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWGVN, Invalid global key name used with VIEW/$VIEW(): "$ZYSQLNULL"
view "NOISOLATION":"-$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWGVN, Invalid global key name used with VIEW/$VIEW(): "$ZYSQLNULL"
view:tv=1 $ZYSQLNULL:"$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:""^x,^y"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
view:tv=1 $ZYSQLNULL:"+$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"+"^x,^y"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
view:tv=1 $ZYSQLNULL:"-$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"-"^x,^y"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
view:tv=1 "NOISOLATION":"$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWGVN, Invalid global key name used with VIEW/$VIEW(): "$ZYSQLNULL"
view:tv=1 "NOISOLATION":"+$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWGVN, Invalid global key name used with VIEW/$VIEW(): "$ZYSQLNULL"
view:tv=1 "NOISOLATION":"-$ZYSQLNULL" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWGVN, Invalid global key name used with VIEW/$VIEW(): "$ZYSQLNULL"
view "NOISOLATION":"" 
view:tv=1 "NOISOLATION":"" 
view $ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:$ZYSQLNULL:"0%" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:$ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:$ZYSQLNULL:"*" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name":"0%" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view $ZYSQLNULL:"name":"*" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
##SUSPEND_OUTPUT MM
view "POOLLIMIT":$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
##ALLOW_OUTPUT MM
##SUSPEND_OUTPUT BG
view "POOLLIMIT":$ZYSQLNULL:$ZYSQLNULL 
##ALLOW_OUTPUT BG
view "POOLLIMIT":$ZYSQLNULL:"0%" 
view "POOLLIMIT":$ZYSQLNULL:1 
view "POOLLIMIT":$ZYSQLNULL:"*" 
view "POOLLIMIT":"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: "NAME"
view:tv=1 $ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:$ZYSQLNULL:"0%" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:$ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:$ZYSQLNULL:"*" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name":"0%" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
view:tv=1 $ZYSQLNULL:"name":"*" ZSTATUS=ydb484f+...^ydb484,%YDB-E-VIEWNOTFOUND, View parameter  not valid
##SUSPEND_OUTPUT MM
view:tv=1 "POOLLIMIT":$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
##ALLOW_OUTPUT MM
##SUSPEND_OUTPUT BG
view:tv=1 "POOLLIMIT":$ZYSQLNULL:$ZYSQLNULL 
##ALLOW_OUTPUT BG
view:tv=1 "POOLLIMIT":$ZYSQLNULL:"0%" 
view:tv=1 "POOLLIMIT":$ZYSQLNULL:1 
view:tv=1 "POOLLIMIT":$ZYSQLNULL:"*" 
view:tv=1 "POOLLIMIT":"name":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-NOREGION, REGION not found: "NAME"
view NOSTATSHARE:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: NOSTATSHARE
view STATSHARE:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: STATSHARE
view:tv=1 NOSTATSHARE:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: NOSTATSHARE
view:tv=1 STATSHARE:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: STATSHARE
JOB
JOB $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:($ZYSQLNULL=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:(CMDLINE=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:(DEFAULT=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:(ERROR=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:(GBLDIR=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:(INPUT=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:(OUTPUT=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB $ZYSQLNULL:(STARTUP=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB dummydebug:($ZYSQLNULL=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-JOBPARUNK, Job parameter unknown
JOB dummydebug("test"):($ZYSQLNULL=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-JOBPARUNK, Job parameter unknown
JOB:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:($ZYSQLNULL=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:(CMDLINE=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:(DEFAULT=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:(ERROR=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:(GBLDIR=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:(INPUT=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:(OUTPUT=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 $ZYSQLNULL:(STARTUP=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
JOB:tv=1 dummydebug:($ZYSQLNULL=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-JOBPARUNK, Job parameter unknown
JOB:tv=1 dummydebug("test"):($ZYSQLNULL=$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-JOBPARUNK, Job parameter unknown
LOCK
LOCK $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK +$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK -$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 +$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 -$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK ^x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK @c:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK +$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK +x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK +^x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK +@c:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK -$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK -x:$ZYSQLNULL 
LOCK -^x:$ZYSQLNULL 
LOCK -@c:$ZYSQLNULL 
LOCK:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 ^x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 @c:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 +$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 +x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 +^x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 +@c:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 -$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 -x:$ZYSQLNULL 
LOCK:tv=1 -^x:$ZYSQLNULL 
LOCK:tv=1 -@c:$ZYSQLNULL 
ZEDIT
zedit $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZEDFILSPEC, Illegal ZEDIT file specification: 
zedit xzynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZEDFILSPEC, Illegal ZEDIT file specification: 
zedit:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZEDFILSPEC, Illegal ZEDIT file specification: 
zedit:tv=1 xzynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZEDFILSPEC, Illegal ZEDIT file specification: 
HANG
hang $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
hang xzynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
hang:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
hang:tv=1 xzynull ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
$ZSOCKET
write $zsocket($ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DELIMITER") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DELIMITER",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DELIMITER",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DESCRIPTOR") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DESCRIPTOR",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DESCRIPTOR",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"HOWCREATED") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"HOWCREATED",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"HOWCREATED",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"INDEX") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"INDEX",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"INDEX",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"IOERROR") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"IOERROR",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"IOERROR",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"LOCALADDRESS") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"LOCALADDRESS",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"LOCALADDRESS",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"LOCALPORT") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"LOCALPORT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"LOCALPORT",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"MOREREADTIME") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"MOREREADTIME",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"MOREREADTIME",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"PARENT") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"PARENT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"PARENT",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"PROTOCOL") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"PROTOCOL",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"PROTOCOL",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"REMOTEADDRESS") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"REMOTEADDRESS",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"REMOTEADDRESS",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"REMOTEPORT") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"REMOTEPORT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"REMOTEPORT",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"SOCKETHANDLE") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"SOCKETHANDLE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"SOCKETHANDLE",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"STATE") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"STATE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"STATE",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZBFSIZE") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZBFSIZE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZBFSIZE",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZFF") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZFF",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZFF",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZIBFSIZE") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZIBFSIZE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZIBFSIZE",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZDELAY") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZDELAY",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"ZDELAY",0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("",$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","DELIMITER",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","DESCRIPTOR",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","HOWCREATED",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","INDEX",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","IOERROR",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","LOCALADDRESS",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","LOCALPORT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","MOREREADTIME",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","PARENT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","PROTOCOL",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","REMOTEADDRESS",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","REMOTEPORT",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","SOCKETHANDLE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","STATE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","ZBFSIZE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","ZFF",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","ZIBFSIZE",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","ZDELAY",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"CURRENTINDEX") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"NUMBER") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","CURRENTINDEX") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","NUMBER") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",$ZYSQLNULL,SESSION) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",$ZYSQLNULL,OPTIONS) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",$ZYSQLNULL,CIPHER) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",$ZYSQLNULL,ALL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",0,SESSION) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",0,OPTIONS) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",0,CIPHER) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"TLS",0,ALL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","TLS",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","TLS",$ZYSQLNULL,SESSION) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","TLS",$ZYSQLNULL,OPTIONS) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","TLS",$ZYSQLNULL,CIPHER) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","TLS",$ZYSQLNULL,ALL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","TLS",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DELIMITER",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DELIMITER",$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DELIMITER",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket($ZYSQLNULL,"DELIMITER",0,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","DELIMITER",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","DELIMITER",$ZYSQLNULL,0) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
write $zsocket("","DELIMITER",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSOCKETNOTSOCK, $ZSOCKET function called but device is not a socket
$ZPEEK
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",$ZYSQLNULL,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GRLREPL",0,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",$ZYSQLNULL,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JPCREPL",0,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",$ZYSQLNULL,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RIHREPL",0,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",$ZYSQLNULL,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("RPCREPL",0,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",$ZYSQLNULL,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UHCREPL",0,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",$ZYSQLNULL,1,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,"C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,"I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,"U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,"S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,"T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,"X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,$ZYSQLNULL,"Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("UPLREPL",0,1,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek("CSAREG",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("CSAREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("CSAREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("FHREG:name",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("FHREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("FHREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GDRREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("GDRREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("NLREG:name",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("NLREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("NLREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JBFREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JBFREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("JNLREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek("JNLREG:name",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (region name) parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek($ZYSQLNULL,0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic type parameter for $ZPEEK()
set res=$zpeek("GLFREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GLFREPL:0",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GLFREPL:0",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("GSLREPL:0",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("GSLREPL:0",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZPEEKNORPLINFO, $ZPEEK() unable to access requested replication structure
set res=$zpeek("PEEK",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set res=$zpeek("PEEK:0",$ZYSQLNULL,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,1) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",$ZYSQLNULL,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",0,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set res=$zpeek("PEEK:0",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z","C") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z","I") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z","U") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z","S") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z","T") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z","X") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z","Z") ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set res=$zpeek("PEEK:0",0,"Z",$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
QUIT
set res=$$dummydebugresult 
res=$ZYSQLNULL
ZWRITE
zwrite xzynull xzynull=$ZYSQLNULL
zwrite $ZYSQLNULL $ZYSQLNULL=$ZYSQLNULL
OPEN
open $ZYSQLNULL 
open $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open $ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open $ZYSQLNULL:$ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open $ZYSQLNULL:"READONLY" ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open $ZYSQLNULL:"READONLY":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open $ZYSQLNULL:"READONLY":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open "." ZSTATUS=ydb484f+...^ydb484,%YDB-E-GTMEISDIR, . : Is a directory
open ".":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open ".":$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open ".":$ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open ".":"READONLY":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-DEVPARUNK, Deviceparameter unknown
open $ZYSQLNULL::$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
open $ZYSQLNULL::1 
open "."::$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZGOTO
ZGOTO $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZGOTO $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZGOTO "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZGOTO $ZYSQLNULL:dummydebug ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZGOTO 0:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZGOTO 0:"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZGOTO:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZGOTO:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZGOTO:tv=1 "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZGOTO:tv=1 $ZYSQLNULL:dummydebug ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZGOTO:tv=1 0:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZGOTO:tv=1 0:"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
ZBREAK
zbreak $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak $ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak "":"":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak $ZYSQLNULL:$ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak "":"":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak $ZYSQLNULL:"W ! ZP @$ZPOS W !":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak "":"W ! ZP @$ZPOS W !":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak $ZYSQLNULL:"W ! ZP @$ZPOS W !":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak "":"W ! ZP @$ZPOS W !":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak dummydebug:$ZYSQLNULL 
zbreak dummydebug:"" 
zbreak dummydebug:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zbreak dummydebug:"":"" 
zbreak dummydebug:$ZYSQLNULL:1 
zbreak dummydebug:"":1 
zbreak dummydebug:"W ! ZP @$ZPOS W !":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zbreak dummydebug:"W ! ZP @$ZPOS W !":"" 
zbreak:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 $ZYSQLNULL:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 "":"":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 $ZYSQLNULL:$ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 "":"":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 $ZYSQLNULL:"W ! ZP @$ZPOS W !":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 "":"W ! ZP @$ZPOS W !":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 $ZYSQLNULL:"W ! ZP @$ZPOS W !":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 "":"W ! ZP @$ZPOS W !":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 dummydebug:$ZYSQLNULL 
zbreak:tv=1 dummydebug:"" 
zbreak:tv=1 dummydebug:$ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zbreak:tv=1 dummydebug:"":"" 
zbreak:tv=1 dummydebug:$ZYSQLNULL:1 
zbreak:tv=1 dummydebug:"":1 
zbreak:tv=1 dummydebug:"W ! ZP @$ZPOS W !":$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zbreak:tv=1 dummydebug:"W ! ZP @$ZPOS W !":"" 
zbreak $ZYSQLNULL::$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak ""::"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak $ZYSQLNULL::1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak ""::1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak dummydebug::$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zbreak dummydebug::"" 
zbreak:tv=1 $ZYSQLNULL::$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 ""::"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 $ZYSQLNULL::1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 ""::1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zbreak:tv=1 dummydebug::$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zbreak:tv=1 dummydebug::"" 
ZPRINT
zprint $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint $ZYSQLNULL:$ZYSQLNULL+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":""+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint $ZYSQLNULL:$ZYSQLNULL+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":""+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint $ZYSQLNULL:dummydebug ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":dummydebug ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint $ZYSQLNULL:dummydebug+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":dummydebug+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint $ZYSQLNULL:dummydebug+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":dummydebug+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:$ZYSQLNULL+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:""+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:$ZYSQLNULL+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:""+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:dummydebug dummydebug
zprint dummydebug^ydb484:dummydebug dummydebug
zprint dummydebug^ydb484:dummydebug+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zprint dummydebug^ydb484:dummydebug+"" dummydebug
zprint:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 $ZYSQLNULL:$ZYSQLNULL+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":""+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 $ZYSQLNULL:$ZYSQLNULL+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":""+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 $ZYSQLNULL:dummydebug ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":dummydebug ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 $ZYSQLNULL:dummydebug+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":dummydebug+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 $ZYSQLNULL:dummydebug+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":dummydebug+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:$ZYSQLNULL+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:""+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:$ZYSQLNULL+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:""+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:dummydebug dummydebug
zprint:tv=1 dummydebug^ydb484:dummydebug dummydebug
zprint:tv=1 dummydebug^ydb484:dummydebug+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zprint:tv=1 dummydebug^ydb484:dummydebug+"" dummydebug
zprint $ZYSQLNULL:+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint $ZYSQLNULL:+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint "":+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint dummydebug^ydb484:+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zprint:tv=1 $ZYSQLNULL:+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":+"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 $ZYSQLNULL:+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 "":+1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LABELEXPECTED, Label expected in this context
zprint:tv=1 dummydebug^ydb484:+$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZALLOCATE
zallocate $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate $ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate "":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zallocate @c:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zallocate ^x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zallocate:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate:tv=1 "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate:tv=1 $ZYSQLNULL:1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate:tv=1 "":1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
zallocate:tv=1 x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zallocate:tv=1 @c:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
zallocate:tv=1 ^x:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
TSTART
tstart $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart $ZYSQLNULL:$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart "":""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart $ZYSQLNULL:TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart "":TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart $ZYSQLNULL:TRANSACTIONID="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart "":TRANSACTIONID="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart $ZYSQLNULL:TRANSACTIONID="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart "":TRANSACTIONID="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart $ZYSQLNULL:($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart "":("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart $ZYSQLNULL:(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart "":(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart y:$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart y:TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart y:$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart y:(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart ():TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart ():$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ():(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart ($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-VAREXPECTED, Variable expected in this context
tstart *:$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart *:TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart *:$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart *:(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart :TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart :$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart :(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 $ZYSQLNULL:$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 "":""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 $ZYSQLNULL:TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 "":TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 $ZYSQLNULL:TRANSACTIONID="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 "":TRANSACTIONID="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 $ZYSQLNULL:TRANSACTIONID="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 "":TRANSACTIONID="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 $ZYSQLNULL:($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 "":("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 $ZYSQLNULL:(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 "":(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
tstart:tv=1 y:$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 y:TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 y:$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 y:(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 ():TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 ():$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 ():(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 *:TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 *:$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 *:(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :$ZYSQLNULL=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :""="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :TRANSACTIONID=$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 :TRANSACTIONID="" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
tstart:tv=1 :$ZYSQLNULL="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :""="BATCH" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :$ZYSQLNULL="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :""="BA" ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :($ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :("") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :(SERIAL:$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
tstart:tv=1 :(SERIAL:"") ZSTATUS=ydb484f+...^ydb484,%YDB-E-TSTRTPARM, Error parsing TSTART qualifier
LOCK
LOCK (x,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK +(x,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK -(x,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK (x,$ZYSQLNULL):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK +(x,$ZYSQLNULL):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK -(x,$ZYSQLNULL):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK (x,$ZYSQLNULL):1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK +(x,$ZYSQLNULL):1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK -(x,$ZYSQLNULL):1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK (x,^x):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK -(x,^x):$ZYSQLNULL 
LOCK +(x,^x):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 (x,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 +(x,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 -(x,$ZYSQLNULL) ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 (x,$ZYSQLNULL):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 +(x,$ZYSQLNULL):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 -(x,$ZYSQLNULL):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 (x,$ZYSQLNULL):1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 +(x,$ZYSQLNULL):1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 -(x,$ZYSQLNULL):1 ZSTATUS=ydb484f+...^ydb484,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
LOCK:tv=1 (x,^x):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
LOCK:tv=1 -(x,^x):$ZYSQLNULL 
LOCK:tv=1 +(x,^x):$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
ZSTEP
zstep $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep INTO:$ZYSQLNULL 
zstep INTO:"" 
zstep OUTOF:$ZYSQLNULL 
zstep OUTOF:"" 
zstep OVER:$ZYSQLNULL 
zstep OVER:"" 
zstep ACTIONS:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZSTEP, Invalid ZSTEP qualifier
zstep ACTIONS:"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZSTEP, Invalid ZSTEP qualifier
zstep:tv=1 $ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep:tv=1 "" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep:tv=1 $ZYSQLNULL:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep:tv=1 "":"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep:tv=1 INTO:$ZYSQLNULL 
zstep:tv=1 INTO:"" 
zstep:tv=1 OUTOF:$ZYSQLNULL 
zstep:tv=1 OUTOF:"" 
zstep:tv=1 OVER:$ZYSQLNULL 
zstep:tv=1 OVER:"" 
zstep:tv=1 ACTIONS:$ZYSQLNULL ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZSTEP, Invalid ZSTEP qualifier
zstep:tv=1 ACTIONS:"" ZSTATUS=ydb484f+...^ydb484,%YDB-E-INVZSTEP, Invalid ZSTEP qualifier
zstep $ZYSQLNULL:"W ! ZP @$ZPOS W !" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep "":"W ! ZP @$ZPOS W !" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep:tv=1 $ZYSQLNULL:"W ! ZP @$ZPOS W !" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
zstep:tv=1 "":"W ! ZP @$ZPOS W !" ZSTATUS=ydb484f+...^ydb484,%YDB-E-ZSTEPARG, ZSTEP argument expected
ZHELP
zhelp $ZYSQLNULL 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

Topic? zhelp $ZYSQLNULL:$ZYSQLNULL 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp $ZYSQLNULL:"" 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp "" 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp "":$ZYSQLNULL 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp "":"" 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp:tv=1 $ZYSQLNULL 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp:tv=1 $ZYSQLNULL:$ZYSQLNULL 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp:tv=1 $ZYSQLNULL:"" 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp:tv=1 "" 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp:tv=1 "":$ZYSQLNULL 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

zhelp:tv=1 "":"" 




Additional information available: 

About_YottaDB           Commands    Err_Processing          Functions
Integrate_External      Internationalization    IO_Processing           
ISV         Language_Extensions     M_Lang_Features         Opr_Dbg_Dir_Mode
Program_Cycle           Triggers    Utility_Routines        

################################################################
# Test : ydb484g : Miscellaneous tests
----------------------------------------------------------------

 -> Simple test of OC_CONTAIN : 0011
 -> Simple test of OC_FOLLOW : 0011
 -> Simple test of OC_SORTS_AFTER : 1100
 -> Simple test of OC_EQU : 0011
 -> Simple test of OC_PATTERN : 0011
 -> Simple test of OC_NUMCMP : 001111
set comparison="A>B",A=2,B=1 if @comparison : IF block reached as expected
set comparison="A<B",A=2,B=1 if @comparison : ELSE block reached as expected
set result=$zysqlnull=$zysqlnull  zwrite result
result=$ZYSQLNULL
set result=$zysqlnull=""  zwrite result
result=$ZYSQLNULL
set result=$zysqlnull'=$zysqlnull  zwrite result
result=$ZYSQLNULL
set result=$zysqlnull'=""  zwrite result
result=$ZYSQLNULL
set result=+$zysqlnull=0  zwrite result
result=$ZYSQLNULL
set result=$zysqlnull=$zysqlnull=$zysqlnull  zwrite result
result=$ZYSQLNULL
set result=$zysqlnull=($zysqlnull=$zysqlnull)  zwrite result
result=$ZYSQLNULL
set result=$zysqlnull=$zysqlnull=($zysqlnull=$zysqlnull)  zwrite result
result=$ZYSQLNULL
set result=+$zysqlnull  zwrite result
result=$ZYSQLNULL
set FALSE=0 Write (($Test'[$Test)!(($Select(FALSE:1,1:0)'=$Select(FALSE:1,1:0))'=FALSE)),!
0
set FALSE=0 Write ((($Select(FALSE:1,1:0)'=$Select(FALSE:1,1:0))'=FALSE)!($Test'[$Test)),!
0
set FALSE=0 Write ((($Select(FALSE:1,1:0)'=$Select(FALSE:1,1:0))'=FALSE)!(($Select(FALSE:1,1:0)'=$Select(FALSE:1,1:0))'=FALSE)),!
0
goto +($zysqlnull="")
ZSTATUS=ydb484g+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
kill x set result=$incr(x,$zysqlnull) zwrite result,x
ZSTATUS=ydb484g+...^ydb484,%YDB-E-ZYSQLNULLNOTVALID, $ZYSQLNULL cannot be used as an integer, numeric, gvn subscript/value or lock subscript
set result=$zpeek("PEEK",0,"Z","X")
ZSTATUS=ydb484g+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set result=$zpeek("PEEK:",0,"Z","X")
ZSTATUS=ydb484g+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument parameter for $ZPEEK()
set result=$zpeek("PEEK:0",0,"Z","X")
ZSTATUS=ydb484g+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set result=$zpeek("PEEK:0x",0,"Z","X")
ZSTATUS=ydb484g+...^ydb484,%YDB-E-BADZPEEKARG, Missing, invalid or surplus mnemonic argument (peek base address) parameter for $ZPEEK()
set result=$zpeek("PEEK:0x1",0,"Z","X")
ZSTATUS=ydb484g+...^ydb484,%YDB-E-BADZPEEKFMT, $ZPEEK() value length inappropriate for selected format
 -> Test that VIEW NOUNDEF continues to work fine with boolean expressions
 -> Testing VIEW "NOUNDEF"
if undefvar
zwrite $test
$TEST=0
if undefvar1[$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull[undefvar2
zwrite $test
$TEST=0
if undefvar1[undefvar2
zwrite $test
$TEST=1
if undefvar1'[$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull'[undefvar2
zwrite $test
$TEST=0
if undefvar1'[undefvar2
zwrite $test
$TEST=0
if undefvar1]]$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull]]undefvar2
zwrite $test
$TEST=0
if undefvar1]]undefvar2
zwrite $test
$TEST=0
if undefvar1']]$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull']]undefvar2
zwrite $test
$TEST=0
if undefvar1']]undefvar2
zwrite $test
$TEST=1
if undefvar1]$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull]undefvar2
zwrite $test
$TEST=0
if undefvar1]undefvar2
zwrite $test
$TEST=0
if undefvar1']$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull']undefvar2
zwrite $test
$TEST=0
if undefvar1']undefvar2
zwrite $test
$TEST=1
if undefvar1?1A
zwrite $test
$TEST=0
if undefvar1'?1A
zwrite $test
$TEST=1
if undefvar1<$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull<undefvar2
zwrite $test
$TEST=0
if undefvar1<undefvar2
zwrite $test
$TEST=0
if undefvar1'<$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull'<undefvar2
zwrite $test
$TEST=0
if undefvar1'<undefvar2
zwrite $test
$TEST=1
if undefvar1>$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull>undefvar2
zwrite $test
$TEST=0
if undefvar1>undefvar2
zwrite $test
$TEST=0
if undefvar1'>$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull'>undefvar2
zwrite $test
$TEST=0
if undefvar1'>undefvar2
zwrite $test
$TEST=1
if undefvar1=$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull=undefvar2
zwrite $test
$TEST=0
if undefvar1=undefvar2
zwrite $test
$TEST=1
if undefvar1'=$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull'=undefvar2
zwrite $test
$TEST=0
if undefvar1'=undefvar2
zwrite $test
$TEST=0
if undefvar1+$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull+undefvar2
zwrite $test
$TEST=0
if undefvar1+undefvar2
zwrite $test
$TEST=0
if undefvar1-$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull-undefvar2
zwrite $test
$TEST=0
if undefvar1-undefvar2
zwrite $test
$TEST=0
if undefvar1*$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull*undefvar2
zwrite $test
$TEST=0
if undefvar1*undefvar2
zwrite $test
$TEST=0
if undefvar1/$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull/undefvar2
zwrite $test
$TEST=0
if undefvar1/undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-DIVZERO, Attempt to divide by zero
zwrite $test
$TEST=0
if undefvar1\$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull\undefvar2
zwrite $test
$TEST=0
if undefvar1\undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-DIVZERO, Attempt to divide by zero
zwrite $test
$TEST=0
if undefvar1#$zysqlnull
zwrite $test
$TEST=0
if $zysqlnull#undefvar2
zwrite $test
$TEST=0
if undefvar1#undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-DIVZERO, Attempt to divide by zero
zwrite $test
$TEST=0
for loopcnt=1:undefvar:-1 write loopcnt,!
zwrite $test
$TEST=0
 -> Testing VIEW "UNDEF"
if undefvar
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar
zwrite $test
$TEST=0
if undefvar1[$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull[undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1[undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1'[$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull'[undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1'[undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1]]$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull]]undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1]]undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1']]$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull']]undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1']]undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1]$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull]undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1]undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1']$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull']undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1']undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1?1A
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1'?1A
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1<$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull<undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1<undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1'<$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull'<undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1'<undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1>$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull>undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1>undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1'>$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull'>undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1'>undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1=$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull=undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1=undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1'=$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull'=undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1'=undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1+$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull+undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1+undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1-$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull-undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1-undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1*$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull*undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1*undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1/$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull/undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1/undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1\$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull\undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1\undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if undefvar1#$zysqlnull
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
if $zysqlnull#undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar2
zwrite $test
$TEST=0
if undefvar1#undefvar2
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar1
zwrite $test
$TEST=0
for loopcnt=1:undefvar:-1 write loopcnt,!
ZSTATUS=ydb484g+...^ydb484,%YDB-E-LVUNDEF, Undefined local variable: undefvar
zwrite $test
$TEST=0
set result=$get($zysqlnull)  zwrite result
ZSTATUS=ydb484g+...^ydb484,%YDB-E-VAREXPECTED, Variable expected in this context
for $ZYSQLNULL="hello",$ZYSQLNULL,"test" write var,! ZSTATUS=ydb484g2+3^ydb484,%YDB-E-VAREXPECTED, Variable expected in this context
# Test of BOOLEXPRTOODEEP error
  -> Running [yottadb -run boolexprtoodeep^ydb484 > deepbool.m]
  -> Running [yottadb deepbool.m] : Expect to see a BOOLEXPRTOODEEP error
Source lines exceeding 1023 character width are not displayed
		At column 21046, line 4093, source module ##TEST_PATH##/deepbool.m
%YDB-E-BOOLEXPRTOODEEP, Boolean expression depth exceeds maximum supported limit of 2047
  -> Running [yottadb deepbool.m] : Expect to see the same BOOLEXPRTOODEEP error
%YDB-E-BOOLEXPRTOODEEP, Boolean expression depth exceeds maximum supported limit of 2047
		At M source location +4093^deepbool

YDB>
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
