
Testing $ZCONVERT conversion between DEC and HEX with valid input values
Checking DEC to HEX and HEX to DEC conversion of 18 digit random positive numbers for 15 seconds
Completed

Checking HEX to DEC and DEC to HEX conversion of 16 digit random values for 15 seconds
Completed


Testing $ZCONVERT conversion of DEC to HEX and HEX to DEC for 64 bit and 32 bit MAX values
Checking DEC to HEX and HEX to DEC conversion of 64 bit value
Checking DEC to HEX and HEX to DEC conversion of 32 bit value
Completed


Testing $ZCONVERT HEX to DEC conversion of MAX input value
Input: FFFFFFFFFFFFFFFF
18446744073709551615

Testing $ZCONVERT DEC to HEX conversion of MAX input value which is 20 digit MAX unsigned 64bit value
Input: 18446744073709551615
FFFFFFFFFFFFFFFF

Testing $ZCONVERT DEC to HEX conversion of MAX -ve 64bit input value
Input: -9223372036854775807
8000000000000001

Testing ability of $ZCONVERT HEX to DEC to handle case agnostic input with leading 0x
Input: 0xff
255
Input: 0Xff
255

Testing ability of $ZCONVERT DEC to HEX conversion to ignore leading zeros for computation
Input: 000000000018446744073709551610
FFFFFFFFFFFFFFFA

Testing ability of $ZCONVERT HEX to DEC conversion to ignore leading zeros for computation
Input: 0000000000FFFFFFFFFFFFFFFF
18446744073709551615

Testing ability of $ZCONVERT to handle case agnostic category input of DEC and HEX
Input: 15, Dec, hex
F
Input: F, HEX,dec
15

Testing mixed valued input on $ZCONVERT
Checking conversion for values such as 18446744073709551615vjj444 and FFFFFFFFFFFFFFFFhhh were only characters before an occurence of invalid character needs to be considered
Checking conversion of negative decimal value -9223372036854775807aaa expecting 8000000000000001
Completed


Testing $ZCONVERT for larger than acceptable HEX input
Input: 7FFFFFFFFFFFFFFFFFFFFFFFFFFFF
%YDB-E-INVVALUE, Invalid HEX value for $ZCO[nvert] supports only 16 hexadecimal digits  : 7FFFFFFFFFFFFFFFFFFFFFFFFFFFF 

Testing $ZCONVERT for larger than acceptable DEC input
Input: 184467440737095516155
%YDB-E-INVVALUE, Invalid DEC value for $ZCO[nvert] supports conversion of positive numbers till 20 decimal digits '18446744073709551615'  : 184467440737095516155 

Testing $ZCONVERT for larger than acceptable -ve DEC input
Input: -9223372036854775808
%YDB-E-INVVALUE, Invalid DEC value for $ZCO[nvert] supports conversion of negative numbers till 19 decimal digits '-9223372036854775807'  : 9223372036854775808 

Testing $ZCONVERT, %DH and %HD for signed input value
Checking $ZCONVERT for signed value input
Checking conversion utilities %DH and %HD for signed value input
Completed


Tesing larger than MAX $ZCONVERT supported value(>20 digits) conversion using %DH
Input: 184467440737095516155
Output: 9FFFFFFFFFFFFFFFB

Tesing larger than $ZCONVERT supported value conversion using %HD
Input: 7FFFFFFFFFFFFFFFFFFFFFFFFFFFF
Output: 41538374868278621028243970633760767

Testing performance of current %DH vs previous %DH
Comparing performance of current %DH implementation vs previous %DH implementation for 16 digit values
##TEST_AWKPerformance: current [0-9]* previous [0-9]*
Comparing performance of current %DH implementation vs previous %DH implementation for 20 digit values
##TEST_AWKPerformance: current [0-9]* previous [0-9]*
Completed


Testing Performance of current %HD vs previous %HD
Comparing performance of current %HD implementation vs previous %HD implementation with 14 digits
##TEST_AWKPerformance: current [0-9]* previous [0-9]*
Comparing performance of current %HD implementation vs previous %HD implementation 16 digits
##TEST_AWKPerformance: current [0-9]* previous [0-9]*
Completed


Testing correctness of current %DH vs previous %DH
Checking correctness of values produced by new utility function %DH by comparing with previous version
Completed


Testing correctness of current %HD vs previous %HD
Checking correctness of values produced by new utility function %HD by comparing with previous version
Completed


Testing property of previous and current %HD to reject input starting with -ve sign and return null
Checking if -ve signed input is rejected and null is returned
Completed


Testing if current %DH defaults the length of its output to eight digits like old implementation
Verifying default 8 byte output value length of %DH
Completed


Testing invalid input expecting error as output from %DH and %HD
%YDB-E-LVUNDEF, Undefined local variable: d
%YDB-E-LVUNDEF, Undefined local variable: h

Testing null input on %HD and %DH
Checking the behavior of utility functions %HD and %DH when null input is given
Completed

