Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
##SUSPEND_OUTPUT NON_REPLIC
Files Created in ##REMOTE_TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##REMOTE_TEST_PATH##
##ALLOW_OUTPUT NON_REPLIC
###################################################################

Test all the valid uses of ZTRrigger in a trigger specification
=========================================
23 triggers added
0 triggers deleted
6 triggers modified
29 trigger file entries did update database trigger content
0 trigger file entries did not update database trigger content
=========================================

###################################################################

Test all the invalid uses of ZTRrigger in a trigger specification
=========================================
3 trigger file entries have errors
0 trigger file entries have no errors
=========================================

###################################################################

Reload the valid uses of ZTRrigger in a trigger specification
=========================================
29 trigger file entries have no errors
=========================================

###################################################################
###################################################################
$gtm_exe/mumps -run match31subs^ztriggercmd
Match 31 subs
PASS:^zt(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)
        1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26	27	28	29	30	31
^fired("+1^firesub31#")=1
^fired("+1^lvntest#")=1
###################################################################
Match 31+ subs
150373282,match31subs+14^ztriggercmd,%YDB-E-MAXNRSUBSCRIPTS, Maximum number of subscripts exceeded
###################################################################
$gtm_exe/mumps -run match31plusgvn^ztriggercmd
Match GVNs longer than 31 chars
Expect three triggers to fire - superlong[1-3]
^fired("+1^superlong1#")=1
^fired("+1^superlong2#")=1
^fired("+1^superlong3#")=1
Again, expect three triggers to fire - superlong[1-3]
^fired("+1^superlong1#")=1
^fired("+1^superlong2#")=1
^fired("+1^superlong3#")=1
Expect three triggers to fire, with subs - superlong1[1-3]
^fired("+1^superlong11#")=1
^fired("+1^superlong21#")=1
^fired("+1^superlong31#")=1
Again, expect three triggers to fire, with subs - superlong1[1-3]
^fired("+1^superlong11#")=1
^fired("+1^superlong21#")=1
^fired("+1^superlong31#")=1
Expect one trigger to fire for the next two ztrigger cmds
^fired("+1^superlong33#")=1
^fired("+1^superlong22#")=1
###################################################################
$gtm_exe/mumps -run matchoflow^ztriggercmd
ZSTATUS=matchoflow+10^ztriggercmd,%YDB-E-GVSUBOFLOW, Maximum combined length of subscripts exceeded,%GTM-I-GVIS, 		Global variable: ^zt("oflowkey","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
Over flow the subscripts in the ztrigger command
150372986,matchoflow+15^ztriggercmd,%YDB-E-GVSUBOFLOW, Maximum combined length of subscripts exceeded,%GTM-I-GVIS, 		Global variable: ^zt("oflowkey","baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
###################################################################
Test non-existent triggers
###################################################################
Test non-existent triggers with existing nodes
###################################################################
Test existent triggers with existing nodes
The trigger tworkexist# is doing ZTR
	$Reference:^tr("exist")	$Test:1
	$gtm_trigger_etrap:use $p set $ecode="" write $zs,!
	$ZTLEvel:1	$ZLevel:5	$TLevel:1
	twork+7^twork	+1^tworkexist#	exec+16^ztriggercmd	ztriggercmd+4^ztriggercmd
###################################################################
Make sure that a trigger does not respond to K/ZK, just ZTR
The trigger twork# is doing ZTR
	$Reference:^zt("exec")	$Test:1
	$gtm_trigger_etrap:use $p set $ecode="" write $zs,!
	$ZTLEvel:1	$ZLevel:5	$TLevel:1
	twork+7^twork	+1^twork#	exec+22^ztriggercmd	ztriggercmd+4^ztriggercmd
###################################################################
Inspect ISVs while you're at it
$ZSTATUS=ztriggerop+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztriggerop+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztvalue+1^inspectISV,%YDB-E-SETINSETTRIGONLY, ISV $ZTVALUE can only be modified in a 'SET' type trigger
$ZSTATUS=ztvalue+2^inspectISV,%YDB-E-SETINSETTRIGONLY, ISV $ZTVALUE can only be modified in a 'SET' type trigger
$ZSTATUS=ztoldval+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztoldval+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdata+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdata+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztupdate+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztupdate+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdelim+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdelim+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztlevel+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztlevel+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztcode+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztcode+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztname+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztname+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
###################################################################
Test local variables inside the trigger
PASS:^fired("+1^shortlvntest#")
        one	two	three	four	five	six
PASS:^zt("one","two","three","four","five","six",7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)
        one	two	three	four	five	six	7	8	9	10	11	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26	27	28	29	30	31
###################################################################
Nest ztrigger within a trigger
^fired("+1^ztriggerloop#")=1
^fired("+1^ztriggerloop#")=127
repeat, but alternate between ztrigger and updating the GVN
^fired("+1^ztriggerloop2#")=2
^fired("+1^ztriggerloop2#")=127
###################################################################
$gtm_exe/mumps -run maxtrignest^ztriggercmd
Test for MAXTRIGNEST with ztrigger
150381650,+1^ztriggerloop#,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
^fired("+1^ztriggerloop#")=127
1_ZTR_+1^ztriggerloop#_1_^fired("+1^ztriggerloop#")__0
127_ZTR_+1^ztriggerloop#_127_^fired("+1^ztriggerloop#")__0

Repeat, but alternate between ztrigger and updating the GVN
150381650,ztriggerloop+3^ztriggercmd,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
^fired("+1^ztriggerloop2#")=127


###################################################################
$gtm_exe/mumps -run maxtrignest2^ztriggercmd
Test for MAXTRIGNEST with ztrigger
150381650,+1^ztriggerloop#,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
^fired("+1^ztriggerloop#")=127
1_ZTR_+1^ztriggerloop#_1_^fired("+1^ztriggerloop#")__0
127_ZTR_+1^ztriggerloop#_127_^fired("+1^ztriggerloop#")__0

Repeat, but alternate between ztrigger and updating the GVN
150381650,ztriggerloop+3^ztriggercmd,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
1_ZTR_+1^ztriggerloop2#_1_^fired("+1^ztriggerloop2#")__0
127_ZTR_+1^ztriggerloop2#_127_^fired("+1^ztriggerloop2#")__0
^fired("+1^ztriggerloop2#")=127
###################################################################
##SUSPEND_OUTPUT NON_REPLIC
Shutting down Passive Source Server and Receiver Server in ##REMOTE_TEST_PATH##
Shutting down Primary Source Server Server in ##TEST_PATH##
DATABASE EXTRACT PASSED
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
##ALLOW_OUTPUT NON_REPLIC
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
##SUSPEND_OUTPUT NON_REPLIC
##TEST_AWK##TEST_HOST_SHORT##:##REMOTE_TEST_PATH##/RCVR[_0-9]*.log.updproc
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztriggerop+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztriggerop+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztvalue+1^inspectISV,%YDB-E-SETINSETTRIGONLY, ISV $ZTVALUE can only be modified in a 'SET' type trigger
$ZSTATUS=ztvalue+2^inspectISV,%YDB-E-SETINSETTRIGONLY, ISV $ZTVALUE can only be modified in a 'SET' type trigger
$ZSTATUS=ztoldval+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztoldval+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdata+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdata+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztupdate+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztupdate+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdelim+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztdelim+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztlevel+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztlevel+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztcode+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztcode+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztname+1^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
$ZSTATUS=ztname+2^inspectISV,%YDB-E-SVNOSET, Cannot SET this special variable
150381650,+1^ztriggerloop#,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
150381650,ztriggerloop+3^ztriggercmd,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
150381650,+1^ztriggerloop#,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
150381650,ztriggerloop+3^ztriggercmd,%YDB-E-MAXTRIGNEST, Maximum trigger nesting level (127) exceeded
