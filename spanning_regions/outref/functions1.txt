%GDE-I-GDUSEDEFS, Using defaults for Global Directory 
	##TEST_PATH##/mumps.gld
%GDE-I-EXECOM, Executing command file ##TEST_PATH##/gdefunc1.cmd
%GDE-I-VERIFY, Verification OK

%GDE-I-GDCREATE, Creating Global Directory file 
	##TEST_PATH##/mumps.gld
%YDB-I-DBFILECREATED, Database file ##TEST_PATH##/mumps.dat created
%YDB-I-DBFILECREATED, Database file ##TEST_PATH##/REG1.dat created
%YDB-I-DBFILECREATED, Database file ##TEST_PATH##/REG2.dat created
%YDB-I-DBFILECREATED, Database file ##TEST_PATH##/REG3.dat created
#### Make sure triggers work with spanning regions ####
File func1.trg, Line 1: Added SET trigger on ^z named z#1
File func1.trg, Line 2: Added SET trigger on ^y named y#1
File func1.trg, Line 3: Added SET trigger on ^x (region DEFAULT) named x#1
File func1.trg, Line 3: Added SET trigger on ^x (region REG1) named x#1
File func1.trg, Line 3: Added SET trigger on ^x (region REG2) named x#1
File func1.trg, Line 3: Added SET trigger on ^x (region REG3) named x#1
File func1.trg, Line 4: Added SET trigger on ^a (region DEFAULT) named a#1
File func1.trg, Line 4: Added SET trigger on ^a (region REG1) named a#1
File func1.trg, Line 4: Added SET trigger on ^a (region REG2) named a#1
File func1.trg, Line 4: Added SET trigger on ^a (region REG3) named a#1
File func1.trg, Line 5: Added SET trigger on ^b named b#1
File func1.trg, Line 6: Added SET trigger on ^c named c#1
=========================================
12 triggers added
0 triggers deleted
0 triggers modified
6 trigger file entries did update database trigger content
0 trigger file entries did not update database trigger content
=========================================
Output File: 
;trigger name: a#1 (region DEFAULT)  cycle: 1
+^a -commands=S -xecute="do ^nothing"
;trigger name: b#1 (region DEFAULT)  cycle: 1
+^b -commands=S -xecute="do ^nothing"
;trigger name: c#1 (region DEFAULT)  cycle: 1
+^c -commands=S -xecute="do ^nothing"
;trigger name: x#1 (region DEFAULT)  cycle: 1
+^x -commands=S -xecute="do ^nothing"
;trigger name: y#1 (region DEFAULT)  cycle: 1
+^y -commands=S -xecute="do ^nothing"
;trigger name: z#1 (region DEFAULT)  cycle: 1
+^z -commands=S -xecute="do ^nothing"
;trigger name: a#1 (region REG1)  cycle: 1
+^a -commands=S -xecute="do ^nothing"
;trigger name: x#1 (region REG1)  cycle: 1
+^x -commands=S -xecute="do ^nothing"
;trigger name: a#1 (region REG2)  cycle: 1
+^a -commands=S -xecute="do ^nothing"
;trigger name: x#1 (region REG2)  cycle: 1
+^x -commands=S -xecute="do ^nothing"
;trigger name: a#1 (region REG3)  cycle: 1
+^a -commands=S -xecute="do ^nothing"
;trigger name: x#1 (region REG3)  cycle: 1
+^x -commands=S -xecute="do ^nothing"
File func2.trg, Line 1: All existing triggers (count = 12) deleted
=========================================
0 triggers added
12 triggers deleted
0 triggers modified
1 trigger file entries did update database trigger content
0 trigger file entries did not update database trigger content
=========================================
Output File: 
#### Test $data() with spanning regions ####
Test  0 : $data(^x))     = 1
Test  1 : $data(^x))     = 10
Test  2 : $data(^x(1))   = 1
Test  3 : $data(^x))     = 10
Test  4 : $data(^x(1))   = 10
Test  5 : $data(^x(1,2)) = 1
Test  6 : $data(^x))     = 10
Test  7 : $data(^x(1))   = 10
Test  8 : $data(^x(1,3)) = 1
Test  9 : $data(^x))     = 10
Test 10 : $data(^x(1))   = 0
Test 11 : $data(^x(1,3)) = 0
Test 12 : $data(^x(2))   = 1
Test 13 : $data(^x(2,3)) = 0
Test 14 : $data(^x))     = 10
Test 15 : $data(^x(1))   = 0
Test 16 : $data(^x(1,3)) = 0
Test 17 : $data(^x(3))   = 1
Test 18 : $data(^x(3,3)) = 0
Test 19 : $data(^x)      = 10
Test 20 : $data(^x(1))   = 0
Test 21 : $data(^x(7))   = 1
#### Test $order() with spanning regions ####
# $order(^a) starting with null subscript
$order(^a()) = 1
$order(^a(1)) = 2
$order(^a(2)) = 3
$order(^a(3)) = 4
$order(^a(4)) = 5
$order(^a(5)) = 6
$order(^a(6)) = 7
$order(^a(7)) = 8
$order(^a(8)) = 9
$order(^a(9)) = 10
$order(^a(10)) = 11
$order(^a(11)) = 12
$order(^a(12)) = 13
$order(^a(13)) = 14
$order(^a(14)) = 15
$order(^a(15)) = 16
$order(^a(16)) = 17
$order(^a(17)) = 18
$order(^a(18)) = 19
$order(^a(19)) = 20
$order(^a(20)) = 21
$order(^a(21)) = 22
$order(^a(22)) = 23
$order(^a(23)) = 24
$order(^a(24)) = 25
$order(^a(25)) = 26
$order(^a(26)) = 27
$order(^a(27)) = 28
$order(^a(28)) = 29
$order(^a(29)) = 30
$order(^a(30)) = 31
$order(^a(31)) = 32
$order(^a(32)) = 33
$order(^a(33)) = 34
$order(^a(34)) = 35
$order(^a(35)) = 36
$order(^a(36)) = 37
$order(^a(37)) = 38
$order(^a(38)) = 39
$order(^a(39)) = 40
$order(^a(40)) = 41
$order(^a(41)) = 42
$order(^a(42)) = 43
$order(^a(43)) = 44
$order(^a(44)) = 45
$order(^a(45)) = 46
$order(^a(46)) = 47
$order(^a(47)) = 48
$order(^a(48)) = 49
$order(^a(49)) = 50
$order(^a(50)) = 51
$order(^a(51)) = 52
$order(^a(52)) = 53
$order(^a(53)) = 54
$order(^a(54)) = 55
$order(^a(55)) = 56
$order(^a(56)) = 57
$order(^a(57)) = 58
$order(^a(58)) = 59
$order(^a(59)) = 60
$order(^a(60)) = 61
$order(^a(61)) = 62
$order(^a(62)) = 63
$order(^a(63)) = 64
$order(^a(64)) = 65
$order(^a(65)) = a
$order(^a(a)) = 
$order(^a()) = 1
$order(^a(1)) = 2
$order(^a(2)) = 3
# $order(^a) starting with highest subscript
$order(^a(65)) = a
$order(^a(a)) = 
$order(^a()) = 1
$order(^a(1)) = 2
$order(^a(2)) = 3
$order(^a(3)) = 4
$order(^a(4)) = 5
$order(^a(5)) = 6
$order(^a(6)) = 7
$order(^a(7)) = 8
$order(^a(8)) = 9
$order(^a(9)) = 10
$order(^a(10)) = 11
$order(^a(11)) = 12
$order(^a(12)) = 13
$order(^a(13)) = 14
$order(^a(14)) = 15
$order(^a(15)) = 16
$order(^a(16)) = 17
$order(^a(17)) = 18
$order(^a(18)) = 19
$order(^a(19)) = 20
$order(^a(20)) = 21
$order(^a(21)) = 22
$order(^a(22)) = 23
$order(^a(23)) = 24
$order(^a(24)) = 25
$order(^a(25)) = 26
$order(^a(26)) = 27
$order(^a(27)) = 28
$order(^a(28)) = 29
$order(^a(29)) = 30
$order(^a(30)) = 31
$order(^a(31)) = 32
$order(^a(32)) = 33
$order(^a(33)) = 34
$order(^a(34)) = 35
$order(^a(35)) = 36
$order(^a(36)) = 37
$order(^a(37)) = 38
$order(^a(38)) = 39
$order(^a(39)) = 40
$order(^a(40)) = 41
$order(^a(41)) = 42
$order(^a(42)) = 43
$order(^a(43)) = 44
$order(^a(44)) = 45
$order(^a(45)) = 46
$order(^a(46)) = 47
$order(^a(47)) = 48
$order(^a(48)) = 49
$order(^a(49)) = 50
$order(^a(50)) = 51
$order(^a(51)) = 52
$order(^a(52)) = 53
$order(^a(53)) = 54
$order(^a(54)) = 55
$order(^a(55)) = 56
$order(^a(56)) = 57
$order(^a(57)) = 58
$order(^a(58)) = 59
$order(^a(59)) = 60
$order(^a(60)) = 61
$order(^a(61)) = 62
$order(^a(62)) = 63
$order(^a(63)) = 64
$order(^a(64)) = 65
$order(^a(65)) = a
$order(^a(a)) = 
$order(^a()) = 1
# $order((^a),-1) starting with null subscript
$order(^a(),-1) = a
$order(^a(a),-1) = 65
$order(^a(65),-1) = 64
$order(^a(64),-1) = 63
$order(^a(63),-1) = 62
$order(^a(62),-1) = 61
$order(^a(61),-1) = 60
$order(^a(60),-1) = 59
$order(^a(59),-1) = 58
$order(^a(58),-1) = 57
$order(^a(57),-1) = 56
$order(^a(56),-1) = 55
$order(^a(55),-1) = 54
$order(^a(54),-1) = 53
$order(^a(53),-1) = 52
$order(^a(52),-1) = 51
$order(^a(51),-1) = 50
$order(^a(50),-1) = 49
$order(^a(49),-1) = 48
$order(^a(48),-1) = 47
$order(^a(47),-1) = 46
$order(^a(46),-1) = 45
$order(^a(45),-1) = 44
$order(^a(44),-1) = 43
$order(^a(43),-1) = 42
$order(^a(42),-1) = 41
$order(^a(41),-1) = 40
$order(^a(40),-1) = 39
$order(^a(39),-1) = 38
$order(^a(38),-1) = 37
$order(^a(37),-1) = 36
$order(^a(36),-1) = 35
$order(^a(35),-1) = 34
$order(^a(34),-1) = 33
$order(^a(33),-1) = 32
$order(^a(32),-1) = 31
$order(^a(31),-1) = 30
$order(^a(30),-1) = 29
$order(^a(29),-1) = 28
$order(^a(28),-1) = 27
$order(^a(27),-1) = 26
$order(^a(26),-1) = 25
$order(^a(25),-1) = 24
$order(^a(24),-1) = 23
$order(^a(23),-1) = 22
$order(^a(22),-1) = 21
$order(^a(21),-1) = 20
$order(^a(20),-1) = 19
$order(^a(19),-1) = 18
$order(^a(18),-1) = 17
$order(^a(17),-1) = 16
$order(^a(16),-1) = 15
$order(^a(15),-1) = 14
$order(^a(14),-1) = 13
$order(^a(13),-1) = 12
$order(^a(12),-1) = 11
$order(^a(11),-1) = 10
$order(^a(10),-1) = 9
$order(^a(9),-1) = 8
$order(^a(8),-1) = 7
$order(^a(7),-1) = 6
$order(^a(6),-1) = 5
$order(^a(5),-1) = 4
$order(^a(4),-1) = 3
$order(^a(3),-1) = 2
$order(^a(2),-1) = 1
$order(^a(1),-1) = 
$order(^a(),-1) = a
$order(^a(a),-1) = 65
$order(^a(65),-1) = 64
# $zprevious(^a) starting with null subscript
$zprevious(^a()) = a
$zprevious(^a(a)) = 65
$zprevious(^a(65)) = 64
$zprevious(^a(64)) = 63
$zprevious(^a(63)) = 62
$zprevious(^a(62)) = 61
$zprevious(^a(61)) = 60
$zprevious(^a(60)) = 59
$zprevious(^a(59)) = 58
$zprevious(^a(58)) = 57
$zprevious(^a(57)) = 56
$zprevious(^a(56)) = 55
$zprevious(^a(55)) = 54
$zprevious(^a(54)) = 53
$zprevious(^a(53)) = 52
$zprevious(^a(52)) = 51
$zprevious(^a(51)) = 50
$zprevious(^a(50)) = 49
$zprevious(^a(49)) = 48
$zprevious(^a(48)) = 47
$zprevious(^a(47)) = 46
$zprevious(^a(46)) = 45
$zprevious(^a(45)) = 44
$zprevious(^a(44)) = 43
$zprevious(^a(43)) = 42
$zprevious(^a(42)) = 41
$zprevious(^a(41)) = 40
$zprevious(^a(40)) = 39
$zprevious(^a(39)) = 38
$zprevious(^a(38)) = 37
$zprevious(^a(37)) = 36
$zprevious(^a(36)) = 35
$zprevious(^a(35)) = 34
$zprevious(^a(34)) = 33
$zprevious(^a(33)) = 32
$zprevious(^a(32)) = 31
$zprevious(^a(31)) = 30
$zprevious(^a(30)) = 29
$zprevious(^a(29)) = 28
$zprevious(^a(28)) = 27
$zprevious(^a(27)) = 26
$zprevious(^a(26)) = 25
$zprevious(^a(25)) = 24
$zprevious(^a(24)) = 23
$zprevious(^a(23)) = 22
$zprevious(^a(22)) = 21
$zprevious(^a(21)) = 20
$zprevious(^a(20)) = 19
$zprevious(^a(19)) = 18
$zprevious(^a(18)) = 17
$zprevious(^a(17)) = 16
$zprevious(^a(16)) = 15
$zprevious(^a(15)) = 14
$zprevious(^a(14)) = 13
$zprevious(^a(13)) = 12
$zprevious(^a(12)) = 11
$zprevious(^a(11)) = 10
$zprevious(^a(10)) = 9
$zprevious(^a(9)) = 8
$zprevious(^a(8)) = 7
$zprevious(^a(7)) = 6
$zprevious(^a(6)) = 5
$zprevious(^a(5)) = 4
$zprevious(^a(4)) = 3
$zprevious(^a(3)) = 2
$zprevious(^a(2)) = 1
$zprevious(^a(1)) = 
$zprevious(^a()) = a
$zprevious(^a(a)) = 65
$zprevious(^a(65)) = 64
# $order(^a) starting with null subscript
$order(^x(1,)) = 1
$order(^x(1,1)) = 2
$order(^x(1,2)) = 3
$order(^x(1,3)) = 
$order(^x(1,)) = 1
$order(^x(1,1)) = 2
$order(^x(1,2)) = 3
$order(^x(1,3)) = 
$order(^x(1,)) = 1
$order(^x(1,1)) = 2
# $order((^x),-1) starting with null subscript
$order(^x(1,),-1) = 3
$order(^x(1,3),-1) = 2
$order(^x(1,2),-1) = 1
$order(^x(1,1),-1) = 
$order(^x(1,),-1) = 3
$order(^x(1,3),-1) = 2
$order(^x(1,2),-1) = 1
$order(^x(1,1),-1) = 
$order(^x(1,),-1) = 3
$order(^x(1,3),-1) = 2
# $zprevious(^x) starting with null subscript
$zprevious(^x(1,)) = 3
$zprevious(^x(1,3)) = 2
$zprevious(^x(1,2)) = 1
$zprevious(^x(1,1)) = 
$zprevious(^x(1,)) = 3
$zprevious(^x(1,3)) = 2
$zprevious(^x(1,2)) = 1
$zprevious(^x(1,1)) = 
$zprevious(^x(1,)) = 3
$zprevious(^x(1,3)) = 2
# $zprevious(^x) starting with highest set subscript
$zprevious(^x(1,4)) = 3
$zprevious(^x(1,3)) = 2
$zprevious(^x(1,2)) = 1
$zprevious(^x(1,1)) = 
$zprevious(^x(1,"")) = 3
$zprevious(^x(1,3)) = 2
$zprevious(^x(1,2)) = 1
$zprevious(^x(1,1)) = 
$zprevious(^x(1,"")) = 3
$zprevious(^x(1,3)) = 2
$zprevious(^x(1,4)) = 3
$zprevious(^x(1,1)) = 
$zprevious(^x(1,"")) = 3
$zprevious(^x(1,3)) = 2
$zprevious(^x(1,2)) = 1
#### test $query with spanning regions ####
^a(1)=1
^a(25)=25
^a(31)=31
^a(40)=40
^a(40,5)=40,5
^a(40,5,7)=40,5,7
^a(40,5,8)=40,5,8
^a(40,5,8,9)=40,5,8,9
^a(40,6)=40,6
^a(41)=41
^a("a")=a
#### test zwrite with spanning regions ####
^a(1)=1
^a(25)=25
^a(31)=31
^a(40)=40
^a(40,5)="40,5"
^a(40,5,7)="40,5,7"
^a(40,5,8)="40,5,8"
^a(40,5,8,9)="40,5,8,9"
^a(40,6)="40,6"
^a(41)=41
^a("a")="a"
#### using a .gld with a different global mapping where one subscript is accessible and the other is not ####
#### set $zgbldir clears naked reference if gbldir gets switched and does not clear if not switched ####
%GDE-I-GDUSEDEFS, Using defaults for Global Directory 
	##TEST_PATH##/alt.gld
%GDE-I-VERIFY, Verification OK

%GDE-I-GDCREATE, Creating Global Directory file 
	##TEST_PATH##/alt.gld

GTM>
1
GTM>
0
GTM>

GTM>
a
GTM>

GTM>
1
GTM>

GTM>
%YDB-E-GVNAKED, Illegal naked global reference

GTM>
#### GTM-7853 : MUPIP INTEG -SUBSCRIPTS terminates with SIG-11 if null-subscripts are specified
Data                1               0           0.659             1
Data                1               0           1.293             1
Data                1               1           1.464             1
Data                1               2           1.660             1
#### Test DSE find -key scenarios with spanning regions ####
#### Create a second global directory and set ^a(1) in mumps.dat ####

File  	##TEST_PATH##/mumps.dat
Region	DEFAULT

DSE> 
Key not found, no root present.

DSE> 
Key not found, would be in block  7.
    Directory path
    Path--blk:off
	1:10,	2:2F,
    Global tree path
    Path--blk:off
	6:10,	7:0,
Key ^x(1) maps to Region REG1; Run "find -region=REG1" before looking for this node
DSE> 
Key not found, would be in block  7.
    Directory path
    Path--blk:off
	1:10,	2:2F,
    Global tree path
    Path--blk:off
	6:10,	7:0,
DSE> 
Key not found, would be in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:21,
DSE> 
Key not found, would be in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:21,
DSE> 
Key not found, would be in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:21,
Key ^a(40,5,6) maps to Region REG3; Run "find -region=REG3" before looking for this node
DSE> 
File  	##TEST_PATH##/REG3.dat
Region	REG3

DSE> 
Key not found, would be in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:1C,
DSE> 
Key found in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:1C,
DSE> 
Key not found, no root present.
Key ^b(1) maps to Region DEFAULT; Run "find -region=DEFAULT" before looking for this node

DSE> 
Key not found, no root present.

DSE> 
Key not found, would be in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:1C,
Key ^a(40,5) maps to Region REG2; Run "find -region=REG2" before looking for this node
DSE> 
File  	##TEST_PATH##/REG2.dat
Region	REG2

DSE> 
Key found in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:10,
DSE> 
Key not found, would be in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:21,
Key ^a(40,5,7) maps to Region REG3; Run "find -region=REG3" before looking for this node
DSE> 
File  	##TEST_PATH##/mumps.dat
Region	DEFAULT

DSE> 
Key found in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:10,
Key ^a(1) maps to Region REG1; Run "find -region=REG1" before looking for this node
DSE> 
Key found in block  9.
    Directory path
    Path--blk:off
	1:10,	2:20,
    Global tree path
    Path--blk:off
	8:10,	9:10,
DSE> 
