
# Now run lvnsubsprev*.c (all tests driven by a C routine)

 --> Running lvnsubsprev1_simple.c <---
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
### Test simple ydb_subscript_previous_s() of Local Variables ###
Initialize call-in environment
Set a local variable (and a prev local variable) with 0 subscripts
Set local variable node (and a prev subscript) with 1 subscript
Set a local variable node (and a prev subscript) with 2 subscripts
Get prev local variable of local variable with 0 subscripts
ydb_subscript_previous_s() returned [aprevlv]
Get prev subscript of local variable with 1 subscript
ydb_subscript_previous_s() returned [41]
Get prev subscript of local variable with 2 subscripts
ydb_subscript_previous_s() returned [answar]
Demonstrate our progress by executing a ZWRITE in a call-in
aprevlv="A question"
baselv="A question"
baselv(41)="One less than 43"
baselv(42)="One less than 43"
baselv(42,"answar")="Life, the universe, and everything"
baselv(42,"answer")="Life, the universe, and everything"
zwrarg=""
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.

 --> Running lvnsubsprev2_31subs.c <---
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
### Test 31-level (max-deep) subscripts can be got using ydb_subscript_previous_s() of Local Variables ###
Set a local variable (and prev subscript) with 0 subscripts
ydb_subscript_previous_s() : [level 0] returned []
Set a local variable (and prev subscript) with 1 subscripts
ydb_subscript_previous_s() : [level 1] returned [0]
Set a local variable (and prev subscript) with 2 subscripts
ydb_subscript_previous_s() : [level 2] returned [1]
Set a local variable (and prev subscript) with 3 subscripts
ydb_subscript_previous_s() : [level 3] returned [2]
Set a local variable (and prev subscript) with 4 subscripts
ydb_subscript_previous_s() : [level 4] returned [3]
Set a local variable (and prev subscript) with 5 subscripts
ydb_subscript_previous_s() : [level 5] returned [4]
Set a local variable (and prev subscript) with 6 subscripts
ydb_subscript_previous_s() : [level 6] returned [5]
Set a local variable (and prev subscript) with 7 subscripts
ydb_subscript_previous_s() : [level 7] returned [6]
Set a local variable (and prev subscript) with 8 subscripts
ydb_subscript_previous_s() : [level 8] returned [7]
Set a local variable (and prev subscript) with 9 subscripts
ydb_subscript_previous_s() : [level 9] returned [8]
Set a local variable (and prev subscript) with 10 subscripts
ydb_subscript_previous_s() : [level 10] returned [9]
Set a local variable (and prev subscript) with 11 subscripts
ydb_subscript_previous_s() : [level 11] returned [10]
Set a local variable (and prev subscript) with 12 subscripts
ydb_subscript_previous_s() : [level 12] returned [11]
Set a local variable (and prev subscript) with 13 subscripts
ydb_subscript_previous_s() : [level 13] returned [12]
Set a local variable (and prev subscript) with 14 subscripts
ydb_subscript_previous_s() : [level 14] returned [13]
Set a local variable (and prev subscript) with 15 subscripts
ydb_subscript_previous_s() : [level 15] returned [14]
Set a local variable (and prev subscript) with 16 subscripts
ydb_subscript_previous_s() : [level 16] returned [15]
Set a local variable (and prev subscript) with 17 subscripts
ydb_subscript_previous_s() : [level 17] returned [16]
Set a local variable (and prev subscript) with 18 subscripts
ydb_subscript_previous_s() : [level 18] returned [17]
Set a local variable (and prev subscript) with 19 subscripts
ydb_subscript_previous_s() : [level 19] returned [18]
Set a local variable (and prev subscript) with 20 subscripts
ydb_subscript_previous_s() : [level 20] returned [19]
Set a local variable (and prev subscript) with 21 subscripts
ydb_subscript_previous_s() : [level 21] returned [20]
Set a local variable (and prev subscript) with 22 subscripts
ydb_subscript_previous_s() : [level 22] returned [21]
Set a local variable (and prev subscript) with 23 subscripts
ydb_subscript_previous_s() : [level 23] returned [22]
Set a local variable (and prev subscript) with 24 subscripts
ydb_subscript_previous_s() : [level 24] returned [23]
Set a local variable (and prev subscript) with 25 subscripts
ydb_subscript_previous_s() : [level 25] returned [24]
Set a local variable (and prev subscript) with 26 subscripts
ydb_subscript_previous_s() : [level 26] returned [25]
Set a local variable (and prev subscript) with 27 subscripts
ydb_subscript_previous_s() : [level 27] returned [26]
Set a local variable (and prev subscript) with 28 subscripts
ydb_subscript_previous_s() : [level 28] returned [27]
Set a local variable (and prev subscript) with 29 subscripts
ydb_subscript_previous_s() : [level 29] returned [28]
Set a local variable (and prev subscript) with 30 subscripts
ydb_subscript_previous_s() : [level 30] returned [29]
Set a local variable (and prev subscript) with 31 subscripts
ydb_subscript_previous_s() : [level 31] returned [30]
Demonstrate our progress by executing a ZWRITE in a call-in
aprevlv=0
baselv=""
baselv(0)=1
baselv(0,1)=""
baselv(0,1,2)=3
baselv(0,1,2,3)=""
baselv(0,1,2,3,4)=5
baselv(0,1,2,3,4,5)=""
baselv(0,1,2,3,4,5,6)=7
baselv(0,1,2,3,4,5,6,7)=""
baselv(0,1,2,3,4,5,6,7,8)=9
baselv(0,1,2,3,4,5,6,7,8,9)=""
baselv(0,1,2,3,4,5,6,7,8,9,10)=11
baselv(0,1,2,3,4,5,6,7,8,9,10,11)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12)=13
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14)=15
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)=17
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)=19
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)=21
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)=23
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24)=25
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)=27
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28)=29
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29)=""
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)=31
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31)=31
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30)=30
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29)=29
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28)=28
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27)=27
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26)=26
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25)=25
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24)=24
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23)=23
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22)=22
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21)=21
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20)=20
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19)=19
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18)=18
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17)=17
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16)=16
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,13,15)=15
baselv(0,1,2,3,4,5,6,7,8,9,10,11,12,14)=14
baselv(0,1,2,3,4,5,6,7,8,9,10,11,13)=13
baselv(0,1,2,3,4,5,6,7,8,9,10,12)=12
baselv(0,1,2,3,4,5,6,7,8,9,11)=11
baselv(0,1,2,3,4,5,6,7,8,10)=10
baselv(0,1,2,3,4,5,6,7,9)=9
baselv(0,1,2,3,4,5,6,8)=8
baselv(0,1,2,3,4,5,7)=7
baselv(0,1,2,3,4,6)=6
baselv(0,1,2,3,5)=5
baselv(0,1,2,4)=4
baselv(0,1,3)=3
baselv(0,2)=2
baselv(1)=1
zwrarg=""
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.

 --> Running lvnsubsprev3_errors.c <---
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
### Test error scenarios in ydb_subscript_previous_s() of Local Variables ###

# Test of INVVARNAME error
Attempting ydb_subscript_previous_s() of bad basevar (% in middle of name) B%dbasevarInvChar
ydb_subscript_previous_s() [57]: 151027762,(SimpleAPI),%YDB-E-INVVARNAME, Invalid local/global/ISV variable name supplied to API call
Attempting ydb_subscript_previous_s() of bad basevar (> 31 characters) Verylongbasevarthatexceedsmaxlength
ydb_subscript_previous_s() [66]: 151027842,(SimpleAPI),%YDB-E-VARNAME2LONG, Variable name length exceeds maximum allowed (31)
Attempting ydb_subscript_previous_s() of bad basevar (first letter in name is digit) 1namestartswithdigit
ydb_subscript_previous_s() [75]: 151027762,(SimpleAPI),%YDB-E-INVVARNAME, Invalid local/global/ISV variable name supplied to API call
# Test of MAXNRSUBSCRIPTS error
Attempting ydb_subscript_previous_s() of basevar with 32 subscripts
ydb_subscript_previous_s() [87]: 150373282,(SimpleAPI),%GTM-E-MAXNRSUBSCRIPTS, Maximum number of subscripts exceeded
# Test of MINNRSUBSCRIPTS error
Attempting ydb_subscript_previous_s() of basevar with -1 subscripts
ydb_subscript_previous_s() [97]: 151027786,(SimpleAPI),%YDB-E-MINNRSUBSCRIPTS, Number of subscripts cannot be a negative number
# Test of PARAMINVALID error in ret_value parameter
Attempting ydb_subscript_previous_s() with ret_value->buf_addr=NULL when return value is a NULL string : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with NULL ret_value when return value is a NULL string : Expect PARAMINVALID error
ydb_subscript_previous_s() [123]: 151027770,(SimpleAPI),%YDB-E-PARAMINVALID, NULL ret_value parameter specified in ydb_subscript_previous_s() call
Attempting ydb_subscript_previous_s() with NULL ret_value when return value is a non-NULL string : Expect PARAMINVALID error
ydb_subscript_previous_s() [138]: 151027770,(SimpleAPI),%YDB-E-PARAMINVALID, NULL ret_value parameter specified in ydb_subscript_previous_s() call
Attempting ydb_subscript_previous_s() with ret_value->buf_addr=NULL when return value is a non-NULL string : Expect PARAMINVALID error
ydb_subscript_previous_s() [148]: 151027770,(SimpleAPI),%YDB-E-PARAMINVALID, NULL ret_value->buf_addr parameter specified in ydb_subscript_previous_s() call
# Test of INVSTRLEN error
Attempting ydb_subscript_previous_s() with ret_value->len_alloc=0 : Expect INVSTRLEN error
ydb_subscript_previous_s() [160]: 150375522,(SimpleAPI),%GTM-E-INVSTRLEN, Invalid string length 0: max 0 : ret_value->len_used = 6 after call
Attempting ydb_subscript_previous_s() with ret_value->len_alloc set to value returned in ret_value->len_used after INVSTRLEN error. Expect NO error
ydb_subscript_previous_s() returned [baselv]
# Test of SUBSARRAYNULL error
Attempting ydb_subscript_previous_s() of basevar with NULL subsarray parameter. Expect SUBSARRAYNULL error
ydb_subscript_previous_s() [182]: 151027794,(SimpleAPI),%YDB-E-SUBSARRAYNULL, Non-zero number of subscripts [1] specified but subscript array parameter is NULL in ydb_subscript_previous_s() call
# Test of PARAMINVALID error in subsarray parameter
Attempting ydb_subscript_previous_s() with subsarray[0].len_alloc=0 and subsarray[0].len_used=2 : Expect PARAMINVALID error
ydb_subscript_previous_s() [197]: 151027770,(SimpleAPI),%YDB-E-PARAMINVALID, Invalid subsarray (index 0) parameter specified in ydb_subscript_previous_s() call
Attempting ydb_subscript_previous_s() with subsarray[0].len_alloc=0 and subsarray[0].len_used=0 : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with subsarray[0].len_alloc=1 and subsarray[0].len_used=0 : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with subsarray[0].len_alloc=1 and subsarray[0].len_used=1 : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with subscr32[0].buf_addr=NULL and subscr32[0].len_used=1 : Expect PARAMINVALID error
ydb_subscript_previous_s() [258]: 151027770,(SimpleAPI),%YDB-E-PARAMINVALID, Invalid subsarray (index 0) parameter specified in ydb_subscript_previous_s() call
Attempting ydb_subscript_previous_s() with subscr32[0].buf_addr=NULL and subscr32[0].len_used=0 : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with subsarray[3].len_alloc=0 and subsarray[3].len_used=2 : Expect PARAMINVALID error
ydb_subscript_previous_s() [197]: 151027770,(SimpleAPI),%YDB-E-PARAMINVALID, Invalid subsarray (index 3) parameter specified in ydb_subscript_previous_s() call
Attempting ydb_subscript_previous_s() with subsarray[3].len_alloc=0 and subsarray[3].len_used=0 : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with subsarray[3].len_alloc=1 and subsarray[3].len_used=0 : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with subsarray[3].len_alloc=1 and subsarray[3].len_used=1 : Expect NO PARAMINVALID error
Attempting ydb_subscript_previous_s() with subscr32[3].buf_addr=NULL and subscr32[3].len_used=1 : Expect PARAMINVALID error
ydb_subscript_previous_s() [258]: 151027770,(SimpleAPI),%YDB-E-PARAMINVALID, Invalid subsarray (index 3) parameter specified in ydb_subscript_previous_s() call
Attempting ydb_subscript_previous_s() with subscr32[3].buf_addr=NULL and subscr32[3].len_used=0 : Expect NO PARAMINVALID error
# Test that LVUNDEF error is NOT issued by ydb_subscript_previous_s()
ydb_subscript_previous_s() returned []
Demonstrate our progress by executing a ZWRITE in a call-in
baselv="A question"
baselv("","x","x","x","x")=""
baselv("x","x","x","","x")=""
baselv("x","x","x","x","x")=""
zwrarg=""
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
