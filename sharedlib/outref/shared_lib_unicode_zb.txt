Files Created in ##TEST_PATH##/multi_ｂｙｔｅ_後漢書_byte:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat

YDB>

YDB>
################################################################### unizbbasic ###################################################################
Simple zbreak test starts
###################################################################
Set break points
After break points set: Show the break points and stack:
zbbasic+14^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",14)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",14))+1
zbbasic+13^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",13)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",13))+1
zbbasic+12^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",12)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",12))+1
zbbasic+11^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",11)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",11))+1
zbbasic+10^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",10)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",10))+1
zbbasic+9^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",9)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",9))+1
zbbasic+8^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",8)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",8))+1
zbbasic+7^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",7)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",7))+1
zbbasic+6^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",6)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",6))+1
zbbasic+5^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",5)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",5))+1
zbbasic+4^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",4)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",4))+1
zbbasic+3^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",3)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",3))+1
zbbasic+2^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",2)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",2))+1
basic+11^unizbbasic
dozbbasic+3^unizbdrive
##TEST_AWK.*\^GTM\$DMOD    \(Direct mode\) 
###################################################################
Test xecute
Verify xecute
###################################################################
Test zbreak actions
do zbbasic^zbbasicexec
zbbasic+1^zbbasicexec$zlevel=4
After zbreak actions: Show the break points and stack:
zbbasic+14^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",14)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",14))+1
zbbasic+13^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",13)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",13))+1
zbbasic+12^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",12)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",12))+1
zbbasic+11^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",11)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",11))+1
zbbasic+10^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",10)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",10))+1
zbbasic+9^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",9)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",9))+1
zbbasic+8^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",8)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",8))+1
zbbasic+7^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",7)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",7))+1
zbbasic+6^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",6)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",6))+1
zbbasic+5^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",5)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",5))+1
zbbasic+4^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",4)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",4))+1
zbbasic+3^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",3)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",3))+1
zbbasic+2^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4",2)=$get(zbbasic("ｂｙｔｅ_後漢書_？？_4",2))+1
basic+28^unizbbasic
dozbbasic+3^unizbdrive
##TEST_AWK.*\^GTM\$DMOD    \(Direct mode\) 
Now verify data
do verify^zbbasicexec
###################################################################
Set break points again
Test xecute cmd
Verify xecute cmd
###################################################################
Test zbreak actions again
do zbbasic^zbbasicexec
zbbasic+1^zbbasicexec$zlevel=4
After second zbreak actions: Show the break points and stack:
zbbasic+14^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",14)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",14))
zbbasic+13^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",13)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",13))
zbbasic+12^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",12)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",12))
zbbasic+11^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",11)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",11))
zbbasic+10^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",10)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",10))
zbbasic+9^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",9)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",9))
zbbasic+8^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",8)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",8))
zbbasic+7^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",7)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",7))
zbbasic+6^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",6)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",6))
zbbasic+5^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",5)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",5))
zbbasic+4^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",4)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",4))
zbbasic+3^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",3)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",3))
zbbasic+2^zbbasicexec>set zbbasic("ｂｙｔｅ_後漢書_？？_4","3bytevariable",2)=$increment(zbbasic("ｂｙｔｅ_後漢書_？？_4",2))
basic+57^unizbbasic
dozbbasic+3^unizbdrive
##TEST_AWK.*\^GTM\$DMOD    \(Direct mode\) 
Now verify data
do verify^zbbasicexec
Simple zbreak test ends...
################################################################### dounicode ###################################################################
Show the breakpoints for dounicode
testunicode+4^unizbbasic>do dounicode^unizbbasic("multi_ｂｙｔｅ_後漢書 string")
testunicode+3^unizbbasic>do dounicode^unizbbasic("multi_ｂｙｔｅ_後漢書 string")
This section is to trigger zbreak to do routine passing unicode string
Will force a zbreak on executing next 2 lines
The string passed is : multi_ｂｙｔｅ_後漢書 string
dounicode ends...
Trigger zbreak
The string passed is : multi_ｂｙｔｅ_後漢書 string
dounicode ends...
zbreak triggered
testunicode ends...
################################################################### dollartext ###################################################################
Show the breakpoints for dollartext
dodollartext+5^unizbbasic>write "$text= ",$text(testdollartext+5^unizbbasic),!
dodollartext+4^unizbbasic>write "$text= ",$text(testdollartext+4^unizbbasic),!
dodollartext+3^unizbbasic>write "$text= ",$text(testdollartext+3^unizbbasic),!
dodollartext+2^unizbbasic>write "$text= ",$text(testdollartext+2^unizbbasic),!
dodollartext+1^unizbbasic>write "$text= ",$text(testdollartext+1^unizbbasic),!
$text=  write "This section is to test $text with unicode data",!
Test unicode data in $text
$text=  ; __UNICODE COMMENT_
checks the display of unicode comment
$text=  write "This is unicode ｂｙｔｅ_後漢書_？？_4 text",!
and unicode text
$text=  ; comment having ASCII and unicode - ｂｙｔｅ_後漢書_？？_4
.. and both
$text=  write "testdollartext ends...",!
dodollartext ends...

YDB>
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
