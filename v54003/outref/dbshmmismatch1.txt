---------------------------------------------------------------------------------------
BEGIN 1 :-) Choose randomly between -reg OR -file qualifier


END 1
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
BEGIN 2 :-) Create backup.dat and mumps.dat database:

Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
backup.gld
Using: ##SOURCE_PATH##/mupip
backup.dat
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat

END 2
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
BEGIN 3 :-) Access mumps.dat and crash it:


GTM>
set ^x=1
GTM>

GTM>

File  	##TEST_PATH##/mumps.dat
Region	DEFAULT


GTM>
Killed

END 3
---------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------
BEGIN 4 :-) Issue REQRUNDOWN message with a DBSHMNAMEDIFF secondary error:


GTM>
write ^x
GTM>
%YDB-E-REQRUNDOWN, Error accessing database ##TEST_PATH##/backup.dat.  Must be rundown on cluster node ##TEST_HOST_SHORT####TEST_AWK[A-Za-z.]*.
##TEST_AWK.YDB-E-DBSHMNAMEDIFF, Database file ##TEST_PATH##.backup.dat points to shared memory .id = [0-9]+. which points to a different database file ##TEST_PATH##.mumps.dat

GTM>

END 4
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
BEGIN 5 :-) Do mupip rundown on backup.dat. This should not touch shared memory as it is not related to backup.dat:

##TEST_AWK.GTM-I-DBSHMNAMEDIFF, Database file ##TEST_PATH##.backup.dat points to shared memory .id = [0-9]+. which points to a different database file ##TEST_PATH##.mumps.dat
%GTM-I-MUFILRNDWNSUC, File ##TEST_PATH##/backup.dat successfully rundown

END 5
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
BEGIN 6 :-) Do mupip rundown on backup.dat again and it should be fine. Accesss to backup.dat should also be fine:

##TEST_AWK.GTM-I-MUFILRNDWNSUC, File .*backup.dat successfully rundown

GTM>
set ^y=1
GTM>

GTM>

END 6
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
BEGIN 7 :-) Switch to mumps.dat and access it. It should access successfully.


GTM>
write ^x
GTM>
1
GTM>

END 7
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
BEGIN 8 :-) Mupip rundown on mumps.dat and access GT.M and that should be fine:

##TEST_AWKmupip rundown .*
##TEST_AWK.GTM-I-MUFILRNDWNSUC, File .*.dat successfully rundown

GTM>
write ^x
GTM>
1
GTM>
clean database access
GTM>

END 8
---------------------------------------------------------------------------------------
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
