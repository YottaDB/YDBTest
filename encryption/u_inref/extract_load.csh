#!/usr/local/bin/tcsh -f
#################################################################
#								#
#	Copyright 2009, 2014 Fidelity Information Services, Inc	#
#								#
#                                                               #
# Copyright (c) 2017 YottaDB LLC. and/or its subsidiaries.	#
# All rights reserved.						#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################
#
# Test whether database extracts generated by prior version of GT.M
# can be loaded onto encrypted and/or unencrypted databases created
# by new version of GT.M.
#
#Creating gld with older version which does not support encryption

$switch_chset "M" >& switch_chset.log
set prior_ver = `$gtm_tst/com/random_ver.csh -gte V50000 -lte V53000`
if ("$prior_ver" =~ "*-E-*") then
	echo "No prior versions available: $prior_ver"
	exit -1
endif
source $gtm_tst/com/ydb_prior_ver_check.csh $prior_ver
echo $prior_ver >& prior_ver.txt
source $gtm_test/$tst_src/com/switch_gtm_version.csh $prior_ver $tst_image
$GDE_SAFE > gde_safe.txt
$MUPIP create

$GTM << xyz
for i=1:5:2000  s ^var("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv",i)=i
for i=851:5:926  K ^var("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuv",i)
h
xyz
$MUPIP extract -fo=binary extr_old.bin

source $gtm_tst/com/switch_gtm_version.csh $tst_ver $tst_image
setenv gtmgbldir mumps
mkdir old_ver
cp mumps.gld ./old_ver
$GDE exit >&! gdenew.out

$MUPIP extract -fo=binary extr_new.bin
echo "#####TEST CONDITION :Loading into encrypted and non encrypted databases with new extract filee#####"
setenv gtmgbldir create

# adding random spanning regions functionality to this test is more work for very little (if any) payoff.
# hence disabling this scheme here.
setenv gtm_test_spanreg 0

mv *.dat ./old_ver	# BYPASSOK backup_dbjnl.csh
setenv gtm_test_sprgde_id "ID1"	# to differentiate multiple dbcreates done in the same subtest
$gtm_tst/com/dbcreate.csh create 3

cp $gtm_tst/encryption/inref/temp.gde .
$GDE << aaaa
@./temp.gde
aaaa

$MUPIP create -reg=ZREG
$MUPIP create -reg=YREG

#Loading with new extract file
$MUPIP load -fo=binary extr_new.bin
$gtm_tst/com/dbcheck.csh
$gtm_tst/com/backup_dbjnl.csh new_ver "*.dat" mv
echo "#####TEST CONDITION :Loading into encrypted and non encrypted databases with old extract file#####"
setenv gtmgbldir create_old
setenv gtm_test_sprgde_id "ID2"	# to differentiate multiple dbcreates done in the same subtest
$gtm_tst/com/dbcreate.csh create_old 3

$GDE << aaaa
@temp.gde
aaaa


$MUPIP create -reg=ZREG
$MUPIP create -reg=YREG

#Loading with old extract file
$MUPIP load -fo=binary extr_old.bin
$gtm_tst/com/dbcheck.csh

