# ********************************************************************************************
# GTM-F135040 - Test the following release note
# ********************************************************************************************
# 
# Release note (from http://tinco.pair.com/bhaskar/gtm/doc/articles/GTM_V7.1-001_Release_Notes.html#GTM-F135040):
# 
# Specifying a second expression for $VIEW("JNLPOOL") provides a means of iterating through active Journal Pools. If the second expression is an empty string, the function returns the replication instance file name associated with the instance first attached by the process or the string "*" if the process has not previously engaged with any instance. If the file name specified in the second expression does not match the replication instance file name for any of the active Journal Pools the string "*" is returned. Otherwise the file name of the Journal Pool attached after the Journal Pool with the file name given in the second expression is returned. Note the two argument form of $VIEW("JNLPOOL") does not change the current Replication Instance. (GTM-F135040)
# 

# Create a 1 region DB with gbl_dir mumps.gld and region DEFAULT
# Start INST1 INST2 replication
==Executing MULTISITE_REPLIC 'START INST1 INST2'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

# Start INST3 INST4 replication
==Executing MULTISITE_REPLIC 'START INST3 INST4'==
Starting Primary Source Server in ##FILTERED##_REMOTE_TEST_PATH_/instance3
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance4

# Test 1: The second expression is an empty string, i.e.: $VIEW("JNLPOOL",""),
# and the process has not previously engaged with any replication instance.
# Expect the string "*".
*

# Test 2: The second expression is an empty string, i.e.: $VIEW("JNLPOOL",""),
# and a replication instance was previously attached by the process.
# Expect the name of the initially attached process.
##TEST_PATH##/mumps.repl

# Test 3: The second expression does not match a replication instance file, e.g.: $VIEW("JNLPOOL","NOTAFILENAME")
# Expect the string "*".
*

# Test 4: Iterate through journal pools when the second expression matches a replication instance file, e.g.: $VIEW("JNLPOOL","")
# Expect the file name of the first Journal Pool, i.e. INST1, followed by the file name of the second one, i.e. INST3,
# followed by the empty string.
# Get the paths to the INST1 and INST3 replication instance files
# Run gtmf135040.m to update both INST1 and INST3
# Update the INST1 DB
# Update the INST3 DB with an extended reference
# Switch to INST3 gbldir
# Update the INST3 DB
# Update the INST1 DB with an extended reference
# Switch back to INST1 gbldir
# Show the initial JNLPOOL, i.e. INST1
##TEST_PATH##/mumps.repl
# Show the JNLPOOL after the initial pool, i.e. INST3:
##REMOTE_TEST_PATH##/instance3/mumps.repl
# Show the JNLPOOL after the second pool, i.e. "":


# Test 5: Iterate through journal pools in reverse order when the second expression matches a replication instance file, e.g.: $VIEW("JNLPOOL","")
# Expect the file name of the second Journal Pool, i.e. INST3, followed by the file name of the first one, i.e. INST1,
# followed by the empty string.
# Run reversed^gtmf135040.m to update both INST1 and INST3
# Switch to INST3 gbldir
# Update the INST3 DB
# Update the INST1 DB with an extended reference
# Switch to INST1 gbldir
# Update the INST1 DB
# Update the INST3 DB with an extended reference
# Switch back to INST3 gbldir
# Show the initial JNLPOOL, i.e. INST3
##REMOTE_TEST_PATH##/instance3/mumps.repl
# Show the JNLPOOL after the initial pool, i.e. INST1:
##TEST_PATH##/mumps.repl
# Show the JNLPOOL after the second pool, i.e. "":


# Test 6: Single-argument form shows the current instance file, i.e.: $VIEW("JNLPOOL")
# Expect the file name of the current Journal Pool, i.e. INST1. Then change the Journal Pool to INST3,
# then expect its filename.
# Run single^gtmf135040 to update both INST1 and INST3
# Update the INST1 DB
# Show the current JNLPOOL, i.e. INST1
##TEST_PATH##/mumps.repl
# Switch to INST3 gbldir
# Update the INST3 DB
# Show the current JNLPOOL, i.e. INST3
##REMOTE_TEST_PATH##/instance3/mumps.repl
# Switch back to INST1 gbldir
# Update the INST1 DB
# Show the current JNLPOOL, i.e. INST1
##TEST_PATH##/mumps.repl

# Test 7: $VIEW("JNLPOOL") shows the instance file of the first-accessed instance when:
# 1. A DB update is made to a replication instance, e.g. INST1
# 2. The global directory is changed to a second replication instance, e.g. INST3
# 3. NO updates are made while using the second replication instance, e.g. INST3
# 4. $VIEW("JNLPOOL") is called while still using the second replication instance, e.g. INST3
# Expect the file name of the initial Journal Pool, i.e. INST1.
# Run noupdate^gtmf135040 to update only INST1 but not INST3
# Update the INST1 DB
# Show the current JNLPOOL, i.e. INST1
##TEST_PATH##/mumps.repl
# Switch to INST3 gbldir
# Do NOT update the DB using the INST3 gbldir
# Show the current JNLPOOL, i.e. INST1
##TEST_PATH##/mumps.repl
# Switch back to INST1 gbldir
# Show the current JNLPOOL, i.e. INST1
##TEST_PATH##/mumps.repl

# Test 8: $VIEW("JNLPOOL") shows the replication instance file of the latest instance when:
# 1. A DB update is made to a replication instance, e.g. INST1
# 2. A DB update is made to a second replication instance using an extended reference, e.g. INST3
# 3. $VIEW("JNLPOOL") is called
# Expect the file name of the latest Journal Pool, i.e. INST3.
# Run erefswitch^gtmf135040 to update INST3 through an extended reference
# Update the INST1 DB
# Show the current JNLPOOL, i.e. INST1
##TEST_PATH##/mumps.repl
# Update the INST3 DB with an extended reference
# Show the current JNLPOOL, i.e. INST3
##REMOTE_TEST_PATH##/instance3/mumps.repl

# Stop INST1 INST2 replication
==Executing MULTISITE_REPLIC 'STOP INST1 INST2'==
Shutting down Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2
Shutting down Primary Source Server Server in ##TEST_PATH##

# Stop INST3 INST4 replication
==Executing MULTISITE_REPLIC 'STOP INST3 INST4'==
Shutting down Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance4
Shutting down Primary Source Server Server in ##FILTERED##_REMOTE_TEST_PATH_/instance3

==Executing MULTISITE_REPLIC 'SYNC ALL_LINKS'==
==Executing MULTISITE_REPLIC 'STOP ALL_LINKS OFF'==
==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST3 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST4 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
