# ********************************************************************************************
# GTM-DE519525 - Test the following release note
# ********************************************************************************************
# 
# Release note (from http://tinco.pair.com/bhaskar/gtm/doc/articles/GTM_V7.1-001_Release_Notes.html#GTM-DE519525):
# 
# GT.M defers $ZTIMEOUT when its expiry happens during a TP transaction. $ZMAXTPTIME may interrupt a transaction, as optionally may MUPIP INTRPT initiated $ZINTERRUPT processing, but $ZTIMEOUT acts after a TROLLBACK or master TCOMMIT. Previously, GT.M allowed a $ZTIMEOUT expiry within a TP transaction. (GTM-DE519525)
# 

# Create test routine gtmde519525.m from pre-existing similar test routine v71001/inref/gtmde513980.m
# Revised copied test routine gtmde519525.m to use $ztimeout instead of $zmaxtptime
# Set gtm_tpnotacidtime to a value higher than the hang time of 15 seconds, i.e. 30 seconds, to avoid a TPNOTACID message in the test routine

# Run the gtmde519525 routine to set $ZTIMEOUT to 2 seconds, do a trestart until execution reaches the final retry,
# and then, hang for 15 seconds. Expect a message with $HOROLOG and $TRESTART information both BEFORE and AFTER
# the hang. Prior to v71001, the transaction would not complete and a GTM-W-ZTIMEOUT message would be issued.
##TEST_AWK\$ZTIMEOUT=[0-9\."]*
##TEST_AWK\$h = [0-9]*,[0-9]* : \$trestart = 3 : BEFORE hang 15
##TEST_AWK\$h = [0-9]*,[0-9]* : \$trestart = 3 : BEFORE tcommit
