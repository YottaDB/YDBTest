#################################################################
#								#
# Copyright (c) 2018 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

set timeout 60
spawn /usr/local/bin/tcsh -f
source $::env(gtm_tst)/com/expectinit.exp
set cenable(0) "CENABLE"
set cenable(1) "NOCENABLE"
for {set i 0} {$i < 2} {incr i 1} {
	send -- "\$gtm_dist/mumps -run ctrlchandler $cenable($i)\r"
	expect -exact "Hit ^C now\r"
	# Send <Ctrl-C>
	send -- "\003"
	expect -exact "YDB>"
	send -- "zshow \"S\"\r"
	expect -exact "YDB>"
	send -- "halt\r"
	expect -exact "SHELL"
	send -- "\$gtm_dist/mumps -direct\r"
	expect -exact "YDB>"
	send -- "write \"Invoking mumps with \$zcmdline=\"\"\"\"\",!\r"
	expect -exact "YDB>"
	send -- "set savelvl=\$zlevel set \$etrap=\"do etraperror^ctrlchandler\"\r"
	# Ensure ECHO is turned OFF in terminal (i.e. we are inside direct mode read) before sending in keystrokes
	# as this avoids false test failures due to the keystrokes being displayed more than once.
	system $::env(gtm_tst)/com/wait_for_stty_echo_off.csh
	send -- "use \$Principal:(CTRAP=\$char(3):exception=\"do gotctrlc^ctrlchandler\":$cenable($i))\r"
	system $::env(gtm_tst)/com/wait_for_stty_echo_off.csh
	send -- "write \"Hit ^C now\",!  hang 15\r"
	expect -exact "Hit ^C now\r"
	# Send <Ctrl-C>
	send -- "\003"
	expect -exact "YDB>"
	send -- "zshow \"S\"\r"
	expect -exact "YDB>"
	send -- "set savelvl=\$zlevel set \$etrap=\"do etraperror^ctrlchandler\"\r"
	system $::env(gtm_tst)/com/wait_for_stty_echo_off.csh
	send -- "use \$Principal:(CTRAP=\$char(3):exception=\"do gotctrlc^ctrlchandler\":$cenable($i))\r"
	system $::env(gtm_tst)/com/wait_for_stty_echo_off.csh
	send -- "write \"Hit ^C now\",!  hang 15\r"
	expect -exact "Hit ^C now\r"
	# Send <Ctrl-C>
	send -- "\003"
	expect -exact "YDB>"
	send -- "zshow \"S\"\r"
	expect -exact "YDB>"
	send -- "halt\r"
	expect -exact "SHELL"
}
