Create TWO database files a.dat and mumps.dat
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
a.dat
mumps.dat
Start M program that acquires M locks and holds onto it until process exit
Wait for M program to hold the M lock
Verify child process does hold lock
##TEST_AWK%GTM-I-LOCKSPACEINFO, Region: AREG: processes on queue: 0/(160|213); LOCK slots in use: 0/(120|184); name space not full
%GTM-I-NOLOCKMATCH, No matching locks were found in AREG
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 100% of 40 pages

DEFAULT
##TEST_AWK\^holdontillexit Owned by PID\= [1-9][0-9]* which is an existing process
##TEST_AWK%GTM-I-LOCKSPACEINFO, Region: DEFAULT: processes on queue: 0/(160|213); LOCK slots in use: 1/(120|184); name space not full
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 99% of 40 pages
Do a DSE CRIT -SEIZE to hold crit
Signal M program to die while holding M lock
Verify child process was able to release lock
##TEST_AWK%GTM-I-LOCKSPACEINFO, Region: AREG: processes on queue: 0/(160|213); LOCK slots in use: 0/(120|184); name space not full
%GTM-I-NOLOCKMATCH, No matching locks were found in AREG
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 100% of 40 pages
##TEST_AWK%GTM-I-LOCKSPACEINFO, Region: DEFAULT: processes on queue: 0/(160|213); LOCK slots in use: 1/(120|184); name space not full
%GTM-I-NOLOCKMATCH, No matching locks were found in DEFAULT
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 99% of 40 pages
Test PASS : Process was able to release M lock and exit without needing crit
Do DSE CRIT -RELEASE to release crit
Show that lke accepts multiple inputs by writing "show locks" twice to the input
##TEST_AWKLKE> %GTM-I-LOCKSPACEINFO, Region: AREG: processes on queue: 0/(160|213); LOCK slots in use: 0/(120|184); name space not full
%GTM-I-NOLOCKMATCH, No matching locks were found in AREG
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 100% of 40 pages
##TEST_AWK%GTM-I-LOCKSPACEINFO, Region: DEFAULT: processes on queue: 0/(160|213); LOCK slots in use: 0/(120|184); name space not full
%GTM-I-NOLOCKMATCH, No matching locks were found in DEFAULT
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 100% of 40 pages
##TEST_AWKLKE> %GTM-I-LOCKSPACEINFO, Region: AREG: processes on queue: 0/(160|213); LOCK slots in use: 0/(120|184); name space not full
%GTM-I-NOLOCKMATCH, No matching locks were found in AREG
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 100% of 40 pages
##TEST_AWK%GTM-I-LOCKSPACEINFO, Region: DEFAULT: processes on queue: 0/(160|213); LOCK slots in use: 0/(120|184); name space not full
%GTM-I-NOLOCKMATCH, No matching locks were found in DEFAULT
%GTM-I-LOCKSPACEUSE, Estimated free lock space: 100% of 40 pages
LKE> 
Show that mupip accepts multi-line input by writing integ on one line and mumps.dat on another
$grep for "No errors detected by integ" in mupiptest.outx for success
No errors detected by integ.

##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
