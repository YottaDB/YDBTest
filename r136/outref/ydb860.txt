Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
---------------------------------------------------------------------
######## Test various code issues identified by fuzz testing ########
---------------------------------------------------------------------

------------------------------------------------------------
# Test OPEN of a SOCKET device with a long LISTEN device parameter works fine
# This used to previously (before YDB@98837f3e) fail with a SIG-11/Assert
# Expecting ADDRTOOLONG error in below output
------------------------------------------------------------
# Try ydb860opensocketlisten.m using [yottadb -direct]

YDB>

YDB>
%YDB-E-ADDRTOOLONG, Socket address xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx of length 128 is longer than the maximum permissible length 108

YDB>
# Try ydb860opensocketlisten.m using [yottadb -run]
%YDB-E-ADDRTOOLONG, Socket address xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx of length 128 is longer than the maximum permissible length 108
		At M source location +2^ydb860opensocketlisten

YDB>

------------------------------------------------------------
# Test ZGOTO using long entryref names works fine
# This used to previously (before YDB@1d843ecc) fail with a SIG-11/stack-buffer-overflow
# Expecting LABELMISSING/ZLINKFILE/FILENOTFOUND errors in below output
------------------------------------------------------------
# Try ydb860zgoto.m using [yottadb -direct]

YDB>
# Expecting a LABELMISSING error when using a label name longer than 31 bytes

YDB>
%YDB-E-LABELMISSING, Label referenced but not defined: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

YDB>
# Expecting a ZLKINKFILE/FILENOTFND error when using a routine name longer than 31 bytes

YDB>
%YDB-E-ZLINKFILE, Error while zlinking "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
%YDB-E-FILENOTFND, File xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.m not found
%YDB-E-FILENOTFND, File xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.o not found

YDB>

YDB>
# Try ydb860zgoto.m using [yottadb -run]
# Expecting a LABELMISSING error when using a label name longer than 31 bytes
ZSTATUS=+2^ydb860zgoto,%YDB-E-LABELMISSING, Label referenced but not defined: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Expecting a ZLKINKFILE/FILENOTFND error when using a routine name longer than 31 bytes
ZSTATUS=+4^ydb860zgoto,%YDB-E-ZLINKFILE, Error while zlinking "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",%YDB-E-FILENOTFND, File xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.m not found,%YDB-E-FILENOTFND, File xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.o not found

------------------------------------------------------------
# Test forward and reverse $QUERY in FOR loop does not SIG-11/Assert fail
------------------------------------------------------------
# test1 : Simple test of https://gitlab.com/YottaDB/DB/YDB/-/issues/860#note_946511877
# This used to SIG-11/Assert failure before YDB@076f2ed6
# We expect zwrite to show c(1)=""
c(1)=""
# test2 : Simple test of https://gitlab.com/YottaDB/DB/YDB/-/issues/860#note_946513617
# This used to SIG-11/Assert failure before YDB@721f274e
# We expect zwrite to show c(1)=""
c(1)=""
# test3 : And a fancy test of https://gitlab.com/YottaDB/DB/YDB/-/issues/860#note_946511877
# This used to SIG-11/Assert failure before YDB@076f2ed6 and YDB@721f274e
# We expect zwrite to show c(0)="c(1)", c(1)="c(2)" etc. below
c(0)="c(1)"
c(1)="c(2)"
c(2)="c(3)"
c(3)="c(4)"
# test4 : Test of https://gitlab.com/YottaDB/DB/YDB/-/issues/860#note_947042012
# This used to return incorrect results before YDB@383640fc
# We expect zwrite to show c(1)="c(0)", c(2)="c(1)" etc. below
c(1)="c(0)"
c(2)="c(1)"
c(3)="c(2)"
c(4)="c(3)"

------------------------------------------------------------
# Test ZTIMEOUT when $ETRAP has M code with a syntax error in direct mode works fine
# This used to previously (before YDB@7f378d5b) fail with a SIG-11
# Expecting LABELMISSING/ZLINKFILE/FILENOTFOUND errors in below output
------------------------------------------------------------
# Try ydb860ztimeoutetrap1.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
# Try ydb860ztimeoutetrap1.m using [yottadb -run]
etrap="goto CLIERR^%XCMD"
etrap="goto CLIERR^%XCMD"
%YDB-W-ZTIMEOUT, Time expired
# Try ydb860ztimeoutetrap2.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
	write $zsta~us
	           ^-----

YDB>

YDB>
# Try ydb860ztimeoutetrap2.m using [yottadb -run]
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found

------------------------------------------------------------
# Test ZLINK of a M program that has already been opened in read-write mode issues DEVICEREADONLY error
# This used to previously (before YDB@3896dddb) fail with a SIG-11
# Expecting DEVICEREADONLY error in below output
------------------------------------------------------------
# Try ydb860devicereadonly.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
	 zlink "generated.m"
	                    ^-----
		At column 21, line 1, source module generated.m
%YDB-E-DEVICEREADONLY, Cannot write to read-only device

YDB>
# Try ydb860devicereadonly.m using [yottadb -run]
%YDB-E-DEVICEREADONLY, Cannot write to read-only device

------------------------------------------------------------
# Test boolean expressions inside extended reference using the [] syntax
# This used to previously (before YDB@7b3f8ffe) fail with a SIG-11
# Expecting various syntax errors in below output but no SIG-11
------------------------------------------------------------
# Try ydb860boolexprextref.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
%YDB-E-GVUNDEF, Global variable undefined: ^a

YDB>
%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
		lock +[($get(^a(3))!$get(^|"mumps.gld"|a(3)))
		                                             ^-----

YDB>
%YDB-E-RPARENMISSING, Right parenthesis expected
		lock ^[(($Test&($ZAHandle(@iTRUE)]$ZAHandle(@iTRUE@(1)))!$Test)&^TRUE&($$RetNot(((((@iFALSE@($$Always1)[(1'>$Order(^TRUE(1),-1)))[$$RetNot($$Always0))>$$Always0)'>1))'[(0']]$$Always1))
		                                                                                                                                                                                        ^-----

YDB>
%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
		lock +[($Test!(1'=($Test'=^TRUE))!$Test!$$RetNot($Order(@^iTRUE@(2),-1)))
		                                                                         ^-----

YDB>
%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
		lock +[(^TRUE!$Test!$$RetNot($Order(@^iTRUE@(2),-1)))
		                                                     ^-----

YDB>
%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
		lock +[(^TRUE!$$RetNot($Order(@^iTRUE@(2))))]
		                                             ^-----

YDB>
%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
		lock +[(^TRUE!$$x($Order(^iTRUE(2))))]
		                                      ^-----

YDB>
%YDB-E-RPARENMISSING, Right parenthesis expected
		lock ^[(+aZYISSQLNULL(second)!^y(+c),+^z(d)
		                                    ^-----

YDB>
%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
		lock +[(^x!$Order(^y(1)))]
		                          ^-----

YDB>
%YDB-E-RHMISSING, Right-hand side of expression expected
		set ^[(0!^x(1)]
		               ^-----

YDB>

YDB>

YDB>
# Try ydb860boolexprextref.m using [yottadb -run]
		lock +[($get(^a(3))!$get(^|"mumps.gld"|a(3)))
		                                             ^-----
		At column 47, line 17, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
		lock ^[(($Test&($ZAHandle(@iTRUE)]$ZAHandle(@iTRUE@(1)))!$Test)&^TRUE&($$RetNot(((((@iFALSE@($$Always1)[(1'>$Order(^TRUE(1),-1)))[$$RetNot($$Always0))>$$Always0)'>1))'[(0']]$$Always1))
		                                                                                                                                                                                        ^-----
		At column 186, line 18, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-RPARENMISSING, Right parenthesis expected
		lock +[($Test!(1'=($Test'=^TRUE))!$Test!$$RetNot($Order(@^iTRUE@(2),-1)))
		                                                                         ^-----
		At column 75, line 19, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
		lock +[(^TRUE!$Test!$$RetNot($Order(@^iTRUE@(2),-1)))
		                                                     ^-----
		At column 55, line 20, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
		lock +[(^TRUE!$$RetNot($Order(@^iTRUE@(2))))]
		                                             ^-----
		At column 47, line 21, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
		lock +[(^TRUE!$$x($Order(^iTRUE(2))))]
		                                      ^-----
		At column 40, line 22, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
		lock ^[(+aZYISSQLNULL(second)!^y(+c),+^z(d)
		                                    ^-----
		At column 38, line 23, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-RPARENMISSING, Right parenthesis expected
		lock +[(^x!$Order(^y(1)))]
		                          ^-----
		At column 28, line 24, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
		set ^[(0!^x(1)]
		               ^-----
		At column 17, line 25, source module ##IN_TEST_PATH##/inref/ydb860boolexprextref.m
%YDB-E-RHMISSING, Right-hand side of expression expected
ZSTATUS=+16^ydb860boolexprextref,%YDB-E-GVUNDEF, Global variable undefined: ^a
ZSTATUS=+17^ydb860boolexprextref,%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
ZSTATUS=+18^ydb860boolexprextref,%YDB-E-RPARENMISSING, Right parenthesis expected
ZSTATUS=+19^ydb860boolexprextref,%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
ZSTATUS=+20^ydb860boolexprextref,%YDB-E-EXTGBLDEL, Invalid delimiter for extended global syntax
ZSTATUS=+21^ydb860boolexprextref,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
ZSTATUS=+22^ydb860boolexprextref,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
ZSTATUS=+23^ydb860boolexprextref,%YDB-E-RPARENMISSING, Right parenthesis expected
ZSTATUS=+24^ydb860boolexprextref,%YDB-E-LKNAMEXPECTED, An identifier is expected after a ^ in this context
ZSTATUS=+25^ydb860boolexprextref,%YDB-E-RHMISSING, Right-hand side of expression expected

------------------------------------------------------------
# Test QUIT after TSTART in direct mode issues TPQUIT error
# This used to previously (before YDB@7c48ba9c) fail with a GTMASSERT2/SIG-11/heap-use-after-free error
------------------------------------------------------------
# Try ydb860tpquit1.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
%YDB-E-INVCMD, Invalid command keyword encountered
	test1	;
	^-----

YDB>

YDB>

YDB>

YDB>
%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
		At M source location +1^GTM$DMOD

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
# Try ydb860tpquit1.m using [yottadb -run]
ZSTATUS=test1+4^ydb860tpquit1,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
ZSTATUS=test1+7^ydb860tpquit1,%YDB-E-TRESTMAX, TRESTART not allowed in a final TP retry more than once
# Try ydb860tpquit2.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
%YDB-E-INVCMD, Invalid command keyword encountered
	test2	;
	^-----

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction
		At M source location +1^GTM$DMOD

YDB>

YDB>
# Try ydb860tpquit2.m using [yottadb -run]
ZSTATUS=test2+6^ydb860tpquit2,%YDB-E-TPQUIT, Cannot QUIT out of a routine with an active transaction

------------------------------------------------------------
# Test ZALLOCATE (^x,^y):1 hangs if lock of ^x is held by another process. And returns $TEST value of 0 due to timeout.
# This used to previously (before YDB@3d35722e) fail with a GTMASSERT fatal error
------------------------------------------------------------
# Try ydb860zallocate.m using [yottadb -direct]

YDB>

YDB>
In child process : $test=0

YDB>
# Try ydb860zallocate.m using [yottadb -run]
In child process : $test=0

------------------------------------------------------------
# Test zbreak using negative breakpoint count
# This used to previously (before YDB@bc947837) fail with a GTMASSERT2 error
# Expecting a ZBRKCNTNEGATIVE/INVZBREAK/SPOREOL error in below output but no GTMASSERT2 error
------------------------------------------------------------
# Try ydb860zbrkcntnegative.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
%YDB-E-ZBRKCNTNEGATIVE, Count [-10], of transits through a ZBREAK breakpoint before activating it, cannot be negative

YDB>
%YDB-E-ZBRKCNTNEGATIVE, Count [-1], of transits through a ZBREAK breakpoint before activating it, cannot be negative

YDB>
%YDB-E-ZBRKCNTNEGATIVE, Count [-2], of transits through a ZBREAK breakpoint before activating it, cannot be negative

YDB>
%YDB-E-ZBRKCNTNEGATIVE, Count [-3], of transits through a ZBREAK breakpoint before activating it, cannot be negative

YDB>

YDB>

YDB>
%YDB-E-INVZBREAK, Cannot set ZBREAK in direct mode routine (GTM$DMOD)

YDB>
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::-1	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a negative count (-1) is specified
		         ^-----

YDB>
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::-2	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a negative count (-2) is specified
		         ^-----

YDB>
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::-3	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a negative count (-3) is specified
		         ^-----

YDB>
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::0	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a zero count () is specified
		         ^-----

YDB>
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::2	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a positive count (1) is specified
		         ^-----

YDB>

YDB>

YDB>
# Try ydb860zbrkcntnegative.m using [yottadb -run]
		zbreak -x::-1	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a negative count (-1) is specified
		         ^-----
		At column 11, line 25, source module ##IN_TEST_PATH##/inref/ydb860zbrkcntnegative.m
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::-2	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a negative count (-2) is specified
		         ^-----
		At column 11, line 26, source module ##IN_TEST_PATH##/inref/ydb860zbrkcntnegative.m
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::-3	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a negative count (-3) is specified
		         ^-----
		At column 11, line 27, source module ##IN_TEST_PATH##/inref/ydb860zbrkcntnegative.m
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::0	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a zero count () is specified
		         ^-----
		At column 11, line 28, source module ##IN_TEST_PATH##/inref/ydb860zbrkcntnegative.m
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
		zbreak -x::2	; Ensure we get a parse error when ZBREAK - (i.e. cancel breakpoint) and a positive count (1) is specified
		         ^-----
		At column 11, line 29, source module ##IN_TEST_PATH##/inref/ydb860zbrkcntnegative.m
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
ZSTATUS=+18^ydb860zbrkcntnegative,%YDB-E-ZBRKCNTNEGATIVE, Count [-10], of transits through a ZBREAK breakpoint before activating it, cannot be negative
ZSTATUS=+19^ydb860zbrkcntnegative,%YDB-E-ZBRKCNTNEGATIVE, Count [-1], of transits through a ZBREAK breakpoint before activating it, cannot be negative
ZSTATUS=+20^ydb860zbrkcntnegative,%YDB-E-ZBRKCNTNEGATIVE, Count [-2], of transits through a ZBREAK breakpoint before activating it, cannot be negative
ZSTATUS=+21^ydb860zbrkcntnegative,%YDB-E-ZBRKCNTNEGATIVE, Count [-3], of transits through a ZBREAK breakpoint before activating it, cannot be negative
ZSTATUS=+25^ydb860zbrkcntnegative,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
ZSTATUS=+26^ydb860zbrkcntnegative,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
ZSTATUS=+27^ydb860zbrkcntnegative,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
ZSTATUS=+28^ydb860zbrkcntnegative,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
ZSTATUS=+29^ydb860zbrkcntnegative,%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found

------------------------------------------------------------
# Test boolean expression with a string that has NUMOFLOW error when coerced to a numeric
# This used to previously (before YDB@97e16a78) fail with an Assert failure in bx_boollit.c in a Debug build
# Expecting a NUMOFLOW error in below output but no Assert failure
------------------------------------------------------------
# Try ydb860numoflow.m using [yottadb -direct]

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>

YDB>
%YDB-E-NUMOFLOW, Numeric overflow

YDB>
%YDB-E-NUMOFLOW, Numeric overflow

YDB>
%YDB-E-NUMOFLOW, Numeric overflow

YDB>
%YDB-E-NUMOFLOW, Numeric overflow

YDB>

YDB>

YDB>
# Try ydb860numoflow.m using [yottadb -run]
	 write (0!((-(+(-("1E47"))))))
	                              ^-----
		At column 31, line 17, source module ##IN_TEST_PATH##/inref/ydb860numoflow.m
%YDB-E-NUMOFLOW, Numeric overflow
	 write (0!((-(+(-("1E47"))))))&(0!((-(+(-("1E47"))))))
	                                                      ^-----
		At column 55, line 18, source module ##IN_TEST_PATH##/inref/ydb860numoflow.m
%YDB-E-NUMOFLOW, Numeric overflow
	 write (0!((-(+(-("1E47"))))))&(0!((-(+(-("1E47"))))))
	                                                      ^-----
		At column 55, line 18, source module ##IN_TEST_PATH##/inref/ydb860numoflow.m
%YDB-E-NUMOFLOW, Numeric overflow
	 write (0!((-(+(-("1E47"))))))!(0!((-(+(-("1E47"))))))
	                                                      ^-----
		At column 55, line 19, source module ##IN_TEST_PATH##/inref/ydb860numoflow.m
%YDB-E-NUMOFLOW, Numeric overflow
	 write (0!((-(+(-("1E47"))))))!(0!((-(+(-("1E47"))))))
	                                                      ^-----
		At column 55, line 19, source module ##IN_TEST_PATH##/inref/ydb860numoflow.m
%YDB-E-NUMOFLOW, Numeric overflow
	 write (0!((-(+(-("1E47"))))))!'(0!((-(+(-("1E47"))))))
	                                                       ^-----
		At column 56, line 20, source module ##IN_TEST_PATH##/inref/ydb860numoflow.m
%YDB-E-NUMOFLOW, Numeric overflow
	 write (0!((-(+(-("1E47"))))))!'(0!((-(+(-("1E47"))))))
	                                                       ^-----
		At column 56, line 20, source module ##IN_TEST_PATH##/inref/ydb860numoflow.m
%YDB-E-NUMOFLOW, Numeric overflow
ZSTATUS=+17^ydb860numoflow,%YDB-E-NUMOFLOW, Numeric overflow
ZSTATUS=+18^ydb860numoflow,%YDB-E-NUMOFLOW, Numeric overflow
ZSTATUS=+19^ydb860numoflow,%YDB-E-NUMOFLOW, Numeric overflow
ZSTATUS=+20^ydb860numoflow,%YDB-E-NUMOFLOW, Numeric overflow

##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
