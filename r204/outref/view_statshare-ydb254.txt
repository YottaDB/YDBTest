# ********************************************************************************************
# YDB254 - Test the following issues
# ********************************************************************************************
# 
# ########
# Issue 1:
# ########
# 
# $VIEW("STATSHARE") changes from 0 to 1 after a region-specific VIEW "NOSTATSHARE" command.
# 
# ########
# Issue 2:
# ########
# 
# Newly opened regions implicitly share even after a region-specific VIEW "NOSTATSHARE" or VIEW "STATSHARE" command whereas the release note for GTM-8874 clearly states that "after a VIEW specifies selective sharing, regions don't implicitly share as they open".
# 
# ########
# Issue 3:
# ########
# 
# $VIEW("STATSHARE") should differentiate whether most recent VIEW "STATSHARE" or VIEW "NOSTATSHARE" command had region list or not.
# 
# Currently $VIEW("STATSHARE") returns 1 if the most recent VIEW "STATSHARE" or VIEW "NOSTATSHARE" command was either a VIEW "STATSHARE" or VIEW "STATSHARE":reglist or VIEW "NOSTATSHARE":reglist. The only reason when $VIEW("STATSHARE") returns 0 is if the most recent command was a VIEW "NOSTATSHARE". But this is user-unfriendly. It would be better if $VIEW("STATSHARE") returns 0 if the most recent command was a VIEW:"NOSTATSHARE", returns 1 if the most recent command was a VIEW "STATSHARE", returns 2 if the most recent command was a VIEW "STATSHARE":reglist or VIEW "NOSTATSHARE":reglist.
# 
# ########
# Issue 4:
# ########
# 
# $VIEW("STATSHARE",reglist) fails with a SIG-11 if a VIEW "NOSTATSHARE":reglist was done previously.
# 

# Create database

##############
Test issue 1:
$VIEW("STATSHARE") does not change after a region-specific VIEW "NOSTATSHARE" command, but returns the value of gtm_statshare.

Runs the ydb254a^ydb254 label to print the results of $VIEW("STATSHARE") both before and after running VIEW "NOSTATSHARE".
Two cases are covered:
1. Expect "00" when run with gtm_statshare UNSET, confirming that VIEW "NOSTATSHARE" does not incorrectly override gtm_statshare=0
2. Expect "11" when run with gtm_statshare SET, confirming that VIEW "NOSTATSHARE" does not incorrectly override gtm_statshare=1
##############

# Run ydb254a^ydb254 label
##SUSPEND_OUTPUT STATSHARE
0
0
##SUSPEND_OUTPUT NON_STATSHARE
##ALLOW_OUTPUT STATSHARE
1
1
##ALLOW_OUTPUT NON_STATSHARE

##############
Test issue 2:
Stats should not be shared after VIEW specifies selective sharing.

Test by running the ydb254b^ydb254 label to:
1. Selectively set 'nostatshare' on a region
2. List the directory and store the output to ydb254b-before.out
3. Access a variable from another region
4. List the directory and store the output to ydb254b-after.out

Two cases are covered:
1. Expect "0" when gtm_statshare=0
2. Expect "1" when gtm_statshare=1

In both cases, expect an empty diff between ydb254b-before.out and ydb254b-after.out,
signifying that no .gst file was created when accessing a variable between directory listings.

When encryption is randomly enabled for the test, expect also an additional directory
listing for a pipe created during the encryption process.
##############

# Create a second database with an additional region
# Run ydb254b^ydb254 label
##SUSPEND_OUTPUT STATSHARE
0
##SUSPEND_OUTPUT NON_STATSHARE
##ALLOW_OUTPUT STATSHARE
1
##ALLOW_OUTPUT NON_STATSHARE
##SUSPEND_OUTPUT NON_ENCRYPT
LINENUM
> l-wx------ LINKS USER GROUP FSIZE DATE TIME LNAME -> pipe:[ID]
##ALLOW_OUTPUT NON_ENCRYPT

##############
Test issue 3:
$VIEW("STATSHARE") issues varying return values depending on what variation of
VIEW "[NO]STATSHARE" was run beforehand. The ydb254c^ydb254 label tests each of
the following four cases by running the VIEW command then calling $VIEW("STATSHARE"):
1. VIEW "NOSTATSHARE" -> Outputs 0, since stats are not shared
2. VIEW "STATSHARE" -> Outputs 1, since stats are shared
3. VIEW "STATSHARE":reglist -> Outputs 2, since stat sharing is selectively enabled for the specified regions
4. VIEW "NOSTATSHARE":reglist -> Outputs 2, since stat sharing is selectively disabled for the specified regions

Previously, $VIEW("STATSHARE") returned:
1. 0 when run after VIEW "NOSTATSHARE"
2. 1 in all other cases.
##############

# Reset gtmgbldir
# Run ydb254c^ydb254 label
0
1
2
2

##############
Test issue 4:
$VIEW("STATSHARE",reglist) succeeds and returns "0" when run after VIEW "NOSTATSHARE":reglist.
Previously, running $VIEW("STATSHARE", reglist) after VIEW "NOSTATSHARE":reglist resulted in a SIG-11.
##############

# Run ydb254d^ydb254 label
0

# Run dbcheck.csh on both databases
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
##TEST_PATH##/mupip.log
%YDB-E-DBOPNERR, Error opening database file ##TEST_PATH##/mumps.dat
%SYSTEM-E-ENO17, File exists
%YDB-F-DBNOCRE, Not all specified database files, or their associated journal files were created
