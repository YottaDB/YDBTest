# -------------------------------------------------------------------------------------------------------------
# [YDB#1102] Test enhancements to yottadb CLI options
# -------------------------------------------------------------------------------------------------------------

# Create a simple [ydb1102.m] routine to run with various options

### Test 1: help options
# Test --help option [$ydb_dist/yottadb --help]:
YottaDB: NoSQL database.

Usage:
  yottadb [--option][=<argument>] [<file>]

Options:
  -dir                --direct_mode           Run in direct mode, i.e. interactively.
  -[no]dy             --[no]dynamic_literals  Dynamically load and unload certain literal data structures from generated object code.
  -[no]e              --[no]embed_source      Embed routine source code in generated object code.
  -h                  --help                  Show command line usage.
  -[no]ig             --[no]ignore            Optionally specify whether to produce an object file when the compiler detects errors in the source code. The default is to produce an object file, i.e. --ignore.
  -[no]in             --[no]inline_literals   Compile routines to use library code in order to load literals instead of generating in-line code to reduce routine size.
  -la=<case>          --labels=<case>         Enables (case='LOWER') or disables (case='UPPER') case sensitivity for labels within routines.
  -le=<lines>         --length=<lines>        Controls the page length of the listing file.
  -[no]lin            --[no]line_entry        Omit per-line M label offset details to decrease total code size at the cost of possibly increasing code execution time.
  -[no]lis=<filename> --[no]list=<filename>   Produce a source program listing file, optionally specifying a name for the listing file.
  -m                  --machine_code          Produce a source program listing file that contains the generated bytecode and machine code for the program.
  -n=<rtnname>        --nameofrtn=<rtnname>   Specify the routine name (default is M program name minus extension).
  -[no]o=<filename>   --[no]object=<filename> Produce an output object file, optionally specifying a name for the object file using the optional filename argument.
  -r                  --run                   Invoke YottaDB and run the provided entryref.
  -s=<lines>          --space=<lines>         Controls the spacing of the output in the listing file.
  -v                  --version               Print the current YottaDB version details.
  -[no]w              --[no]warnings          Allow or suppress error and warning output. The default is to allow, i.e. --warnings.

# Test -h option [$ydb_dist/yottadb -h]:
YottaDB: NoSQL database.

Usage:
  yottadb [--option][=<argument>] [<file>]

Options:
  -dir                --direct_mode           Run in direct mode, i.e. interactively.
  -[no]dy             --[no]dynamic_literals  Dynamically load and unload certain literal data structures from generated object code.
  -[no]e              --[no]embed_source      Embed routine source code in generated object code.
  -h                  --help                  Show command line usage.
  -[no]ig             --[no]ignore            Optionally specify whether to produce an object file when the compiler detects errors in the source code. The default is to produce an object file, i.e. --ignore.
  -[no]in             --[no]inline_literals   Compile routines to use library code in order to load literals instead of generating in-line code to reduce routine size.
  -la=<case>          --labels=<case>         Enables (case='LOWER') or disables (case='UPPER') case sensitivity for labels within routines.
  -le=<lines>         --length=<lines>        Controls the page length of the listing file.
  -[no]lin            --[no]line_entry        Omit per-line M label offset details to decrease total code size at the cost of possibly increasing code execution time.
  -[no]lis=<filename> --[no]list=<filename>   Produce a source program listing file, optionally specifying a name for the listing file.
  -m                  --machine_code          Produce a source program listing file that contains the generated bytecode and machine code for the program.
  -n=<rtnname>        --nameofrtn=<rtnname>   Specify the routine name (default is M program name minus extension).
  -[no]o=<filename>   --[no]object=<filename> Produce an output object file, optionally specifying a name for the object file using the optional filename argument.
  -r                  --run                   Invoke YottaDB and run the provided entryref.
  -s=<lines>          --space=<lines>         Controls the spacing of the output in the listing file.
  -v                  --version               Print the current YottaDB version details.
  -[no]w              --[no]warnings          Allow or suppress error and warning output. The default is to allow, i.e. --warnings.

### Test 2: correct error output for invalid options prefixed with 'no'
# Test --nooption invalid option [$ydb_dist/yottadb --nooption]:
%YDB-E-CLIERR, Unrecognized option : NOOPTION
# Test --nothing invalid option [$ydb_dist/yottadb --nothing]:
%YDB-E-CLIERR, Unrecognized option : NOTHING
# Test valid negatable option --nowarnings still works [$ydb_dist/yottadb --nowarnings -run ydb1102]:
PASS

### Test 3: '--' syntax for existing options
## It is enough for the following commands to not fail to test the YDB#1102 changes,
## since these are CLI parser-only changes and it is not straightforward to validate the
## behavior of each option.
# Test --debug option [$ydb_dist/yottadb --debug -run ydb1102]:
PASS
# Test --direct_mode option [echo 'write "PASS",!' | $ydb_dist/yottadb --direct]:

YDB>
PASS

YDB>
# Test --dynamic_literals option [$ydb_dist/yottadb --dynamic_literals -run ydb1102]:
PASS
# Test --embed_source option [$ydb_dist/yottadb --embed_source -run ydb1102]:
PASS
# Test --ignore option [$ydb_dist/yottadb --ignore -run ydb1102]:
PASS
# Test --inline_literals option [$ydb_dist/yottadb --inline_literals -run ydb1102]:
PASS
# Test --labels option [$ydb_dist/yottadb --labels=UPPER -run ydb1102]:
PASS
# Test --length option [$ydb_dist/yottadb --length=32 -run ydb1102]:
PASS
# Test --line_entry option [$ydb_dist/yottadb --line_entry -run ydb1102]:
PASS
# Test --list option [$ydb_dist/yottadb --list="ydb1102a.lis" -run ydb1102]:
PASS
ydb1102a.lis: cannot open `ydb1102a.lis' (No such file or directory)
# Test --machine_code option [$ydb_dist/yottadb --machine_code -run ydb1102]:
PASS
# Test --nameofrtn option, confirm specified object file [ydb1102a1.o] created [$ydb_dist/yottadb --nameofrtn="ydb1102a1.o" ydb1102.m]:
##TEST_AWKydb1102a1.o: ELF 64-bit LSB relocatable, .*
# Test --object option, confirm specified object file [ydb1102b1.o] created [$ydb_dist/yottadb --object="ydb1102b1.o" ydb1102.m]:
##TEST_AWKydb1102b1.o: ELF 64-bit LSB relocatable, .*
# Test --run option [$ydb_dist/yottadb --run ydb1102]:
PASS
# Test --space option [$ydb_dist/yottadb --list="ydb1102b.lis" --space=10 -run ydb1102]:
PASS
# Test --version option [$ydb_dist/yottadb --version]:
##TEST_AWKYottaDB release:         .*
##TEST_AWKUpstream base version:   .*
##TEST_AWKPlatform:                .*
##TEST_AWKBuild date/time:         .*
##TEST_AWKBuild commit SHA:        .*
# Test --warnings option [$ydb_dist/yottadb --warnings --run ydb1102]:
PASS

### Test 4: Abbreviated '-' syntax for existing options
## It is enough for the following commands to not fail to test the YDB#1102 changes,
## since these are CLI parser-only changes and it is not straightforward to validate the
## behavior of each option.
# Test -dy option [$ydb_dist/yottadb -dy -run ydb1102]:
PASS
# Test -e option [$ydb_dist/yottadb -e -run ydb1102]:
PASS
# Test -ig option [$ydb_dist/yottadb -ig -run ydb1102]:
PASS
# Test -in option [$ydb_dist/yottadb -in -run ydb1102]:
PASS
# Test -la option [$ydb_dist/yottadb -la=UPPER -run ydb1102]:
PASS
# Test -le option [$ydb_dist/yottadb -le=32 -run ydb1102]:
PASS
# Test -lin option [$ydb_dist/yottadb -lin -run ydb1102]:
PASS
# Test -lis option [$ydb_dist/yottadb -lis="ydb1102a.lis" -run ydb1102]:
PASS
ydb1102a.lis: cannot open `ydb1102a.lis' (No such file or directory)
# Test -m option [$ydb_dist/yottadb -m -run ydb1102]:
PASS
# Test -n option, confirm specified object file [ydb1102a2.o] created [$ydb_dist/yottadb -n="ydb1102a2.o" ydb1102.m]:
##TEST_AWKydb1102a2.o: ELF 64-bit LSB relocatable, .*
# Test -o option, confirm specified object file [ydb1102b2.o] created [$ydb_dist/yottadb -o="ydb1102b2.o" ydb1102.m]:
##TEST_AWKydb1102b2.o: ELF 64-bit LSB relocatable, .*
# Test -r option [$ydb_dist/yottadb -r ydb1102]:
PASS
# Test -s option [$ydb_dist/yottadb --list="ydb1102b.lis" -s=10 -run ydb1102]:
PASS
# Test -v option [$ydb_dist/yottadb -v]:
##TEST_AWKYottaDB release:         .*
##TEST_AWKUpstream base version:   .*
##TEST_AWKPlatform:                .*
##TEST_AWKBuild date/time:         .*
##TEST_AWKBuild commit SHA:        .*
# Test -w option [$ydb_dist/yottadb -w --run ydb1102]:
PASS

### Test 5: '--no' syntax for existing options
## It is enough for the following commands to not fail to test the YDB#1102 changes,
## since these are CLI parser-only changes and it is not straightforward to validate the
## behavior of each option.
# Test --nodynamic_literals option [$ydb_dist/yottadb --nodynamic_literals -run ydb1102]:
PASS
# Test --noembed_source option [$ydb_dist/yottadb --noembed_source -run ydb1102]:
PASS
# Test --noignore option [$ydb_dist/yottadb --noignore -run ydb1102]:
PASS
# Test --noinline_literals option [$ydb_dist/yottadb --noinline_literals -run ydb1102]:
PASS
# Test --noline_entry option [$ydb_dist/yottadb --noline_entry -run ydb1102]:
PASS
# Test --nolist option [$ydb_dist/yottadb --nolist -run ydb1102]:
PASS
# Test --noobject option, confirm no object file created [$ydb_dist/yottadb --noobject ydb1102.m]:
ydb1102.o: cannot open `ydb1102.o' (No such file or directory)
# Test --nowarnings option [$ydb_dist/yottadb --nowarnings --run ydb1102]:
PASS

### Test 6: '-no' syntax for existing options
## It is enough for the following commands to not fail to test the YDB#1102 changes,
## since these are CLI parser-only changes and it is not straightforward to validate the
## behavior of each option.
# Test -nody option [$ydb_dist/yottadb -nody -run ydb1102]:
PASS
# Test -noe option [$ydb_dist/yottadb -noe -run ydb1102]:
PASS
# Test -noig option [$ydb_dist/yottadb -noig -run ydb1102]:
PASS
# Test -noin option [$ydb_dist/yottadb -noin -run ydb1102]:
PASS
# Test -nolin option [$ydb_dist/yottadb -nolin -run ydb1102]:
PASS
# Test -nolis option [$ydb_dist/yottadb -nolis -run ydb1102]:
PASS
# Test -noo option, confirm no object file created [$ydb_dist/yottadb -noo ydb1102.m]:
ydb1102.o: cannot open `ydb1102.o' (No such file or directory)
# Test -now option [$ydb_dist/yottadb -now --run ydb1102]:
PASS
### Test 7: '--' syntax for MUPIP
## It is enough for the following commands to not fail to test the YDB#1102 changes,
## since these are CLI parser-only changes and it is not straightforward to validate the
## behavior of each option.
%GDE-I-GDUSEDEFS, Using defaults for Global Directory 
	##TEST_PATH##/mumps.gld
%GDE-I-VERIFY, Verification OK

%GDE-I-GDCREATE, Creating Global Directory file 
	##TEST_PATH##/mumps.gld
# Test [$ydb_dist/mupip create --region=DEFAULT]:
%YDB-I-DBFILECREATED, Database file ##TEST_PATH##/mumps.dat created
# Test [$ydb_dist/mupip set --key_size=956 --region=DEFAULT]:
Database file ##TEST_PATH##/mumps.dat now has maximum key size 956
# Test [$ydb_dist/mupip reorg --upgrade --region=DEFAULT]:
You must have a backup before you proceed!!
An abnormal termination may damage the database files during the operation !!
		Are you ready to continue the operation [y/n] ? 
Region DEFAULT : is ineligible for MUPIP REORG -UPGRADE to V7m. ##TEST_PATH##/mumps.dat is currently V7.
%YDB-E-MUNOFINISH, MUPIP unable to finish all requested actions
# Test [$ydb_dist/mupip integ --block=0 --brief]:

Block:Offset Level
%YDB-E-DBRBNLBMN,         Nature: #DANGER***
               0:0     FF  Root block number is a local bit map number

Total error count from integ:		1.

Type           Blocks         Records          % Used      Adjacent

Directory           0               0           0.000            NA
Index               0               0           0.000             0
Data                0               0           0.000             0
Total               0               0              NA             0
%YDB-E-INTEGERRS, Database integrity errors

### Test 8: '--' syntax for DSE
## It is enough for the following commands to not fail to test the YDB#1102 changes,
## since these are CLI parser-only changes and it is not straightforward to validate the
## behavior of each option.
# Test [$ydb_dist/dse change --fileheader --blk_size=1024]:

File  	##TEST_PATH##/mumps.dat
Region	DEFAULT

# Test [$ydb_dist/dse add --block=0 --data="new data" --key="^x" --record=1]:

File  	##TEST_PATH##/mumps.dat
Region	DEFAULT

%YDB-E-CANTBITMAP, Can't perform this operation on a bit map (block at a 200 hexadecimal boundary)
# Test [$ydb_dist/dse all --buffer_flush]:

File  	##TEST_PATH##/mumps.dat
Region	DEFAULT

# Test [$ydb_dist/dse dump --block=0 --header]:

File  	##TEST_PATH##/mumps.dat
Region	DEFAULT


Block 0  Size 90  Level -1  TN 0 V7   Master Status: Free Space


### Test 9: '--' syntax for LKE
## It is enough for the following commands to not fail to test the YDB#1102 changes,
## since these are CLI parser-only changes and it is not straightforward to validate the
## behavior of each option.
# Test [$ydb_dist/lke show --region=DEFAULT]:
%YDB-I-LOCKSPACEINFO, Region: DEFAULT: processes on queue: 0/880; LOCK slots in use: 0/597; SUBSCRIPT slot bytes in use: 0/28072
%YDB-I-NOLOCKMATCH, No matching locks were found in DEFAULT
%YDB-I-LOCKSPACEUSE, Estimated free lock space: 100% of 220 pages
# Test [$ydb_dist/lke clnup --integ]:
# Test [$ydb_dist/lke clear --all]:
%YDB-I-NOLOCKMATCH, No matching locks were found in DEFAULT

### Test 10: MUMPS '--run' syntax behaves the same as '-run' in various edge cases
# Test [$ydb_dist/yottadb -run cmd]:
$ZCMDLINE=""
# Test [$ydb_dist/yottadb --run cmd]:
$ZCMDLINE=""
# Test [$ydb_dist/yottadb - run cmd]:
$ZCMDLINE=""
# Test [$ydb_dist/yottadb -- run cmd]:
$ZCMDLINE=""
# Test [$ydb_dist/yottadb - run cmd abc]:
$ZCMDLINE="abc"
# Test [$ydb_dist/yottadb -- run cmd abc]:
$ZCMDLINE="abc"
# Test [$ydb_dist/yottadb - - run cmd abc]:
$ZCMDLINE="abc"
# Test [$ydb_dist/yottadb -  - run cmd abc]:
$ZCMDLINE="abc"
# Test [$ydb_dist/yottadb - -run cmd abc]:
%YDB-E-CLIERR, Qualifier string missing -
# Test [$ydb_dist/yottadb -  -run cmd abc]:
%YDB-E-CLIERR, Qualifier string missing -
# Test [$ydb_dist/yottadb -   -run cmd abc]:
%YDB-E-CLIERR, Qualifier string missing -
