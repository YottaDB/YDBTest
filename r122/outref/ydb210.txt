RANDOM SETTING: 
##TEST_AWK# Tests will be run (within the DBs original terminal|after closing the DBs original terminal)

RUNNING NULLCOLLtest.csh IN A NEW TERMINAL
----------------------------------------------------------
# Shut down source server and set regions to different NULL Collation
Database file ##TEST_PATH##/mumps.dat is now using GT.M null collation      
Database file ##TEST_PATH##/a.dat is now using M standard null collation

# Restart source server (expecting NULLCOLLDIFF error in source server log)
%YDB-E-NULLCOLLDIFF, Null collation order must be the same for all regions

# Shut down source server and set regions back to the same NULL Collation
Database file ##TEST_PATH##/mumps.dat is now using M standard null collation
Database file ##TEST_PATH##/a.dat is now using M standard null collation

# Restart source server (expecting no error)

# Shutdown the DB

RUNNING REPLOFFJNLONtest.csh IN A NEW TERMINAL
----------------------------------------------------------
# Shut down source server and turn replication off in AREG
# (Both regions should have had journaling and replication on initially)
%YDB-I-JNLSTATE, Journaling state for region AREG is now ON
%YDB-I-REPLSTATE, Replication state for region AREG is now OFF

# Restart source server (expecting REPLOFFJNLON error in source server log)
%YDB-E-REPLOFFJNLON, Replication state for database file ##TEST_PATH##/a.dat is OFF but journaling state is enabled

# Shut down source server and turn replication back on in AREG
%YDB-I-JNLSTATE, Journaling state for region AREG is now ON
%YDB-I-REPLSTATE, Replication state for region AREG is now ON

# Restart source server (expecting no error)

# Shutdown the DB

RUNNING REPLINSTNOHISTtest.csh IN A NEW TERMINAL
----------------------------------------------------------
# Start INST1 INST2 connection
==Executing MULTISITE_REPLIC 'START INST1 INST2'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

# Update the DB
==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==

# Shutdown INST1 INST2 connection and recreate the instance file in INST1
==Executing MULTISITE_REPLIC 'STOPSRC INST1 INST2'==
==Executing MULTISITE_REPLIC 'STOPRCV INST1 INST2'==

# Start INST1 INST3 connection (expecting RCVR start to fail with REPLINSTNOHIST error in source server log)
==Executing MULTISITE_REPLIC 'STARTSRC INST1 INST3'==
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST3'==

# INST1 INST2 source server log errors:
# INST1 INST3 source server log errors:
%YDB-E-REPLINSTNOHIST, History information for seqno [0x0] not found in replication instance file ##TEST_PATH##/mumps.repl

# Wait for the INST1 INST3 reciever to die

# Shutdown INST3 passive source server

# Stop INST1 INST3 source server
==Executing MULTISITE_REPLIC 'STOPSRC INST1 INST3'==

# Check the DB

RUNNING SECNOTSUPPLEMENTARYtest.csh IN A NEW TERMINAL
----------------------------------------------------------
# Generate INST1 INST2 instance files (supplementary and non-supplementary respectively)

# Start INST1 server 
==Executing MULTISITE_REPLIC 'STARTSRC INST1 INST2'==

# Start the INST2 server (expecting SECSUPPLEMENTARY error in source server log)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2'==


# Errors in source server log:
%YDB-E-SECNOTSUPPLEMENTARY, INSTANCE1 is a Supplementary Instance and so cannot act as a source to non-Supplementary Instance INSTANCE2 

# Stop INST2 server
==Executing MULTISITE_REPLIC 'STOPRCV INST1 INST2'==

# Wait for INST2 reciever server to die
