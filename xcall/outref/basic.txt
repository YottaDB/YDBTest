
YDB>
Do ^mathtst

Doing SQRT for 1
%YDB-I-DLLNORTN, Failed to look up the location of the symbol math_hello
##TEST_AWK%.*
SQRT Value = 1.00000000000000

SQRT of 1 = 1.00000000000000

Doing EXP for 1
EXP Value = 2.71828182845905

EXP of 1 = 2.71828182845905

Doing natural LOG for 1
LOGNAT Value = 0.000000000000000

Natural LOG of 1 = 0.000000000000000

Doing LOGB10 for 1
LOGB10 Value = 0.000000000000000

LOGB10 of 1 = 0.000000000000000

Doing LOGB10LongName for 1
LOGB10 Value inside function logb10forrealbignamesupto31= 0.000000000000000

LOGB10Longname of 1 = 0.000000000000000

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk1
SQRT Value = 1.00000000000000

SQRT of 1 = 1.00000000000000

Doing SQRT for 2
SQRT Value = 1.41421356237310

SQRT of 2 = 1.41421356237310

Doing EXP for 2
EXP Value = 7.38905609893065

EXP of 2 = 7.38905609893065

Doing natural LOG for 2
LOGNAT Value = 0.693147180559945

Natural LOG of 2 = 0.693147180559945

Doing LOGB10 for 2
LOGB10 Value = 0.301029995663981

LOGB10 of 2 = 0.301029995663981

Doing LOGB10LongName for 2
LOGB10 Value inside function logb10forrealbignamesupto31= 0.301029995663981

LOGB10Longname of 2 = 0.301029995663981

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk2
SQRT Value = 1.41421356237310

SQRT of 2 = 1.41421356237310

Doing SQRT for 3
SQRT Value = 1.73205080756888

SQRT of 3 = 1.73205080756888

Doing EXP for 3
EXP Value = 20.08553692318767

EXP of 3 = 20.08553692318767

Doing natural LOG for 3
LOGNAT Value = 1.098612288668110

Natural LOG of 3 = 1.098612288668110

Doing LOGB10 for 3
LOGB10 Value = 0.477121254719662

LOGB10 of 3 = 0.477121254719662

Doing LOGB10LongName for 3
LOGB10 Value inside function logb10forrealbignamesupto31= 0.477121254719662

LOGB10Longname of 3 = 0.477121254719662

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk3
SQRT Value = 1.73205080756888

SQRT of 3 = 1.73205080756888

Doing SQRT for 4
SQRT Value = 2.00000000000000

SQRT of 4 = 2.00000000000000

Doing EXP for 4
EXP Value = 54.59815003314424

EXP of 4 = 54.59815003314424

Doing natural LOG for 4
LOGNAT Value = 1.386294361119891

Natural LOG of 4 = 1.386294361119891

Doing LOGB10 for 4
LOGB10 Value = 0.602059991327962

LOGB10 of 4 = 0.602059991327962

Doing LOGB10LongName for 4
LOGB10 Value inside function logb10forrealbignamesupto31= 0.602059991327962

LOGB10Longname of 4 = 0.602059991327962

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk4
SQRT Value = 2.00000000000000

SQRT of 4 = 2.00000000000000

Doing SQRT for 5
SQRT Value = 2.23606797749979

SQRT of 5 = 2.23606797749979

Doing EXP for 5
EXP Value = 148.41315910257660

EXP of 5 = 148.41315910257660

Doing natural LOG for 5
LOGNAT Value = 1.609437912434100

Natural LOG of 5 = 1.609437912434100

Doing LOGB10 for 5
LOGB10 Value = 0.698970004336019

LOGB10 of 5 = 0.698970004336019

Doing LOGB10LongName for 5
LOGB10 Value inside function logb10forrealbignamesupto31= 0.698970004336019

LOGB10Longname of 5 = 0.698970004336019

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk5
SQRT Value = 2.23606797749979

SQRT of 5 = 2.23606797749979

Doing LOGB10 for 1
LOGB10 Value = 0.000000000000000

LOGB10 of 1 = 0.000000000000000

Doing LOGB10LongName for 1
LOGB10 Value inside function logb10forrealbignamesupto31= 0.000000000000000

LOGB10Longname of 1 = 0.000000000000000

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk1
SQRT Value = 1.00000000000000

SQRT of 1 = 1.00000000000000

Doing LOGB10 for 2
LOGB10 Value = 0.301029995663981

LOGB10 of 2 = 0.301029995663981

Doing LOGB10LongName for 2
LOGB10 Value inside function logb10forrealbignamesupto31= 0.301029995663981

LOGB10Longname of 2 = 0.301029995663981

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk2
SQRT Value = 1.41421356237310

SQRT of 2 = 1.41421356237310

Doing LOGB10 for 3
LOGB10 Value = 0.477121254719662

LOGB10 of 3 = 0.477121254719662

Doing LOGB10LongName for 3
LOGB10 Value inside function logb10forrealbignamesupto31= 0.477121254719662

LOGB10Longname of 3 = 0.477121254719662

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk3
SQRT Value = 1.73205080756888

SQRT of 3 = 1.73205080756888

Doing LOGB10 for 4
LOGB10 Value = 0.602059991327962

LOGB10 of 4 = 0.602059991327962

Doing LOGB10LongName for 4
LOGB10 Value inside function logb10forrealbignamesupto31= 0.602059991327962

LOGB10Longname of 4 = 0.602059991327962

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk4
SQRT Value = 2.00000000000000

SQRT of 4 = 2.00000000000000

Doing LOGB10 for 5
LOGB10 Value = 0.698970004336019

LOGB10 of 5 = 0.698970004336019

Doing LOGB10LongName for 5
LOGB10 Value inside function logb10forrealbignamesupto31= 0.698970004336019

LOGB10Longname of 5 = 0.698970004336019

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk5
SQRT Value = 2.23606797749979

SQRT of 5 = 2.23606797749979

Doing natural LOG for 1
LOGNAT Value = 0.000000000000000

Natural LOG of 1 = 0.000000000000000

Doing LOGB10 for 1
LOGB10 Value = 0.000000000000000

LOGB10 of 1 = 0.000000000000000

Doing LOGB10LongName for 1
LOGB10 Value inside function logb10forrealbignamesupto31= 0.000000000000000

LOGB10Longname of 1 = 0.000000000000000

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk1
SQRT Value = 1.00000000000000

SQRT of 1 = 1.00000000000000

Doing natural LOG for 2
LOGNAT Value = 0.693147180559945

Natural LOG of 2 = 0.693147180559945

Doing LOGB10 for 2
LOGB10 Value = 0.301029995663981

LOGB10 of 2 = 0.301029995663981

Doing LOGB10LongName for 2
LOGB10 Value inside function logb10forrealbignamesupto31= 0.301029995663981

LOGB10Longname of 2 = 0.301029995663981

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk2
SQRT Value = 1.41421356237310

SQRT of 2 = 1.41421356237310

Doing natural LOG for 3
LOGNAT Value = 1.098612288668110

Natural LOG of 3 = 1.098612288668110

Doing LOGB10 for 3
LOGB10 Value = 0.477121254719662

LOGB10 of 3 = 0.477121254719662

Doing LOGB10LongName for 3
LOGB10 Value inside function logb10forrealbignamesupto31= 0.477121254719662

LOGB10Longname of 3 = 0.477121254719662

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk3
SQRT Value = 1.73205080756888

SQRT of 3 = 1.73205080756888

Doing natural LOG for 4
LOGNAT Value = 1.386294361119891

Natural LOG of 4 = 1.386294361119891

Doing LOGB10 for 4
LOGB10 Value = 0.602059991327962

LOGB10 of 4 = 0.602059991327962

Doing LOGB10LongName for 4
LOGB10 Value inside function logb10forrealbignamesupto31= 0.602059991327962

LOGB10Longname of 4 = 0.602059991327962

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk4
SQRT Value = 2.00000000000000

SQRT of 4 = 2.00000000000000

Doing natural LOG for 5
LOGNAT Value = 1.609437912434100

Natural LOG of 5 = 1.609437912434100

Doing LOGB10 for 5
LOGB10 Value = 0.698970004336019

LOGB10 of 5 = 0.698970004336019

Doing LOGB10LongName for 5
LOGB10 Value inside function logb10forrealbignamesupto31= 0.698970004336019

LOGB10Longname of 5 = 0.698970004336019

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk5
SQRT Value = 2.23606797749979

SQRT of 5 = 2.23606797749979

Doing EXP for 1
EXP Value = 2.71828182845905

EXP of 1 = 2.71828182845905

Doing natural LOG for 1
LOGNAT Value = 0.000000000000000

Natural LOG of 1 = 0.000000000000000

Doing LOGB10 for 1
LOGB10 Value = 0.000000000000000

LOGB10 of 1 = 0.000000000000000

Doing LOGB10LongName for 1
LOGB10 Value inside function logb10forrealbignamesupto31= 0.000000000000000

LOGB10Longname of 1 = 0.000000000000000

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk1
SQRT Value = 1.00000000000000

SQRT of 1 = 1.00000000000000

Doing EXP for 2
EXP Value = 7.38905609893065

EXP of 2 = 7.38905609893065

Doing natural LOG for 2
LOGNAT Value = 0.693147180559945

Natural LOG of 2 = 0.693147180559945

Doing LOGB10 for 2
LOGB10 Value = 0.301029995663981

LOGB10 of 2 = 0.301029995663981

Doing LOGB10LongName for 2
LOGB10 Value inside function logb10forrealbignamesupto31= 0.301029995663981

LOGB10Longname of 2 = 0.301029995663981

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk2
SQRT Value = 1.41421356237310

SQRT of 2 = 1.41421356237310

Doing EXP for 3
EXP Value = 20.08553692318767

EXP of 3 = 20.08553692318767

Doing natural LOG for 3
LOGNAT Value = 1.098612288668110

Natural LOG of 3 = 1.098612288668110

Doing LOGB10 for 3
LOGB10 Value = 0.477121254719662

LOGB10 of 3 = 0.477121254719662

Doing LOGB10LongName for 3
LOGB10 Value inside function logb10forrealbignamesupto31= 0.477121254719662

LOGB10Longname of 3 = 0.477121254719662

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk3
SQRT Value = 1.73205080756888

SQRT of 3 = 1.73205080756888

Doing EXP for 4
EXP Value = 54.59815003314424

EXP of 4 = 54.59815003314424

Doing natural LOG for 4
LOGNAT Value = 1.386294361119891

Natural LOG of 4 = 1.386294361119891

Doing LOGB10 for 4
LOGB10 Value = 0.602059991327962

LOGB10 of 4 = 0.602059991327962

Doing LOGB10LongName for 4
LOGB10 Value inside function logb10forrealbignamesupto31= 0.602059991327962

LOGB10Longname of 4 = 0.602059991327962

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk4
SQRT Value = 2.00000000000000

SQRT of 4 = 2.00000000000000

Doing EXP for 5
EXP Value = 148.41315910257660

EXP of 5 = 148.41315910257660

Doing natural LOG for 5
LOGNAT Value = 1.609437912434100

Natural LOG of 5 = 1.609437912434100

Doing LOGB10 for 5
LOGB10 Value = 0.698970004336019

LOGB10 of 5 = 0.698970004336019

Doing LOGB10LongName for 5
LOGB10 Value inside function logb10forrealbignamesupto31= 0.698970004336019

LOGB10Longname of 5 = 0.698970004336019

Doing SQRT under label SQRTLONG calling ref:xsqrtlonglabelforsqaurerootchk5
SQRT Value = 2.23606797749979

SQRT of 5 = 2.23606797749979

YDB>
cleanup routine of shared lib called

YDB>
Do ^xcfcn
gtm_fcn_gtm_long: returning 12345
##SUSPEND_OUTPUT 64BIT_GTM
gtm_fcn_gtm_ulong: returning 4294967295
##ALLOW_OUTPUT 64BIT_GTM
##SUSPEND_OUTPUT 32BIT_GTM
gtm_fcn_gtm_ulong: returning 18446744073709551615
##ALLOW_OUTPUT 32BIT_GTM
gtm_fcn_gtm_int: returning 12345
gtm_fcn_gtm_uint: returning 4294967295
gtm_fcn_gtm_status1: returning 0
gtm_fcn_gtm_status2: returning -1
%YDB-E-ZCSTATUSRET, External call returned error status
Value from fcnlong: "12345"
##SUSPEND_OUTPUT 64BIT_GTM
Value from fcnulong: "4294967295"
##ALLOW_OUTPUT 64BIT_GTM
##SUSPEND_OUTPUT 32BIT_GTM
Value from fcnulong: "18446744073709551615"
##ALLOW_OUTPUT 32BIT_GTM
Value from fcnint: "12345"
Value from fcnuint: "4294967295"
Value from fcnstat1: "0"
Value from fcnstat2: "statval2 is undefined"
gtm_void
%YDB-E-XCVOIDRET, Attempt to return a value from function gtm_void, which is declared void in external call table gtmxc_fcn.tab

YDB>

YDB>
Do ^xcfcn (old type names)
xc_fcn_xc_long: returning 12345
##SUSPEND_OUTPUT 64BIT_GTM
xc_fcn_xc_ulong: returning 4294967295
##ALLOW_OUTPUT 64BIT_GTM
##SUSPEND_OUTPUT 32BIT_GTM
xc_fcn_xc_ulong: returning 18446744073709551615
##ALLOW_OUTPUT 32BIT_GTM
xc_fcn_xc_int: returning 12345
xc_fcn_xc_uint: returning 4294967295
xc_fcn_xc_status1: returning 0
xc_fcn_xc_status2: returning -1
%YDB-E-ZCSTATUSRET, External call returned error status
Value from fcnlong: "12345"
##SUSPEND_OUTPUT 64BIT_GTM
Value from fcnulong: "4294967295"
##ALLOW_OUTPUT 64BIT_GTM
##SUSPEND_OUTPUT 32BIT_GTM
Value from fcnulong: "18446744073709551615"
##ALLOW_OUTPUT 32BIT_GTM
Value from fcnint: "12345"
Value from fcnuint: "4294967295"
Value from fcnstat1: "0"
Value from fcnstat2: "statval2 is undefined"
xc_void
%YDB-E-XCVOIDRET, Attempt to return a value from function xc_void, which is declared void in external call table gtmxc_fcn.tab

YDB>

YDB>
Do ^xcvoidc
gtm_void^caret

##SUSPEND_OUTPUT 64BIT_GTM
passing 12345 to inlong
gtm_inlong^caret: sizeof(arg_long) = 4, arg_long = 12345

passing 67890 to inlongp
gtm_inlongp^caret: sizeof(arg_longp) = 4, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
gtm_inulong^caret: sizeof(arg_ulong) = 4, arg_ulong = 4294967295

passing 4294967295 to inulongp
gtm_inulongp^caret: sizeof(arg_ulongp) = 4, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
gtm_infloatp^caret: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
gtm_indoublep^caret: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
gtm_incharp^caret: sizeof(arg_charp) = 4, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
gtm_incharpp^caret: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
gtm_instringp^caret: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing 12345 to inint
gtm_inint^caret: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to inintp
gtm_inintp^caret: sizeof(arg_intp) = 4, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
gtm_inuint^caret: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
gtm_inuintp^caret: sizeof(arg_uintp) = 4, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidc (old type names)
xc_void^caret

passing 12345 to inlong
xc_inlong^caret: sizeof(arg_long) = 4, arg_long = 12345

passing 67890 to inlongp
xc_inlongp^caret: sizeof(arg_longp) = 4, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
xc_inulong^caret: sizeof(arg_ulong) = 4, arg_ulong = 4294967295

passing 4294967295 to inulongp
xc_inulongp^caret: sizeof(arg_ulongp) = 4, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
xc_infloatp^caret: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
xc_indoublep^caret: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
xc_incharp^caret: sizeof(arg_charp) = 4, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
xc_incharpp^caret: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
xc_instringp^caret: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing 12345 to inint
xc_inint^caret: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to inintp
xc_inintp^caret: sizeof(arg_intp) = 4, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
xc_inuint^caret: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
xc_inuintp^caret: sizeof(arg_uintp) = 4, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidi
gtm_void

passing 12345 to inlong
gtm_inlong: sizeof(arg_long) = 4, arg_long = 12345

passing 67890 to inlongp
gtm_inlongp: sizeof(arg_longp) = 4, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
gtm_inulong: sizeof(arg_ulong) = 4, arg_ulong = 4294967295

passing 4294967295 to inulongp
gtm_inulongp: sizeof(arg_ulongp) = 4, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
gtm_infloatp: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
gtm_indoublep: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
gtm_incharp: sizeof(arg_charp) = 4, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
gtm_incharpp: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
gtm_instringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing -12345 to inint
gtm_inint: sizeof(arg_int) = 4, arg_int = -12345

passing 2147483647 to inintp
gtm_inintp: sizeof(arg_intp) = 4, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
gtm_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
gtm_inuintp: sizeof(arg_uintp) = 4, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidi (old type names)
xc_void

passing 12345 to inlong
xc_inlong: sizeof(arg_long) = 4, arg_long = 12345

passing 67890 to inlongp
xc_inlongp: sizeof(arg_longp) = 4, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
xc_inulong: sizeof(arg_ulong) = 4, arg_ulong = 4294967295

passing 4294967295 to inulongp
xc_inulongp: sizeof(arg_ulongp) = 4, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
xc_infloatp: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
xc_indoublep: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
xc_incharp: sizeof(arg_charp) = 4, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
xc_incharpp: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
xc_instringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing -12345 to inint
xc_inint: sizeof(arg_int) = 4, arg_int = -12345

passing 2147483647 to inintp
xc_inintp: sizeof(arg_intp) = 4, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
xc_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
xc_inuintp: sizeof(arg_uintp) = 4, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidio
gtm_void

passing 67890 to iolongp
gtm_iolongp: sizeof(arg_longp) = 4, *arg_longp = 67890
		modified return value = -12345
  value returned from iolongp = -12345

passing 1 to ioulongp
gtm_ioulongp: sizeof(arg_ulongp) = 4, *arg_ulongp = 1
		modified return value = 4294967295
  value returned from ioulongp = 4294967295

passing 123.349 to iofloatp
gtm_iofloatp: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
		modified return value = -123.349
  value returned from iofloatp = -123.349

passing 654.321 to iodoublep
gtm_iodoublep: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
		modified return value = -654.321
  value returned from iodoublep = -654.321

passing "C-style string" to iocharpp
gtm_iocharpp: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
		modified return value = 'C-style returned string'
  value returned from iocharpp = "C-style returned string"

passing "String structure" to iostringp return with address copy
gtm_iostringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string structure'
  value returned from iostringp = "modified string structure"

passing "String structure" to iostringp return with memcpy
gtm_iostringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string'
  value returned from iostringp = "modified string"

passing 2147483647 to iointp
gtm_iointp: sizeof(arg_intp) = 4, *arg_intp = 2147483647
		modified return value = -12345
  value returned from iointp = -12345

passing 1 to iouintp
gtm_iouintp: sizeof(arg_uintp) = 4, *arg_uintp = 1
		modified return value = 4294967295
  value returned from iouintp = 4294967295


YDB>

YDB>
Do ^xcvoidio (old type names)
xc_void

passing 67890 to iolongp
xc_iolongp: sizeof(arg_longp) = 4, *arg_longp = 67890
		modified return value = -12345
  value returned from iolongp = -12345

passing 1 to ioulongp
xc_ioulongp: sizeof(arg_ulongp) = 4, *arg_ulongp = 1
		modified return value = 4294967295
  value returned from ioulongp = 4294967295

passing 123.349 to iofloatp
xc_iofloatp: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
		modified return value = -123.349
  value returned from iofloatp = -123.349

passing 654.321 to iodoublep
xc_iodoublep: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
		modified return value = -654.321
  value returned from iodoublep = -654.321

passing "C-style string" to iocharpp
xc_iocharpp: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
		modified return value = 'C-style returned string'
  value returned from iocharpp = "C-style returned string"

passing "String structure" to iostringp return with address copy
xc_iostringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string structure'
  value returned from iostringp = "modified string structure"

passing "String structure" to iostringp return with memcpy
xc_iostringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string'
  value returned from iostringp = "modified string"

passing 2147483647 to iointp
xc_iointp: sizeof(arg_intp) = 4, *arg_intp = 2147483647
		modified return value = -12345
  value returned from iointp = -12345

passing 1 to iouintp
xc_iouintp: sizeof(arg_uintp) = 4, *arg_uintp = 1
		modified return value = 4294967295
  value returned from iouintp = 4294967295


YDB>

YDB>
Do ^xcvoido
gtm_void

passing 67890 to outlongp
gtm_outlongp: sizeof(arg_longp) = 4
		modified return value = -12345
  value returned from outlongp = -12345

passing 4294967295 to outulongp
gtm_outulongp: sizeof(arg_ulongp) = 4
		modified return value = 4294967295
  value returned from outulongp = 4294967295

passing 123.349 to outfloatp
gtm_outfloatp: sizeof(arg_floatp) = 4
		modified return value = -123.349
  value returned from outfloatp = -123.349

passing 654.321 to outdoublep
gtm_outdoublep: sizeof(arg_doublep) = 4
		modified return value = -654.321
  value returned from outdoublep = -654.321

passing "C-style string" to outcharpp
		modified return value = 'C-style returned string'
  value returned from outcharpp = "C-style returned string"

getting returned value outstringp (address copy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

getting returned value outstringp (memcpy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

passing 67890 to outintp
gtm_outintp: sizeof(arg_intp) = 4
		modified return value = -12345
  value returned from outintp = -12345

passing 4294967295 to outuintp
gtm_outuintp: sizeof(arg_uintp) = 4
		modified return value = 4294967295
  value returned from outuintp = 4294967295


YDB>

YDB>
Do ^xcvoido (old type names)
xc_void

passing 67890 to outlongp
xc_outlongp: sizeof(arg_longp) = 4
		modified return value = -12345
  value returned from outlongp = -12345

passing 4294967295 to outulongp
xc_outulongp: sizeof(arg_ulongp) = 4
		modified return value = 4294967295
  value returned from outulongp = 4294967295

passing 123.349 to outfloatp
xc_outfloatp: sizeof(arg_floatp) = 4
		modified return value = -123.349
  value returned from outfloatp = -123.349

passing 654.321 to outdoublep
xc_outdoublep: sizeof(arg_doublep) = 4
		modified return value = -654.321
  value returned from outdoublep = -654.321

passing "C-style string" to outcharpp
		modified return value = 'C-style returned string'
  value returned from outcharpp = "C-style returned string"

getting returned value outstringp (address copy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

getting returned value outstringp (memcpy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

passing 67890 to outintp
xc_outintp: sizeof(arg_intp) = 4
		modified return value = -12345
  value returned from outintp = -12345

passing 4294967295 to outuintp
xc_outuintp: sizeof(arg_uintp) = 4
		modified return value = 4294967295
  value returned from outuintp = 4294967295


YDB>

YDB>
Do ^xcvpki
gtm_void

passing 12345 to pk.inlong
pk.gtm_inlong: sizeof(arg_long) = 4, arg_long = 12345

passing 67890 to pk.inlongp
pk.gtm_inlongp: sizeof(arg_longp) = 4, *arg_longp = 67890
  value returned from pk.inlongp = 67890

passing 4294967295 to pk.inulong
pk.gtm_inulong: sizeof(arg_ulong) = 4, arg_ulong = 4294967295

passing 4294967295 to pk.inulongp
pk.gtm_inulongp: sizeof(arg_ulongp) = 4, *arg_ulongp = 4294967295
  value returned from pk.inulongp = 4294967295

passing 12345 to pk.inint
pk.gtm_inint: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to pk.inintp
pk.gtm_inintp: sizeof(arg_intp) = 4, *arg_intp = 2147483647
  value returned from pk.inintp = 2147483647

passing 4294967295 to pk.inuint
pk.gtm_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to pk.inuintp
pk.gtm_inuintp: sizeof(arg_uintp) = 4, *arg_uintp = 4294967295
  value returned from pk.inuintp = 4294967295

passing 123.349 to pk.infloatp
pk.gtm_infloatp: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
  value returned from pk.infloatp = 123.349

passing 654.321 to pk.indoublep
pk.gtm_indoublep: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
  value returned from pk.indoublep = 654.321

passing "c" to pk.incharp
pk.gtm_incharp: sizeof(arg_charp) = 4, *arg_charp = 'c'
  value returned from pk.incharp = "c"

passing "C-style string" to pk.incharpp
pk.gtm_incharpp: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
  value returned from pk.incharpp = "C-style string"

passing "String structure" to pk.instringp
pk.gtm_instringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from pk.instringp = "String structure"


YDB>

YDB>
Do ^xcvpki (old type names)
xc_void

passing 12345 to pk.inlong
pk.xc_inlong: sizeof(arg_long) = 4, arg_long = 12345

passing 67890 to pk.inlongp
pk.xc_inlongp: sizeof(arg_longp) = 4, *arg_longp = 67890
  value returned from pk.inlongp = 67890

passing 4294967295 to pk.inulong
pk.xc_inulong: sizeof(arg_ulong) = 4, arg_ulong = 4294967295

passing 4294967295 to pk.inulongp
pk.xc_inulongp: sizeof(arg_ulongp) = 4, *arg_ulongp = 4294967295
  value returned from pk.inulongp = 4294967295

passing 12345 to pk.inint
pk.xc_inint: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to pk.inintp
pk.xc_inintp: sizeof(arg_intp) = 4, *arg_intp = 2147483647
  value returned from pk.inintp = 2147483647

passing 4294967295 to pk.inuint
pk.xc_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to pk.inuintp
pk.xc_inuintp: sizeof(arg_uintp) = 4, *arg_uintp = 4294967295
  value returned from pk.inuintp = 4294967295

passing 123.349 to pk.infloatp
pk.xc_infloatp: sizeof(arg_floatp) = 4, *arg_floatp = 123.349
  value returned from pk.infloatp = 123.349

passing 654.321 to pk.indoublep
pk.xc_indoublep: sizeof(arg_doublep) = 4, *arg_doublep = 654.321
  value returned from pk.indoublep = 654.321

passing "c" to pk.incharp
pk.xc_incharp: sizeof(arg_charp) = 4, *arg_charp = 'c'
  value returned from pk.incharp = "c"

passing "C-style string" to pk.incharpp
pk.xc_incharpp: sizeof(arg_charpp) = 4, *arg_charpp = 'C-style string'
  value returned from pk.incharpp = "C-style string"

passing "String structure" to pk.instringp
pk.xc_instringp: sizeof(arg_stringp) = 4, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from pk.instringp = "String structure"


YDB>

YDB>
Do ^S000413 (multiple arguments)
Passing:

    12345
    67890
    4294967295
    4294967295
    12345
    2147483647
    4294967295
    4294967295
    123.349
    654.321
    "c"
    "C-style string"
    "String structure"
to inmult

xc_inmult: sizeof(arg_long) = 4,	arg_long = 12345
xc_inmult: sizeof(arg_longp) = 4,	*arg_longp = 67890
xc_inmult: sizeof(arg_ulong) = 4,	arg_ulong = 4294967295
xc_inmult: sizeof(arg_ulongp) = 4,	*arg_ulongp = 4294967295
xc_inmult: sizeof(arg_int) = 4,	arg_int = 12345
xc_inmult: sizeof(arg_intp) = 4,	*arg_intp = 2147483647
xc_inmult: sizeof(arg_uint) = 4,	arg_uint = 4294967295
xc_inmult: sizeof(arg_uintp) = 4,	*arg_uintp = 4294967295
xc_inmult: sizeof(arg_floatp) = 4,	*arg_floatp = 123.349
xc_inmult: sizeof(arg_doublep) = 4,	*arg_doublep = 654.321
xc_inmult: sizeof(arg_charp) = 4,	*arg_charp = 'c'
xc_inmult: sizeof(arg_charpp) = 4,	*arg_charpp = 'C-style string'
xc_inmult: sizeof(arg_stringp) = 4,	arg_stringp->length = 16
	*arg_stringp = 'String structure'


Values returned from inmult:

    12345
    67890
    4294967295
    4294967295
    12345
    2147483647
    4294967295
    4294967295
    123.349
    654.321
    "c"
    "C-style string"
    "String structure"

YDB>

YDB>
Do ^prealloc
sizeof(arg_prealloca) = 4
  value returned from prealloc = "New Message"

sizeof(arg_prealloca) = 4
Now length is : 32766
Passed
sizeof(arg_prealloca) = 4
Now length is : 65535
Passed
sizeof(arg_prealloca) = 4
Now length is : 74999
Passed
sizeof(arg_prealloca) = 4
Now length is : 1048575
Passed
sizeof(arg_prealloca) = 4
Now length is : 32766
Passed
sizeof(arg_prealloca) = 4
Now length is : 65535
Passed
sizeof(arg_prealloca) = 4
Now length is : 74999
Passed
sizeof(arg_prealloca) = 4
Now length is : 1048575
Passed
##ALLOW_OUTPUT 64BIT_GTM
##SUSPEND_OUTPUT 32BIT_GTM
passing 12345 to inlong
gtm_inlong^caret: sizeof(arg_long) = 8, arg_long = 12345

passing 67890 to inlongp
gtm_inlongp^caret: sizeof(arg_longp) = 8, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
gtm_inulong^caret: sizeof(arg_ulong) = 8, arg_ulong = 4294967295

passing 4294967295 to inulongp
gtm_inulongp^caret: sizeof(arg_ulongp) = 8, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
gtm_infloatp^caret: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
gtm_indoublep^caret: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
gtm_incharp^caret: sizeof(arg_charp) = 8, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
gtm_incharpp^caret: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
gtm_instringp^caret: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing 12345 to inint
gtm_inint^caret: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to inintp
gtm_inintp^caret: sizeof(arg_intp) = 8, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
gtm_inuint^caret: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
gtm_inuintp^caret: sizeof(arg_uintp) = 8, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidc (old type names)
xc_void^caret

passing 12345 to inlong
xc_inlong^caret: sizeof(arg_long) = 8, arg_long = 12345

passing 67890 to inlongp
xc_inlongp^caret: sizeof(arg_longp) = 8, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
xc_inulong^caret: sizeof(arg_ulong) = 8, arg_ulong = 4294967295

passing 4294967295 to inulongp
xc_inulongp^caret: sizeof(arg_ulongp) = 8, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
xc_infloatp^caret: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
xc_indoublep^caret: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
xc_incharp^caret: sizeof(arg_charp) = 8, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
xc_incharpp^caret: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
xc_instringp^caret: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing 12345 to inint
xc_inint^caret: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to inintp
xc_inintp^caret: sizeof(arg_intp) = 8, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
xc_inuint^caret: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
xc_inuintp^caret: sizeof(arg_uintp) = 8, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidi
gtm_void

passing 12345 to inlong
gtm_inlong: sizeof(arg_long) = 8, arg_long = 12345

passing 67890 to inlongp
gtm_inlongp: sizeof(arg_longp) = 8, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
gtm_inulong: sizeof(arg_ulong) = 8, arg_ulong = 4294967295

passing 4294967295 to inulongp
gtm_inulongp: sizeof(arg_ulongp) = 8, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
gtm_infloatp: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
gtm_indoublep: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
gtm_incharp: sizeof(arg_charp) = 8, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
gtm_incharpp: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
gtm_instringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing -12345 to inint
gtm_inint: sizeof(arg_int) = 4, arg_int = -12345

passing 2147483647 to inintp
gtm_inintp: sizeof(arg_intp) = 8, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
gtm_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
gtm_inuintp: sizeof(arg_uintp) = 8, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidi (old type names)
xc_void

passing 12345 to inlong
xc_inlong: sizeof(arg_long) = 8, arg_long = 12345

passing 67890 to inlongp
xc_inlongp: sizeof(arg_longp) = 8, *arg_longp = 67890
  value returned from inlongp = 67890

passing 4294967295 to inulong
xc_inulong: sizeof(arg_ulong) = 8, arg_ulong = 4294967295

passing 4294967295 to inulongp
xc_inulongp: sizeof(arg_ulongp) = 8, *arg_ulongp = 4294967295
  value returned from inulongp = 4294967295

passing 123.349 to infloatp
xc_infloatp: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
  value returned from infloatp = 123.349

passing 654.321 to indoublep
xc_indoublep: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
  value returned from indoublep = 654.321

passing "c" to incharp
xc_incharp: sizeof(arg_charp) = 8, *arg_charp = 'c'
  value returned from incharp = "c"

passing "C-style string" to incharpp
xc_incharpp: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
  value returned from incharpp = "C-style string"

passing "String structure" to instringp
xc_instringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from instringp = "String structure"

passing -12345 to inint
xc_inint: sizeof(arg_int) = 4, arg_int = -12345

passing 2147483647 to inintp
xc_inintp: sizeof(arg_intp) = 8, *arg_intp = 2147483647
  value returned from inintp = 2147483647

passing 4294967295 to inuint
xc_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to inuintp
xc_inuintp: sizeof(arg_uintp) = 8, *arg_uintp = 4294967295
  value returned from inuintp = 4294967295


YDB>

YDB>
Do ^xcvoidio
gtm_void

passing 67890 to iolongp
gtm_iolongp: sizeof(arg_longp) = 8, *arg_longp = 67890
		modified return value = -12345
  value returned from iolongp = -12345

passing 1 to ioulongp
gtm_ioulongp: sizeof(arg_ulongp) = 8, *arg_ulongp = 1
		modified return value = 18446744073709551615
  value returned from ioulongp = 18446744073709551615

passing 123.349 to iofloatp
gtm_iofloatp: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
		modified return value = -123.349
  value returned from iofloatp = -123.349

passing 654.321 to iodoublep
gtm_iodoublep: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
		modified return value = -654.321
  value returned from iodoublep = -654.321

passing "C-style string" to iocharpp
gtm_iocharpp: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
		modified return value = 'C-style returned string'
  value returned from iocharpp = "C-style returned string"

passing "String structure" to iostringp return with address copy
gtm_iostringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string structure'
  value returned from iostringp = "modified string structure"

passing "String structure" to iostringp return with memcpy
gtm_iostringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string'
  value returned from iostringp = "modified string"

passing 2147483647 to iointp
gtm_iointp: sizeof(arg_intp) = 8, *arg_intp = 2147483647
		modified return value = -12345
  value returned from iointp = -12345

passing 1 to iouintp
gtm_iouintp: sizeof(arg_uintp) = 8, *arg_uintp = 1
		modified return value = 4294967295
  value returned from iouintp = 4294967295


YDB>

YDB>
Do ^xcvoidio (old type names)
xc_void

passing 67890 to iolongp
xc_iolongp: sizeof(arg_longp) = 8, *arg_longp = 67890
		modified return value = -12345
  value returned from iolongp = -12345

passing 1 to ioulongp
xc_ioulongp: sizeof(arg_ulongp) = 8, *arg_ulongp = 1
		modified return value = 18446744073709551615
  value returned from ioulongp = 18446744073709551615

passing 123.349 to iofloatp
xc_iofloatp: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
		modified return value = -123.349
  value returned from iofloatp = -123.349

passing 654.321 to iodoublep
xc_iodoublep: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
		modified return value = -654.321
  value returned from iodoublep = -654.321

passing "C-style string" to iocharpp
xc_iocharpp: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
		modified return value = 'C-style returned string'
  value returned from iocharpp = "C-style returned string"

passing "String structure" to iostringp return with address copy
xc_iostringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string structure'
  value returned from iostringp = "modified string structure"

passing "String structure" to iostringp return with memcpy
xc_iostringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
		modified return value = 'modified string'
  value returned from iostringp = "modified string"

passing 2147483647 to iointp
xc_iointp: sizeof(arg_intp) = 8, *arg_intp = 2147483647
		modified return value = -12345
  value returned from iointp = -12345

passing 1 to iouintp
xc_iouintp: sizeof(arg_uintp) = 8, *arg_uintp = 1
		modified return value = 4294967295
  value returned from iouintp = 4294967295


YDB>

YDB>
Do ^xcvoido
gtm_void

passing 67890 to outlongp
gtm_outlongp: sizeof(arg_longp) = 8
		modified return value = -12345
  value returned from outlongp = -12345

passing 4294967295 to outulongp
gtm_outulongp: sizeof(arg_ulongp) = 8
		modified return value = 18446744073709551615
  value returned from outulongp = 18446744073709551615

passing 123.349 to outfloatp
gtm_outfloatp: sizeof(arg_floatp) = 8
		modified return value = -123.349
  value returned from outfloatp = -123.349

passing 654.321 to outdoublep
gtm_outdoublep: sizeof(arg_doublep) = 8
		modified return value = -654.321
  value returned from outdoublep = -654.321

passing "C-style string" to outcharpp
		modified return value = 'C-style returned string'
  value returned from outcharpp = "C-style returned string"

getting returned value outstringp (address copy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

getting returned value outstringp (memcpy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

passing 67890 to outintp
gtm_outintp: sizeof(arg_intp) = 8
		modified return value = -12345
  value returned from outintp = -12345

passing 4294967295 to outuintp
gtm_outuintp: sizeof(arg_uintp) = 8
		modified return value = 4294967295
  value returned from outuintp = 4294967295


YDB>

YDB>
Do ^xcvoido (old type names)
xc_void

passing 67890 to outlongp
xc_outlongp: sizeof(arg_longp) = 8
		modified return value = -12345
  value returned from outlongp = -12345

passing 4294967295 to outulongp
xc_outulongp: sizeof(arg_ulongp) = 8
		modified return value = 18446744073709551615
  value returned from outulongp = 18446744073709551615

passing 123.349 to outfloatp
xc_outfloatp: sizeof(arg_floatp) = 8
		modified return value = -123.349
  value returned from outfloatp = -123.349

passing 654.321 to outdoublep
xc_outdoublep: sizeof(arg_doublep) = 8
		modified return value = -654.321
  value returned from outdoublep = -654.321

passing "C-style string" to outcharpp
		modified return value = 'C-style returned string'
  value returned from outcharpp = "C-style returned string"

getting returned value outstringp (address copy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

getting returned value outstringp (memcpy)
  returning value = 'returned string structure'
    value returned from outstringp = "returned string structure"

passing 67890 to outintp
xc_outintp: sizeof(arg_intp) = 8
		modified return value = -12345
  value returned from outintp = -12345

passing 4294967295 to outuintp
xc_outuintp: sizeof(arg_uintp) = 8
		modified return value = 4294967295
  value returned from outuintp = 4294967295


YDB>

YDB>
Do ^xcvpki
gtm_void

passing 12345 to pk.inlong
pk.gtm_inlong: sizeof(arg_long) = 8, arg_long = 12345

passing 67890 to pk.inlongp
pk.gtm_inlongp: sizeof(arg_longp) = 8, *arg_longp = 67890
  value returned from pk.inlongp = 67890

passing 4294967295 to pk.inulong
pk.gtm_inulong: sizeof(arg_ulong) = 8, arg_ulong = 4294967295

passing 4294967295 to pk.inulongp
pk.gtm_inulongp: sizeof(arg_ulongp) = 8, *arg_ulongp = 4294967295
  value returned from pk.inulongp = 4294967295

passing 12345 to pk.inint
pk.gtm_inint: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to pk.inintp
pk.gtm_inintp: sizeof(arg_intp) = 8, *arg_intp = 2147483647
  value returned from pk.inintp = 2147483647

passing 4294967295 to pk.inuint
pk.gtm_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to pk.inuintp
pk.gtm_inuintp: sizeof(arg_uintp) = 8, *arg_uintp = 4294967295
  value returned from pk.inuintp = 4294967295

passing 123.349 to pk.infloatp
pk.gtm_infloatp: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
  value returned from pk.infloatp = 123.349

passing 654.321 to pk.indoublep
pk.gtm_indoublep: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
  value returned from pk.indoublep = 654.321

passing "c" to pk.incharp
pk.gtm_incharp: sizeof(arg_charp) = 8, *arg_charp = 'c'
  value returned from pk.incharp = "c"

passing "C-style string" to pk.incharpp
pk.gtm_incharpp: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
  value returned from pk.incharpp = "C-style string"

passing "String structure" to pk.instringp
pk.gtm_instringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from pk.instringp = "String structure"


YDB>

YDB>
Do ^xcvpki (old type names)
xc_void

passing 12345 to pk.inlong
pk.xc_inlong: sizeof(arg_long) = 8, arg_long = 12345

passing 67890 to pk.inlongp
pk.xc_inlongp: sizeof(arg_longp) = 8, *arg_longp = 67890
  value returned from pk.inlongp = 67890

passing 4294967295 to pk.inulong
pk.xc_inulong: sizeof(arg_ulong) = 8, arg_ulong = 4294967295

passing 4294967295 to pk.inulongp
pk.xc_inulongp: sizeof(arg_ulongp) = 8, *arg_ulongp = 4294967295
  value returned from pk.inulongp = 4294967295

passing 12345 to pk.inint
pk.xc_inint: sizeof(arg_int) = 4, arg_int = 12345

passing 2147483647 to pk.inintp
pk.xc_inintp: sizeof(arg_intp) = 8, *arg_intp = 2147483647
  value returned from pk.inintp = 2147483647

passing 4294967295 to pk.inuint
pk.xc_inuint: sizeof(arg_uint) = 4, arg_uint = 4294967295

passing 4294967295 to pk.inuintp
pk.xc_inuintp: sizeof(arg_uintp) = 8, *arg_uintp = 4294967295
  value returned from pk.inuintp = 4294967295

passing 123.349 to pk.infloatp
pk.xc_infloatp: sizeof(arg_floatp) = 8, *arg_floatp = 123.349
  value returned from pk.infloatp = 123.349

passing 654.321 to pk.indoublep
pk.xc_indoublep: sizeof(arg_doublep) = 8, *arg_doublep = 654.321
  value returned from pk.indoublep = 654.321

passing "c" to pk.incharp
pk.xc_incharp: sizeof(arg_charp) = 8, *arg_charp = 'c'
  value returned from pk.incharp = "c"

passing "C-style string" to pk.incharpp
pk.xc_incharpp: sizeof(arg_charpp) = 8, *arg_charpp = 'C-style string'
  value returned from pk.incharpp = "C-style string"

passing "String structure" to pk.instringp
pk.xc_instringp: sizeof(arg_stringp) = 8, arg_stringp->length = 16
	*arg_stringp = 'String structure'
  value returned from pk.instringp = "String structure"


YDB>

YDB>
Do ^S000413 (multiple arguments)
Passing:

    12345
    67890
    4294967295
    4294967295
    12345
    2147483647
    4294967295
    4294967295
    123.349
    654.321
    "c"
    "C-style string"
    "String structure"
to inmult

xc_inmult: sizeof(arg_long) = 8,	arg_long = 12345
xc_inmult: sizeof(arg_longp) = 8,	*arg_longp = 67890
xc_inmult: sizeof(arg_ulong) = 8,	arg_ulong = 4294967295
xc_inmult: sizeof(arg_ulongp) = 8,	*arg_ulongp = 4294967295
xc_inmult: sizeof(arg_int) = 4,	arg_int = 12345
xc_inmult: sizeof(arg_intp) = 8,	*arg_intp = 2147483647
xc_inmult: sizeof(arg_uint) = 4,	arg_uint = 4294967295
xc_inmult: sizeof(arg_uintp) = 8,	*arg_uintp = 4294967295
xc_inmult: sizeof(arg_floatp) = 8,	*arg_floatp = 123.349
xc_inmult: sizeof(arg_doublep) = 8,	*arg_doublep = 654.321
xc_inmult: sizeof(arg_charp) = 8,	*arg_charp = 'c'
xc_inmult: sizeof(arg_charpp) = 8,	*arg_charpp = 'C-style string'
xc_inmult: sizeof(arg_stringp) = 8,	arg_stringp->length = 16
	*arg_stringp = 'String structure'


Values returned from inmult:

    12345
    67890
    4294967295
    4294967295
    12345
    2147483647
    4294967295
    4294967295
    123.349
    654.321
    "c"
    "C-style string"
    "String structure"

YDB>

YDB>
Do ^prealloc
sizeof(arg_prealloca) = 8
  value returned from prealloc = "New Message"

sizeof(arg_prealloca) = 8
Now length is : 32766
Passed
sizeof(arg_prealloca) = 8
Now length is : 65535
Passed
sizeof(arg_prealloca) = 8
Now length is : 74999
Passed
sizeof(arg_prealloca) = 8
Now length is : 1048575
Passed
sizeof(arg_prealloca) = 8
Now length is : 32766
Passed
sizeof(arg_prealloca) = 8
Now length is : 65535
Passed
sizeof(arg_prealloca) = 8
Now length is : 74999
Passed
sizeof(arg_prealloca) = 8
Now length is : 1048575
Passed
##ALLOW_OUTPUT 32BIT_GTM
Do &noprealloc(.outval)
%YDB-E-ZCNOPREALLOUTPAR, Parameter 1 in external call <DEFAULT>.noprealloc is an output only parameter requiring pre-allocation
		At M source location prealloc+30^prealloc

YDB>

YDB>
Do ^maxpreal
%YDB-I-EXTSRCLIN, 	alloc1mb:	void	xc_new_alloc_1mb(O:xc_char_t *[1048578])

								^-----
%YDB-I-EXTSRCLOC, 		At column 40, line 2, source module gtmxc_maxprealloc.tab
%YDB-E-ZCPREALLVALINV, The pre-allocation value exceeded the maximum string length
		At M source location maxpreal+3^maxpreal

YDB>

YDB>
Do ^maxprealstr
%YDB-I-EXTSRCLIN, 	alloc1mbstr:	void	xc_new_alloc_1mbstr(O:xc_string_t *[1048578])

									^-----
%YDB-I-EXTSRCLOC, 		At column 48, line 2, source module gtmxc_maxpreallocstr.tab
%YDB-E-ZCPREALLVALINV, The pre-allocation value exceeded the maximum string length
		At M source location maxprealstr+3^maxprealstr

YDB>

YDB>
Do ^xccallin
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called
Timer Handler called

YDB>

YDB>
Do ^xcfcnper
_gtm_fcnpercent


YDB>

YDB>
Do ^xcshlib
%YDB-I-EXTSRCLIN, 		GTMSHLIBEXIT = 

				       ^-----
%YDB-I-EXTSRCLOC, 		At column 15, line 3, source module gtmxc_shlib.tab
%YDB-E-ZCCLNUPRTNMISNG, External call: Cleanup routine name missing. Cannot continue
		At M source location +1^xcshlib

YDB>

YDB>
Do ^xcshlib
##TEST_AWK%YDB-E-DLLNORTN, Failed to look up the location of the symbol abcd,.*
		At M source location +1^xcshlib

YDB>

YDB>
Do ^xcshlib
%YDB-I-EXTSRCLIN, 		GMSHLIBEXT = 

				    ^-----
%YDB-I-EXTSRCLOC, 		At column 12, line 3, source module gtmxc_shlib.tab
%YDB-E-ZCINVALIDKEYWORD, External call: Invalid keyword found. Cannot continue
		At M source location +1^xcshlib

YDB>

YDB>
Do ^skipargs
testInt(2): NON-ZERO, NON-ZERO, and NON-ZERO
testLong(1): NON-ZERO and NON-ZERO
testIntStar(0): NON-NULL(NON-ZERO) and NON-NULL(NON-ZERO)
testLongStar(2): NON-ZERO, ZERO, and NON-NULL(NON-ZERO)
testFloatStar(2): NON-ZERO, NON-NULL(NON-ZERO), NON-NULL(NON-ZERO), NON-NULL(NON-ZERO), and NON-NULL(NON-ZERO)
testDoubleStar(1): NON-ZERO and NON-NULL(NON-ZERO)
testCharStar(3): NON-ZERO, NON-NULL(NON-ZERO), NON-ZERO, and NON-NULL(NON-ZERO)
testString(1): NON-NULL(NON-NULL,NON-ZERO,NON-ZERO), NON-NULL(NON-NULL,NON-ZERO,NON-ZERO), and NON-NULL(NON-NULL,NON-ZERO,NON-ZERO)
testInt(3): NON-ZERO, ZERO, and NON-ZERO
testLong(2): ZERO and ZERO
testIntStar(2): NON-NULL(ZERO) and NON-NULL(NON-ZERO)
testLongStar(3): ZERO, ZERO, and NON-NULL(ZERO)
testFloatStar(4): NON-ZERO, NON-NULL(ZERO), NON-NULL(ZERO), NON-NULL(ZERO), and NON-NULL(NON-ZERO)
testDoubleStar(2): ZERO and NON-NULL(NON-ZERO)
testCharStar(3): ZERO, NON-NULL(ZERO), NON-ZERO, and NON-NULL(NON-ZERO)
testString(3): NON-NULL(NULL,ZERO,NON-ZERO), NON-NULL(NULL,ZERO,NON-ZERO), and NON-NULL(NON-NULL,NON-ZERO,ZERO)
%YDB-E-LVUNDEF, Undefined local variable: a1
testLong(2): ZERO and ZERO
%YDB-E-LVUNDEF, Undefined local variable: a3
testLongStar(3): ZERO, ZERO, and NON-NULL(ZERO)
%YDB-E-LVUNDEF, Undefined local variable: e5
%YDB-E-LVUNDEF, Undefined local variable: b6
%YDB-E-LVUNDEF, Undefined local variable: b7
%YDB-E-LVUNDEF, Undefined local variable: a8

YDB>
##TEST_AWKTEST-I-...... Unicode section of the xcall test
