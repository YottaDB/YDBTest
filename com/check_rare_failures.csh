#!/usr/local/bin/tcsh -f
#################################################################
#								#
# Copyright (c) 2010-2015 Fidelity National Information		#
# Services, Inc. and/or its subsidiaries. All rights reserved.	#
#								#
# Copyright (c) 2018 YottaDB LLC. and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################
#
################ check_rare_failures.csh ################
#
if ($# != 3) then
	echo "usage: check_rare_failures.csh <test> <subtest> <diff file>"
	echo "   <test> is the test being run"
	echo "   <subtest> is the subtest being run.  If no subtest, it should be ."
	echo "   <diff file> is the file with the differences between the test output and the reference file"
	exit
endif
set echo_style = "sysv"
set testname = $1
set subtest = $2
set difffile = $3

if (! -e $difffile) then
	exit
endif
if (-z $difffile) then
	exit
endif

$grep -q -E 'There are (core|YDB_FATAL) files' $difffile
if (! $status) then
	# There are core files. Strictly check for "Cores allowed"
	set core = 1
else
	set core = "."
endif
echo $testname | $grep -E -q '.*_[0-9]{1,6}_[0-9]{1,6}'
if (! $status) then
	set testname = `echo $testname | sed 's/_[0-9]*$//'`
endif

set line = `$tst_awk '($1 == "'$testname'" || $1 == ".") && ($2 == "'$subtest'" || $2 == ".") && ($4 ~ /'$core'/) {print}' $gtm_tst/com/rare_failures.txt`
set nflds = `echo $line | $tst_awk '{print NF}'`
@ index = 0
@ count = 0
set siglist = "\n"
while ($index < $nflds)
	@ sub = $index + 3	# Key string to look for
	$grep $line[$sub] $difffile >& /dev/null
	@ stat = $status
	@ index = $index + 5	# Reset the index to the next line
	if (0 != $stat) then
		continue
	endif
	@ sub = $sub + 2	# mrep signature field
	set siglist = "${siglist}$line[$sub]\n"
	@ count = $count + 1
end
if (0 < $count) then
	set timestamp = `date +%H%M%S`
	\mv $difffile ${difffile}_${timestamp}
	set litsig = "signature"
	if (1 < $count) set litsig = `echo "${litsig}s"`
	echo "The diff file generated by this test failure looks like it could be related to the following"	>!  $difffile
	echo "mrep ${litsig}:"  										>>! $difffile
	echo "$siglist"												>>! $difffile
	echo "Look at the mrep resolution files for more information."						>>! $difffile
	echo "The original diff file is now named ${difffile}_${timestamp}"					>>! $difffile
endif


