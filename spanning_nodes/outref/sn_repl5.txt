Verify that replication filters properly generate key- and record-size-related errors between an older and current version

##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$gtm_tst/com/dbcreate_base.csh mumps [0-9]* [0-9]* >&! db_create-a.outx; \$grep MUNOSTRMBKUP dbcreate.out >&! /dev/null; if \(! \$status\) \$gtm_tst/com/check_error_exist.csh dbcreate.out MUNOSTRMBKUP >&! munostrmbkup-a.outx'==
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$MUPIP set -replication=on -journal=.* -REG "\*" >&! mupip_set-a.out'==

==Executing MULTISITE_REPLIC 'START INST1 INST2 RP'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==

==Executing MULTISITE_REPLIC 'STOP INST1'==

==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##TEST_AWK##GTM_LIBRARY_PATH##/.*/mupip
##TEST_AWK##GTM_LIBRARY_PATH##/.*/mupip integ -REG \*
No errors detected by integ.

==Executing MULTISITE_REPLIC 'RUN INST2 set update_log = `ls RCVR_*.updproc`; $gtm_tst/com/check_error_exist.csh $update_log KEY2BIG; $gtm_tst/com/backup_dbjnl.csh dir-a "$update_log *dat *.mjl* *.gld" mv'==
----------
Error KEY2BIG seen in ##FILTERED##RCVR_##TIMESTAMP##.log.updproc as expected:
##TEST_AWK%GTM-E-KEY2BIG, Key size \([0-9]*\) is greater than maximum \([0-9]*\) for region: [A-Z]*
----------

###################################################################
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$gtm_tst/com/dbcreate_base.csh mumps [0-9]* >&! db_create-b.outx; \$grep MUNOSTRMBKUP dbcreate.out >&! /dev/null; if \(! \$status\) \$gtm_tst/com/check_error_exist.csh dbcreate.out MUNOSTRMBKUP >&! munostrmbkup-b.outx'==
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$MUPIP set -replication=on -journal=.* -REG "\*" >&! mupip_set-b.out'==

==Executing MULTISITE_REPLIC 'START INST1 INST2 RP'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==

==Executing MULTISITE_REPLIC 'STOP INST1'==

==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##TEST_AWK##GTM_LIBRARY_PATH##/.*/mupip
##TEST_AWK##GTM_LIBRARY_PATH##/.*/mupip integ -REG \*
No errors detected by integ.

==Executing MULTISITE_REPLIC 'RUN INST2 set update_log = `ls RCVR_*.updproc`; $gtm_tst/com/check_error_exist.csh $update_log GVSUBOFLOW; $gtm_tst/com/backup_dbjnl.csh dir-b "$update_log *dat *.mjl* *.gld" mv'==
----------
Error GVSUBOFLOW seen in ##FILTERED##RCVR_##TIMESTAMP##.log.updproc as expected:
%GTM-E-GVSUBOFLOW, Maximum combined length of subscripts exceeded
----------

###################################################################
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$gtm_tst/com/dbcreate_base.csh mumps [0-9]* >&! db_create-c.outx; \$grep MUNOSTRMBKUP dbcreate.out >&! /dev/null; if \(! \$status\) \$gtm_tst/com/check_error_exist.csh dbcreate.out MUNOSTRMBKUP >&! munostrmbkup-c.outx'==
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$MUPIP set -replication=on -journal=.* -REG "\*" >&! mupip_set-c.out'==

==Executing MULTISITE_REPLIC 'START INST1 INST2 RP'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==

==Executing MULTISITE_REPLIC 'STOP INST1'==

==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##TEST_AWK##GTM_LIBRARY_PATH##/.*/mupip
##TEST_AWK##GTM_LIBRARY_PATH##/.*/mupip integ -REG \*
No errors detected by integ.

==Executing MULTISITE_REPLIC 'RUN INST2 set update_log = `ls RCVR_*.updproc`; $gtm_tst/com/check_error_exist.csh $update_log REC2BIG; $gtm_tst/com/backup_dbjnl.csh dir-c "$update_log *dat *.mjl* *.gld" mv'==
----------
Error REC2BIG seen in ##FILTERED##RCVR_##TIMESTAMP##.log.updproc as expected:
##TEST_AWK%GTM-E-REC2BIG, Record size \([0-9]*\) is greater than maximum \([0-9]*\) for region: [A-Z]*
----------

