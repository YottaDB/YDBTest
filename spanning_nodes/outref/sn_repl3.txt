Verify that replication instances can communicate properly so long as the record sizes of
updates written on the primary do not exceed the limit set on the secondary.

###################################################################
##TEST_AWKRecord \(value\): 255 \(INST1\); [0-9]* \(INST2\)
###################################################################

##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 source \$gtm_tst/com/set_limits.csh; \$gtm_tst/com/dbcreate_base.csh mumps [0-9] [0-9]* \$MIN_RECORD_SIZE [0-9]* >&! db_create1.outx; \$grep MUNOSTRMBKUP dbcreate.out >&! /dev/null; if \(! \$status\) \$gtm_tst/com/check_error_exist.csh dbcreate.out MUNOSTRMBKUP >&! munostrmbkup1.outx'==
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$MUPIP set -replication=on -journal=.* -REG "\*" >&! mupip_set1.out'==

==Executing MULTISITE_REPLIC 'START INST1 INST2 RP'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==

==Executing MULTISITE_REPLIC 'RUN SRC=INST1 RCV=INST2 $gtm_tst/com/cp_remote_file.csh __SRC_DIR__/check1.m _REMOTEINFO___RCV_DIR__/'==
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_dist/mumps -run check1'==
value is ''

==Executing MULTISITE_REPLIC 'STOP INST1'==

==Executing MULTISITE_REPLIC 'EXTRACT ALL'==
DATABASE EXTRACT PASSED

==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.

==Executing MULTISITE_REPLIC 'RUN INST2 set update_log = `ls RCVR_*.updproc`; $gtm_tst/com/check_error_exist.csh $update_log REC2BIG; $gtm_tst/com/backup_dbjnl.csh record1 "$update_log *dat *.mjl* *.gld" mv'==
----------
Error REC2BIG seen in ##FILTERED##RCVR_##TIMESTAMP##.log.updproc as expected:
##TEST_AWK%YDB-E-REC2BIG, Record size \(1\) is greater than maximum \(0\) for region: [A-Z]*
----------

###################################################################
Record (value): 65024 (INST1); 255 (INST2)
###################################################################

##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 source \$gtm_tst/com/set_limits.csh; \$gtm_tst/com/dbcreate_base.csh mumps [0-9] [0-9]* 255 [0-9]* >&! db_create2.outx; \$grep MUNOSTRMBKUP dbcreate.out >&! /dev/null; if \(! \$status\) \$gtm_tst/com/check_error_exist.csh dbcreate.out MUNOSTRMBKUP >&! munostrmbkup2.outx'==
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$MUPIP set -replication=on -journal=.* -REG "\*" >&! mupip_set2.out'==

==Executing MULTISITE_REPLIC 'START INST1 INST2 RP'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==

==Executing MULTISITE_REPLIC 'RUN SRC=INST1 RCV=INST2 $gtm_tst/com/cp_remote_file.csh __SRC_DIR__/check2.m _REMOTEINFO___RCV_DIR__/'==
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_dist/mumps -run check2'==
length is 255

==Executing MULTISITE_REPLIC 'STOP INST1'==

==Executing MULTISITE_REPLIC 'EXTRACT ALL'==
DATABASE EXTRACT PASSED

==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.

==Executing MULTISITE_REPLIC 'RUN INST2 set update_log = `ls RCVR_*.updproc`; $gtm_tst/com/check_error_exist.csh $update_log REC2BIG; $gtm_tst/com/backup_dbjnl.csh record2 "$update_log *dat *.mjl* *.gld" mv'==
----------
Error REC2BIG seen in ##FILTERED##RCVR_##TIMESTAMP##.log.updproc as expected:
##TEST_AWK%YDB-E-REC2BIG, Record size \(256\) is greater than maximum \(255\) for region: [A-Z]*
----------

###################################################################
##TEST_AWKRecord \(value\): [0-9]* \(INST1\); 65024 \(INST2\)
###################################################################

##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 source \$gtm_tst/com/set_limits.csh; \$gtm_tst/com/dbcreate_base.csh mumps [0-9] [0-9]* 65024 [0-9]* -null_subscripts=ALWAYS >&! db_create3.outx; \$grep MUNOSTRMBKUP dbcreate.out >&! /dev/null; if \(! \$status\) \$gtm_tst/com/check_error_exist.csh dbcreate.out MUNOSTRMBKUP >&! munostrmbkup3.outx'==
##TEST_AWK==Executing MULTISITE_REPLIC 'RUN INST2 \$MUPIP set -replication=on -journal=.* -REG "\*" >&! mupip_set3.out'==

==Executing MULTISITE_REPLIC 'START INST1 INST2 RP'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2

==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==

==Executing MULTISITE_REPLIC 'RUN SRC=INST1 RCV=INST2 $gtm_tst/com/cp_remote_file.csh __SRC_DIR__/check3.m _REMOTEINFO___RCV_DIR__/'==
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_dist/mumps -run check3'==
length is 65024

==Executing MULTISITE_REPLIC 'STOP INST1'==

==Executing MULTISITE_REPLIC 'EXTRACT ALL'==
DATABASE EXTRACT PASSED

==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.

==Executing MULTISITE_REPLIC 'RUN INST2 set update_log = `ls RCVR_*.updproc`; $gtm_tst/com/check_error_exist.csh $update_log REC2BIG; $gtm_tst/com/backup_dbjnl.csh record3 "$update_log *dat *.mjl* *.gld" mv'==
----------
Error REC2BIG seen in ##FILTERED##RCVR_##TIMESTAMP##.log.updproc as expected:
##TEST_AWK%YDB-E-REC2BIG, Record size \(65025\) is greater than maximum \(65024\) for region: [A-Z]*
----------

