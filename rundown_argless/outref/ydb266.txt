# Create MSR framework test environment
# Create database files on source and receiver side
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
Files Created in ##FILTERED##_REMOTE_TEST_PATH_/instance2:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
mumps.dat
# Start replication servers on source and receiver side
==Executing MULTISITE_REPLIC 'START INST1 INST2'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2
# Wait for the replication servers to be up
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/wait_for_log.csh -log ##FILTERED##RCVR_##TIMESTAMP##.log -message "New History Content"'==
# Kill all processes accessing the database on source side.
# Kill all processes accessing the database on receiver side.
==Executing MULTISITE_REPLIC 'RUN INST2 fuser *.dat *.repl RCVR*.log >>& kill.log; fuser -k *.dat *.repl RCVR*.log >>& kill.log;'==
# Start time for monitoring syslog
# Run argumentless mupip rundown. Use -override to avoid MUUSERLBK errors. Redirect output to [rundown.log].
# Capture all syslog messages from the start time into file [syslog.txt].
# Number of SHMREMOVED and SEMREMOVED messages in mupip rundown output = 10
# Verify SHMREMOVED and SEMREMOVED messages in mupip rundown output MATCH that in the syslog
PASS
# Filter out known possible %YDB-W- and %YDB-E- messages from argumentless mupip rundown output
# In the argumentless mupip rundown output, it is possible to see any of the following.
# a) %YDB-W-MUNOTALLSEC if non-YottaDB ipcs owned by user ids other than the current userid (that is running this test)
#    exist on the system.
# b) %YDB-E-VERMISMATCH messages if YottaDB ipcs created by a different YottaDB release than the one running this test
#    exist on the system.
# c) %YDB-E-MUJPOOLRNDWNFL messages if YottaDB journal pool ipcs left over from tests run by user ids other than the
#    current user id exist on the system.
# d) %YDB-E-MURPOOLRNDWNFL messages if YottaDB receive pool ipcs left over from tests run by user ids other than the
#    current user id exist on the system.
# e) %YDB-E-MUFILRNDWNFL2 messages if YottaDB database ipcs created by a different YottaDB release than the one running
#    this test exist on the system
# f) %SYSTEM-E-ENO13, Permission denied messages if YottaDB database ipcs created by a different user id than the one
#    running this test exist on the system. A stat() of the database file name stored in database shared memory pointed
#    to by the databse shmid would return a permission denied error in that case.
# So filter all of the above out to avoid non-deterministic reference file.
