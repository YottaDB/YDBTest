Create database on GT.CM Servers ( ##TEST_GTCM_SERVER_LIST##)...
##GT.CM##Files Created in ##TEST_REMOTE_PATH_GTCM##:
##GT.CM##Using: ##SOURCE_PATH##/mumps -run GDE
##GT.CM##mumps.gld
##GT.CM##Using: ##SOURCE_PATH##/mupip
Create local (client) database...
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
The database layout is:
ASEG	a.dat
BSEG	##TEST_REMOTE_NODE_PATH_GTCM##/b.dat
CSEG	##TEST_REMOTE_NODE_PATH_GTCM##/c.dat
DEFAULT	##TEST_REMOTE_NODE_PATH_GTCM##/mumps.dat
Starting the GT.CM Servers...
Changing the key size to a larger value at one remote host
^adoes=1
^bthis=2
^cfly=3
^dat=4
^zall="?"
^aforapplecomputers="I never crash & i belong to global ^aforapplecomputers"
^aillruntoolongtobecalledalongna=1002
^aforappl="If this is not ^aforappl you have got the wrong guy"
^beherestaylongtocheck="B file long name & i belong to global ^beherestaylongtocheck"
^beherest="If this is not ^beherest wrong one buddy"
^begintochecklongname31chartrunc="Iam rightly truncated here"
^begintochecklongname31chartrunc="Iam rightly truncated here"
^cmecorrecthere=670
^Cmecorrectthere="New Value me"
^cmecorrecthereagainonemoretime=567
^Dothingsrightthefirsttime="Hi this is correct and i belong to ^Dothingsrightthefirsttime"
^Dothings="If this is not ^Dothings this is wrong"
^DingomeDingo=980
^zeezeetelevision=707
^zeezeete=999
^zeelongmelongmelongme="Hi iam mumps"
^BGLOBALFORREGB(1)="^BGLOBALFORREGB(1)"
^BGLOBALFORREGIONB(1)="^BGLOBALFORREGIONB(1)"
^BGLOBALFORREGIONB("some subsc")="^BGLOBALFORREGIONB(str)"
^CGLOBALFORREGC(1)="^CGLOBALFORREGC(1)"
^CGLOBALFORREGIONC(1)="^DGLOBALFORREGIONC(1)"
^BGLOBALFORREGIONC("some subsc")="^BGLOBALFORREGIONC(str)"
^DGLOBALFORREGD(1)="^DGLOBALFORREGD(1)"
^DGLOBALFORREGIOND(1)="^DGLOBALFORREGIOND(1)"
^BGLOBALFORREGIOND("some subsc")="^BGLOBALFORREGIOND(str)"
^ZGLOBALFORREGDEFAULT(1)="^ZGLOBALFORREGDEFAULT(1)"
^ZGLOBALFORREGIONDEFAULT(1)="^ZGLOBALFORREGIONDEFAULT(1)"
^ZGLOBALFORREGIONDEFAULT("some subsc")="^ZGLOBALFORREGIONDEFAULT(str)"

GTM>
GLD:*,REG:*,SET:0,KIL:0,GET:0,DTA:0,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:0,DWT:0,NTW:0,NTR:0,NBW:0,NBR:0,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:0,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:0,CFE:0,CFS:0,CFT:0,CQS:0,CQT:0,CYS:0,CYT:0
TESTING SET...
^A=5
^A(1)=1
^A(2)=" 2"
^A(3)="  3"
^A(4)="   4"
^A(5)="    5"
^A(12,23)=12
^A(23,34)=23
^A(34,"4Z")=34
^A("-")="-"
^A("._")="._"
^A("/.")="/."
^A("4Z","ZY")="4Z"
^A("AB","BC")="AB"
^A("BC","CD")="BC"
^A("CD","D1")="CD"
^A("D1",12)="D1"
^A("_-")="_-"
^A("ab")="ab"
^A("bc")="bc"
^A("cd")="cd"
^A("d/")="d/"
^D=5
^D(1)=1
^D(2)=" 2"
^D(3)="  3"
^D(4)="   4"
^D(5)="    5"
^D(12,23)=12
^D(23,34)=23
^D(34,"4Z")=34
^D("-")="-"
^D("._")="._"
^D("/.")="/."
^D("4Z","ZY")="4Z"
^D("AB","BC")="AB"
^D("BC","CD")="BC"
^D("CD","D1")="CD"
^D("D1",12)="D1"
^D("_-")="_-"
^D("ab")="ab"
^D("bc")="bc"
^D("cd")="cd"
^D("d/")="d/"
##SUSPEND_OUTPUT  MM
val("G",0)="GLD:*,REG:*,SET:22,KIL:0,GET:42,DTA:30,ORD:38,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:22,NTR:111,NBW:25,NBR:266,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:22,KIL:0,GET:42,DTA:30,ORD:38,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:26,DRD:XX,DWT:XX,NTW:22,NTR:111,NBW:25,NBR:266,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
##ALLOW_OUTPUT  MM
##SUSPEND_OUTPUT BG
val("G",0)="GLD:*,REG:*,SET:22,KIL:0,GET:42,DTA:30,ORD:38,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:22,NTR:111,NBW:25,NBR:266,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:22,KIL:0,GET:42,DTA:30,ORD:38,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:26,DRD:XX,DWT:XX,NTW:22,NTR:111,NBW:25,NBR:266,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
##ALLOW_OUTPUT  BG

GTM>

TESTING $DATA...
$D(^A)=11   $D(^D)=11
$DATA output of various elements of the arrays:
(^, ^("AB"), ^("impossible"), ^(2) for each array)
11,10,0,1;11,10,0,1;11,10,0,1;11,10,0,1;11,10,0,1;
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:0,DTA:5,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:6,NBW:0,NBR:12,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:0,DTA:5,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:6,NBW:0,NBR:12,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"

TESTING $QUERY...
^A(1)=1
^A(2)= 2
^A(3)=  3
^A(4)=   4
^A(5)=    5
^A(12,23)=12
^A(23,34)=23
^A(34,"4Z")=34
^A("-")=-
^A("._")=._
^A("/.")=/.
^A("4Z","ZY")=4Z
^A("AB","BC")=AB
^A("BC","CD")=BC
^A("CD","D1")=CD
^A("D1",12)=D1
^A("_-")=_-
^A("ab")=ab
^A("bc")=bc
^A("cd")=cd
^A("d/")=d/
^D(1)=1
^D(2)= 2
^D(3)=  3
^D(4)=   4
^D(5)=    5
^D(12,23)=12
^D(23,34)=23
^D(34,"4Z")=34
^D("-")=-
^D("._")=._
^D("/.")=/.
^D("4Z","ZY")=4Z
^D("AB","BC")=AB
^D("BC","CD")=BC
^D("CD","D1")=CD
^D("D1",12)=D1
^D("_-")=_-
^D("ab")=ab
^D("bc")=bc
^D("cd")=cd
^D("d/")=d/
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:42,DTA:0,ORD:0,ZPR:0,QRY:44,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:87,NBW:0,NBR:174,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:42,DTA:0,ORD:0,ZPR:0,QRY:44,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:87,NBW:0,NBR:174,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"

TESTING Reverse $QUERY...
^A("d/")=d/
^A("cd")=cd
^A("bc")=bc
^A("ab")=ab
^A("_-")=_-
^A("D1",12)=D1
^A("CD","D1")=CD
^A("BC","CD")=BC
^A("AB","BC")=AB
^A("4Z","ZY")=4Z
^A("/.")=/.
^A("._")=._
^A("-")=-
^A(34,"4Z")=34
^A(23,34)=23
^A(12,23)=12
^A(5)=    5
^A(4)=   4
^A(3)=  3
^A(2)= 2
^A(1)=1
^A=5
^D("d/")=d/
^D("cd")=cd
^D("bc")=bc
^D("ab")=ab
^D("_-")=_-
^D("D1",12)=D1
^D("CD","D1")=CD
^D("BC","CD")=BC
^D("AB","BC")=AB
^D("4Z","ZY")=4Z
^D("/.")=/.
^D("._")=._
^D("-")=-
^D(34,"4Z")=34
^D(23,34)=23
^D(12,23)=12
^D(5)=    5
^D(4)=   4
^D(3)=  3
^D(2)= 2
^D(1)=1
^D=5
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:44,DTA:0,ORD:0,ZPR:0,QRY:46,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:91,NBW:0,NBR:182,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:44,DTA:0,ORD:0,ZPR:0,QRY:46,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:91,NBW:0,NBR:182,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"

TESTING $GET...
$GET(^A(1))=1
$GET(^BLONGGLOBALVARIABLE(1))=1
$GET(^CGLOBALVARIABLE(1))=1
$GET(^D(1))=1
$GET(^BWITHKEYLENGRTRTHANLOCAL("withaverylongsubscript",1))=1
$GET(^A(10000))=NO VALUE
$GET(^BLONGGLOBALVARIABLE(10000))=NO VALUE
$GET(^CGLOBALVARIABLE(10000))=NO VALUE
$GET(^D(10000))=NO VALUE
$GET(^BWITHKEYLENGRTRTHANLOCAL("withaverylongsubscript",10000))=NO VALUE
$GET(^A("AB","BC"))=AB
$GET(^BLONGGLOBALVARIABLE("AB","BC"))=AB
$GET(^CGLOBALVARIABLE("AB","BC"))=AB
$GET(^D("AB","BC"))=AB
$GET(^BWITHKEYLENGRTRTHANLOCAL("withaverylongsubscript","AB","BC"))=AB
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:6,DTA:0,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:7,NBW:0,NBR:14,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:6,DTA:0,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:7,NBW:0,NBR:14,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"

TESTING $ORDER...
^A: 1, 2, 3, 4, 5, 12, 23, 34, -, ._, /., 4Z, AB, BC, CD, D1, _-, ab, bc, cd, d/, 
^BLONGGLOBALVARIABLE: 1, 2, 3, 4, 5, 12, 23, 34, -, ._, /., 4Z, AB, BC, CD, D1, _-, ab, bc, cd, d/, 
^BWITHKEYLENGRTRTHANLOCAL: 1, 2, 3, 4, 5, 12, 23, 34, -, ._, /., 4Z, AB, BC, CD, D1, _-, ab, bc, cd, d/, 
^CGLOBALVARIABLE: 1, 2, 3, 4, 5, 12, 23, 34, -, ._, /., 4Z, AB, BC, CD, D1, _-, ab, bc, cd, d/, 
^D: 1, 2, 3, 4, 5, 12, 23, 34, -, ._, /., 4Z, AB, BC, CD, D1, _-, ab, bc, cd, d/, 
^A: ^BGLOBALFORREGB
##SUSPEND_OUTPUT  MM
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:0,DTA:5,ORD:30,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:40,NBW:0,NBR:80,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:0,DTA:5,ORD:30,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:40,NBW:0,NBR:80,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
##ALLOW_OUTPUT  MM
##SUSPEND_OUTPUT BG
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:0,DTA:5,ORD:30,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:40,NBW:0,NBR:80,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:0,DTA:5,ORD:30,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:40,NBW:0,NBR:80,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
##ALLOW_OUTPUT  BG

OTHER WAY ROUND...
^A: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^BLONGGLOBALVARIABLE: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^BWITHKEYLENGRTRTHANLOCAL: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^CGLOBALVARIABLE: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^D: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^A: 
##SUSPEND_OUTPUT  MM
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:0,DTA:10,ORD:30,ZPR:28,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:73,NBW:0,NBR:146,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:0,DTA:10,ORD:30,ZPR:28,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:73,NBW:0,NBR:146,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
##ALLOW_OUTPUT  MM
##SUSPEND_OUTPUT BG
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:0,DTA:10,ORD:30,ZPR:28,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:73,NBW:0,NBR:146,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:0,DTA:10,ORD:30,ZPR:28,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:73,NBW:0,NBR:146,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
##ALLOW_OUTPUT  BG

TESTING $ZPREVIOUS...
^A: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^BLONGGLOBALVARIABLE: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^BWITHKEYLENGRTRTHANLOCAL: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^CGLOBALVARIABLE: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^D: d/, cd, bc, ab, _-, D1, CD, BC, AB, 4Z, /., ._, -, 34, 23, 12, 5, 4, 3, 2, 1, 
^A: 
val("G",0)="GLD:*,REG:*,SET:0,KIL:0,GET:0,DTA:0,ORD:0,ZPR:22,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:23,NBW:0,NBR:46,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:0,GET:0,DTA:0,ORD:0,ZPR:22,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:0,NTR:23,NBW:0,NBR:46,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"

TESTING SET $PIECE...
^A("piece")="a b c d e f g h i j k l"
^D("piece")="a b c d e f g h i j k l"
set them piece by piece...
^A("piece")=
1 b c d e f g h i j k l
1 2 c d e f g h i j k l
1 2 3 d e f g h i j k l
1 2 3 4 e f g h i j k l
1 2 3 4 5 f g h i j k l
1 2 3 4 5 6 g h i j k l
1 2 3 4 5 6 7 h i j k l
1 2 3 4 5 6 7 8 i j k l
1 2 3 4 5 6 7 8 9 j k l

^D("piece")=
1 b c d e f g h i j k l
1 2 c d e f g h i j k l
1 2 3 d e f g h i j k l
1 2 3 4 e f g h i j k l
1 2 3 4 5 f g h i j k l
1 2 3 4 5 6 g h i j k l
1 2 3 4 5 6 7 h i j k l
1 2 3 4 5 6 7 8 i j k l
1 2 3 4 5 6 7 8 9 j k l
^A("piece")="1 2 3 4 5 6 7 8 9 j k l"
^D("piece")="1 2 3 4 5 6 7 8 9 j k l"
val("G",0)="GLD:*,REG:*,SET:10,KIL:0,GET:21,DTA:4,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:10,NTR:26,NBW:10,NBR:72,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:10,KIL:0,GET:21,DTA:4,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:36,DRD:XX,DWT:XX,NTW:10,NTR:26,NBW:10,NBR:72,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
OF DIF. LENGTHS
^A("piece")="a b c d e f g h i j k l"
^D("piece")="a b c d e f g h i j k l"
^A("piece")=
1 c d e f g h i j k l
1 2 f g h i j k l
1 2 3 j k l
1 2 3 4
^D("piece")=
1 c d e f g h i j k l
1 2 f g h i j k l
1 2 3 j k l
1 2 3 4
^A("piece")="1 2 3 4"
^D("piece")="1 2 3 4"
val("G",0)="GLD:*,REG:*,SET:5,KIL:0,GET:11,DTA:4,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:5,NTR:15,NBW:5,NBR:40,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:5,KIL:0,GET:11,DTA:4,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:41,DRD:XX,DWT:XX,NTW:5,NTR:15,NBW:5,NBR:40,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"

TESTING SET $EXTRACT...
^A("extract")="abcdefghijkl"
^D("extract")="abcdefghijkl"
^A("extract")=
12.efghijkl
12.45.ijkl
12.45.78.
^D("extract")=
12.efghijkl
12.45.ijkl
12.45.78.
^A("extract")="12.45.78."
^D("extract")="12.45.78."
val("G",0)="GLD:*,REG:*,SET:4,KIL:0,GET:9,DTA:4,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:4,NTR:14,NBW:4,NBR:36,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:4,KIL:0,GET:9,DTA:4,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:45,DRD:XX,DWT:XX,NTW:4,NTR:14,NBW:4,NBR:36,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"

TESTING KILL...
kill some...
1111111111
then, kill all...
Any data left?:00000
val("G",0)="GLD:*,REG:*,SET:0,KIL:11,GET:0,DTA:3,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:0,DRD:XX,DWT:XX,NTW:7,NTR:9,NBW:9,NBR:52,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
val("G",1)="GLD:##TEST_PATH##/mumps.gld,REG:AREG,SET:0,KIL:11,GET:0,DTA:3,ORD:0,ZPR:0,QRY:0,LKS:0,LKF:0,CTN:52,DRD:XX,DWT:XX,NTW:7,NTR:9,NBW:9,NBR:52,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX"
$VIEW("GVSTATS",AREG)=SET:45,KIL:11,GET:179,DTA:64,ORD:68,ZPR:50,QRY:90,LKS:0,LKF:0,CTN:53,DRD:XX,DWT:XX,NTW:52,NTR:474,NBW:69,NBR:1072,NR0:0,NR1:0,NR2:0,NR3:0,TTW:0,TTR:0,TRB:0,TBW:0,TBR:0,TR0:0,TR1:0,TR2:0,TR3:0,TR4:0,TC0:0,TC1:0,TC2:0,TC3:0,TC4:0,ZTR:0,DFL:XX,DFS:0,JFL:0,JFS:0,JBB:0,JFB:0,JFW:0,JRL:0,JRP:0,JRE:0,JRI:0,JRO:0,JEX:0,DEX:0,CAT:XX,CFE:XX,CFS:XX,CFT:XX,CQS:XX,CQT:XX,CYS:XX,CYT:XX
$VIEW("GVSTATS",BREG)=
$VIEW("GVSTATS",CREG)=
$VIEW("GVSTATS",DEFAULT)=
Stopping the GT.CM Servers...
Check the databases on the GT.CM Servers...
##GT.CM####SOURCE_PATH##/mupip
##GT.CM####SOURCE_PATH##/mupip integ -REG *
##GT.CM##No errors detected by integ.
Check local (client) database...
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ a.dat
No errors detected by integ.
# Run rqtest08, rqtest07 and rqtest10 sections of the r110/reversequery subtest using GT.CM GNP
# To avoid duplicating that test code here, we copy it explicitly even though it is in a different test
Create database on GT.CM Servers ( ##TEST_GTCM_SERVER_LIST##)...
##GT.CM##Files Created in ##TEST_REMOTE_PATH_GTCM##:
##GT.CM##Using: ##SOURCE_PATH##/mumps -run GDE
##GT.CM##mumps.gld
##GT.CM##Using: ##SOURCE_PATH##/mupip
Create local (client) database...
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
The database layout is:
ASEG	a.dat
BSEG	##TEST_REMOTE_NODE_PATH_GTCM##/b.dat
CSEG	##TEST_REMOTE_NODE_PATH_GTCM##/c.dat
DEFAULT	##TEST_REMOTE_NODE_PATH_GTCM##/mumps.dat
Starting the GT.CM Servers...
 --> Global variable tree on which $query operations are performed
^x=0
^x(1,0)=1
^x(1,2,1)=2
^x(1,2,2)=3
^x(1,2,2,4)=5
^x(1,2,3)=4

 ---> $query(gvn,1) and $query(gvn,-1) on existing gv tree nodes
$query(^x,1)=^x(1,0)
$query(^x(1,0),-1)=^x
$query(^x(1,0),1)=^x(1,2,1)
$query(^x(1,2,1),-1)=^x(1,0)
$query(^x(1,2,1),1)=^x(1,2,2)
$query(^x(1,2,2),-1)=^x(1,2,1)
$query(^x(1,2,2),1)=^x(1,2,2,4)
$query(^x(1,2,2,4),-1)=^x(1,2,2)
$query(^x(1,2,2,4),1)=^x(1,2,3)
$query(^x(1,2,3),-1)=^x(1,2,2,4)
$query(^x(1,2,3),1)=

 ---> $query(gvn,1) on non-existing gv tree nodes
$query(^x(-0.5),1)=^x(1,0)
$query(^x(0.5),1)=^x(1,0)
$query(^x(1.5),1)=
$query(^x(1,-1),1)=^x(1,0)
$query(^x(1,0.5),1)=^x(1,2,1)
$query(^x(1,2.5),1)=
$query(^x(1,2,0.5),1)=^x(1,2,1)
$query(^x(1,2,1.5),1)=^x(1,2,2)
$query(^x(1,2,2.5),1)=^x(1,2,3)
$query(^x(1,2,3.5),1)=
$query(^x(1,2,2,3.5),1)=^x(1,2,2,4)
$query(^x(1,2,2,4.5),1)=^x(1,2,3)

 ---> $query(gvn,-1) on non-existing gv tree nodes
$query(^x(-0.5),-1)=^x
$query(^x(0.5),-1)=^x
$query(^x(1.5),-1)=^x(1,2,3)
$query(^x(1,-1),-1)=^x
$query(^x(1,0.5),-1)=^x(1,0)
$query(^x(1,2.5),-1)=^x(1,2,3)
$query(^x(1,2,0.5),-1)=^x(1,0)
$query(^x(1,2,1.5),-1)=^x(1,2,1)
$query(^x(1,2,2.5),-1)=^x(1,2,2,4)
$query(^x(1,2,3.5),-1)=^x(1,2,3)
$query(^x(1,2,2,3.5),-1)=^x(1,2,2)
$query(^x(1,2,2,4.5),-1)=^x(1,2,2,4)

##### Executing rqtest07 : querydir=1 : nullcoll=STDNULLCOLL #####
$query(^x,1)=^x("")
$query(^x(""),1)=^x(1)
$query(^x(1),1)=^x("abcd")
$query(^x("abcd"),1)=

##### Executing rqtest07 : querydir=-1 : nullcoll=STDNULLCOLL #####
$query(^x("z"),-1)=^x("abcd")
$query(^x("abcd"),-1)=^x(1)
$query(^x(1),-1)=^x("")
$query(^x(""),-1)=

##### Executing rqtest10 with STDNULLCOLL #####
nullcoll = STDNULLCOLL : $query(^x("zz")),-1)=^x("a","a","a")
nullcoll = STDNULLCOLL : $query(^x("a","a","a")),-1)=^x("a","a",0)
nullcoll = STDNULLCOLL : $query(^x("a","a",0)),-1)=^x("a","a","")
nullcoll = STDNULLCOLL : $query(^x("a","a","")),-1)=^x("a",0,"a")
nullcoll = STDNULLCOLL : $query(^x("a",0,"a")),-1)=^x("a",0,0)
nullcoll = STDNULLCOLL : $query(^x("a",0,0)),-1)=^x("a",0,"")
nullcoll = STDNULLCOLL : $query(^x("a",0,"")),-1)=^x("a","","a")
nullcoll = STDNULLCOLL : $query(^x("a","","a")),-1)=^x("a","",0)
nullcoll = STDNULLCOLL : $query(^x("a","",0)),-1)=^x("a","","")
nullcoll = STDNULLCOLL : $query(^x("a","","")),-1)=^x(0,"a","a")
nullcoll = STDNULLCOLL : $query(^x(0,"a","a")),-1)=^x(0,"a",0)
nullcoll = STDNULLCOLL : $query(^x(0,"a",0)),-1)=^x(0,"a","")
nullcoll = STDNULLCOLL : $query(^x(0,"a","")),-1)=^x(0,0,"a")
nullcoll = STDNULLCOLL : $query(^x(0,0,"a")),-1)=^x(0,0,0)
nullcoll = STDNULLCOLL : $query(^x(0,0,0)),-1)=^x(0,0,"")
nullcoll = STDNULLCOLL : $query(^x(0,0,"")),-1)=^x(0,"","a")
nullcoll = STDNULLCOLL : $query(^x(0,"","a")),-1)=^x(0,"",0)
nullcoll = STDNULLCOLL : $query(^x(0,"",0)),-1)=^x(0,"","")
nullcoll = STDNULLCOLL : $query(^x(0,"","")),-1)=^x("","a","a")
nullcoll = STDNULLCOLL : $query(^x("","a","a")),-1)=^x("","a",0)
nullcoll = STDNULLCOLL : $query(^x("","a",0)),-1)=^x("","a","")
nullcoll = STDNULLCOLL : $query(^x("","a","")),-1)=^x("",0,"a")
nullcoll = STDNULLCOLL : $query(^x("",0,"a")),-1)=^x("",0,0)
nullcoll = STDNULLCOLL : $query(^x("",0,0)),-1)=^x("",0,"")
nullcoll = STDNULLCOLL : $query(^x("",0,"")),-1)=^x("","","a")
nullcoll = STDNULLCOLL : $query(^x("","","a")),-1)=^x("","",0)
nullcoll = STDNULLCOLL : $query(^x("","",0)),-1)=^x("","","")
nullcoll = STDNULLCOLL : $query(^x("","","")),-1)=^x
nullcoll = STDNULLCOLL : $query(^x),-1)=

##### Executing rqtest07 : querydir=1 : nullcoll=GTMNULLCOLL #####
$query(^x,1)=^x(1)
$query(^x(1),1)=^x("")
$query(^x(""),1)=^x("abcd")
$query(^x("abcd"),1)=

##### Executing rqtest07 : querydir=-1 : nullcoll=GTMNULLCOLL #####
$query(^x("z"),-1)=^x("abcd")
$query(^x("abcd"),-1)=^x("")
$query(^x(""),-1)=^x(1)
$query(^x(1),-1)=

##### Executing rqtest10 with GTMNULLCOLL #####
nullcoll = GTMNULLCOLL : $query(^x("zz")),-1)=^x("a","a","a")
nullcoll = GTMNULLCOLL : $query(^x("a","a","a")),-1)=^x("a","a","")
nullcoll = GTMNULLCOLL : $query(^x("a","a","")),-1)=^x("a","a",0)
nullcoll = GTMNULLCOLL : $query(^x("a","a",0)),-1)=^x("a","","a")
nullcoll = GTMNULLCOLL : $query(^x("a","","a")),-1)=^x("a","","")
nullcoll = GTMNULLCOLL : $query(^x("a","","")),-1)=^x("a","",0)
nullcoll = GTMNULLCOLL : $query(^x("a","",0)),-1)=^x("a",0,"a")
nullcoll = GTMNULLCOLL : $query(^x("a",0,"a")),-1)=^x("a",0,"")
nullcoll = GTMNULLCOLL : $query(^x("a",0,"")),-1)=^x("a",0,0)
nullcoll = GTMNULLCOLL : $query(^x("a",0,0)),-1)=^x("","a","a")
nullcoll = GTMNULLCOLL : $query(^x("","a","a")),-1)=^x("","a","")
nullcoll = GTMNULLCOLL : $query(^x("","a","")),-1)=^x("","a",0)
nullcoll = GTMNULLCOLL : $query(^x("","a",0)),-1)=^x("","","a")
nullcoll = GTMNULLCOLL : $query(^x("","","a")),-1)=^x("","","")
nullcoll = GTMNULLCOLL : $query(^x("","","")),-1)=^x("","",0)
nullcoll = GTMNULLCOLL : $query(^x("","",0)),-1)=^x("",0,"a")
nullcoll = GTMNULLCOLL : $query(^x("",0,"a")),-1)=^x("",0,"")
nullcoll = GTMNULLCOLL : $query(^x("",0,"")),-1)=^x("",0,0)
nullcoll = GTMNULLCOLL : $query(^x("",0,0)),-1)=^x(0,"a","a")
nullcoll = GTMNULLCOLL : $query(^x(0,"a","a")),-1)=^x(0,"a","")
nullcoll = GTMNULLCOLL : $query(^x(0,"a","")),-1)=^x(0,"a",0)
nullcoll = GTMNULLCOLL : $query(^x(0,"a",0)),-1)=^x(0,"","a")
nullcoll = GTMNULLCOLL : $query(^x(0,"","a")),-1)=^x(0,"","")
nullcoll = GTMNULLCOLL : $query(^x(0,"","")),-1)=^x(0,"",0)
nullcoll = GTMNULLCOLL : $query(^x(0,"",0)),-1)=^x(0,0,"a")
nullcoll = GTMNULLCOLL : $query(^x(0,0,"a")),-1)=^x(0,0,"")
nullcoll = GTMNULLCOLL : $query(^x(0,0,"")),-1)=^x(0,0,0)
nullcoll = GTMNULLCOLL : $query(^x(0,0,0)),-1)=^x
nullcoll = GTMNULLCOLL : $query(^x),-1)=
Stopping the GT.CM Servers...
Check the databases on the GT.CM Servers...
##GT.CM####SOURCE_PATH##/mupip
##GT.CM####SOURCE_PATH##/mupip integ -REG *
##GT.CM##No errors detected by integ.
Check local (client) database...
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ a.dat
No errors detected by integ.
# Run C9E10002648 test using GT.CM GNP
# To avoid duplicating that test code here, we copy it explicitly even though it is in a different test
Create database on GT.CM Servers ( ##TEST_GTCM_SERVER_LIST##)...
##GT.CM##Files Created in ##TEST_REMOTE_PATH_GTCM##:
##GT.CM##Using: ##SOURCE_PATH##/mumps -run GDE
##GT.CM##mumps.gld
##GT.CM##Using: ##SOURCE_PATH##/mupip
Create local (client) database...
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
The database layout is:
ASEG	a.dat
BSEG	##TEST_REMOTE_NODE_PATH_GTCM##/b.dat
CSEG	##TEST_REMOTE_NODE_PATH_GTCM##/c.dat
DEFAULT	##TEST_REMOTE_NODE_PATH_GTCM##/mumps.dat
Starting the GT.CM Servers...

Running test1
----------------------------------------------------
Testing $O(-1) for Global
255
65
1

Testing $O(-1) for Local 
255
65
1


Running test2
----------------------------------------------------
Direction=1

Direction=-1


Running test3
----------------------------------------------------
PASS from test3

Running test4
----------------------------------------------------
$REFERENCE after $query(^x(1,3))=^x(1,3)
$REFERENCE after $order(^x(1,5),1)=^x(1,5)
$REFERENCE after $order(^x(1,5),-1)=^x(1,5)
Stopping the GT.CM Servers...
Check the databases on the GT.CM Servers...
##GT.CM####SOURCE_PATH##/mupip
##GT.CM####SOURCE_PATH##/mupip integ -REG *
##GT.CM##No errors detected by integ.
Check local (client) database...
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ a.dat
No errors detected by integ.
